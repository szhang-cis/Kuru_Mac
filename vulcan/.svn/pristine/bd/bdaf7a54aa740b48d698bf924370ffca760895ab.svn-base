      SUBROUTINE CONMTX(ELDAT,ELPRE,ELVAR,ELMAT,LNODS,MATNO,PROEL,
     .                  PROPS,WORK1)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP SOME CONSTANT MATRICES FOR FUTURE USE
C     IT EVALUATES ONCE AND FOR ALL ( IF NECESSARY ) :
C
C         - MASS MATRIX              (IF KDYNA=1)
C         - PERMEABILITY MATRIX      (IF KPORE=2)
C         - FLUID COMPRESSIB. MATRIX (IF KPORE=2)
C         - INITIAL COUPLING MATRIX  (IF KPORE=2)
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
C
      DIMENSION MATNO(NELEM),       LNODS(NNODE,NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX),
     .          WORK1(*)
C
      IF(KDYNA.EQ.0.AND.KPORE.NE.2) RETURN
C
      CALL CPUTIM(TIME1)
C
C**** LOOP ON ELEMENTS
C
      KEROR=0
      DO 1000 IELEM=1,NELEM
      LGRUP=MATNO(IELEM)
      LMATS=INT(PROEL(1,LGRUP))
C
C**** READ ELDAT FROM DATA BASE
C
      IF(NMEMO1M.EQ.0.OR.NMEMO2M.EQ.0)
     . CALL DATBAS(ELDAT,    1,    2)
C
C**** COMPUTE MASS MATRIX IF NECESSARY
C
      IF(KDYNA.NE.0) THEN
       CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .             WORK1,WORK1,WORK1,WORK1,WORK1,
     .             ELDAT,ELPRE,ELVAR,ELMAT,WORK1,    2)
       IF(NMEMO6M.EQ.0) CALL DATBAS(ELMAT(IMATX(3)),    8,    1)
      ENDIF
C
C**** COMPUTE PERMEABILITY, FLUID COMPRESSIBILITY & COUPLING MATRICES
C     IF NECESSARY
C
      IF(KPORE.EQ.2) THEN
       CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .             WORK1,WORK1,WORK1,WORK1,WORK1,
     .             ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   21)
       CALL DATBAS(ELMAT(IMATX(4)),    9,    1)
       CALL DATBAS(ELMAT(IMATX(5)),   10,    1)
       CALL DATBAS(ELMAT(IMATX(6)),   11,    1)
      ENDIF
 1000 CONTINUE
C
      CALL CPUTIM(TIME2)
      CPUST=CPUST+(TIME2-TIME1)
C
      RETURN
      END
