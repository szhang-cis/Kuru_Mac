      SUBROUTINE RSTAR3(DISPR,DISTO,ELPRE,ELVAR,HEADS,HTLOD,IFFIX,
     .                  REFOR,RLOAD,TLOAD,IFLAG)
C***********************************************************************
C
C**** THIS ROUTINE REFORMS THE FOLLOWING TASKS:
C
C     NEW     RUN: WRITES THE RESULTS OF THE CURRENT TIME STEP
C     RESTART RUN: READS THE RESULTS OF THE SELECTED TIME STEP 
C                ( record pointer KPOST has been identified in 
C                  routine rschek )
C
C     - IFLAG = 1 - NEW     RUN: WRITE INTO RESTART FILE 
C     - IFLAG = 2 - RESTART RUN: READ  FROM RESTART FILE
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      DIMENSION HTLOD(NHLOD,NSUBF,NFUNC), IFFIX(NTOTV,2),
     .          RLOAD(NTOTV)
      DIMENSION DISPR(NTOTV,NDISR),       DISTO(NTOTV,NDISO),
     .          HEADS(NPOIN,4),           REFOR(NTOTV),
     .          TLOAD(NTOTV,2)
      DIMENSION ELPRE(NPREV),             ELVAR(NSTAT)
C
      CALL CPUTIM(TIME1)
C
      IF(IFLAG.EQ.1)
     . OPEN(UNIT=LURST,FILE=CK,STATUS='OLD',ACCESS='DIRECT',
     .      FORM='UNFORMATTED',RECL=LENRC)
C
C**** WRITE OR READ ALL COMMON VARIABLES
C
      IF(IFLAG.EQ.1)THEN
C
C**** WRITE COMMON BLOCK 'INTERVL_OM'
C
       WRITE(LURST,REC=NRECC+1) 
C
C**** COMMON/CONSTNA/
     .               DAMP1,DAMP2,DITER,DTIME,GRAVY,GVECT,
     .               STIFI,TALFA,TBETA,TOLER,XTIME,WLUMP,
C**** COMMON/CURRENA/
     .               ITIME,ISTEP,IITER,KDTIM,KRESL,KSTIF,KUNLD,
     .               NCHEK,
C**** COMMON/CURRENB/
     .               ARCLN,FACTO,FACPR,PITER,PVALU,STICU,
     .               STIIN,TFACT,TTIME,
C**** COMMON/INTERVA/
     .               IMPOS,KALGO,KARCL,KDAMP,KINTE,KOPTI,KCONV,
     .               LACCE,LAUTO,LINES,MITER,NALGO,NBACK,NCDIS,
     .               NSTEP,NOUTP
C
C**** WRITE COMMON BLOCK 'INP_OUT_OM'
C
C**** COMMON/PLOTERA/ & COMMON/PLOTERB/
       WRITE(LURST,REC=NRECC+2) NCOLD,NCURV,NPONT,FORMA
       WRITE(LURST,REC=NRECC+3) MPLOT
C
      ELSE
C
C**** READ COMMON BLOCK 'INTERVL_OM'
C
       READ(LURST,REC=NRECC+1) 
C
C**** COMMON/CONSTNA/
     .               DAMP1,DAMP2,DITER,DTIME,GRAVY,GVECT,
     .               STIFI,TALFA,TBETA,TOLER,XTIME,WLUMP,
C**** COMMON/CURRENA/
     .              ITIME,ISTEP,IITER,KDTIM,KRESL,KSTIF,KUNLD,
     .              NCHEK,
C**** COMMON/CURRENB/
     .              ARCLN,FACTO,FACPR,PITER,PVALU,STICU,
     .              STIIN,TFACT,TTIME,
C**** COMMON/INTERVA/
     .               IMPOS,KALGO,KARCL,KDAMP,KINTE,KOPTI,KCONV,
     .               LACCE,LAUTO,LINES,MITER,NALGO,NBACK,NCDIS,
     .               NSTEP,NOUTP
C
C**** READ COMMON BLOCK 'INP_OUT_OM'
C
C**** COMMON/PLOTERA/ & COMMON/PLOTERB/
       READ(LURST,REC=NRECC+2) NCOLD,NCURV,NPONT,FORMA
       READ(LURST,REC=NRECC+3) MPLOT
ctm
ctmC.....COMMON/I_P_C/
ctm        READ(LURST,REC=NRECC+4) IPCST,NTURN,NITEM,PNAME,EXIMP
ctm        READ(LURST,REC=NRECC+5) TOLED,IPARA
ctm
C
      ENDIF
C
C**** READ FROM PROCESS AREA AND WRITE TO CONVERGED AREA ELPRE & ELVAR
C
      IF(IFLAG.EQ.1) THEN
       DO IELEM=1,NELEM
C
C**** READ ELPRE & ELVAR ( CURRENT )
C
        IF(NMEMOM.EQ.1)
     .   CALL DATBAS(ELPRE,    2,    2)
        CALL DATBAS(ELVAR,    3,    2)
C
C**** WRITE ELPRE & ELVAR
C
        IF(NMEMOM.EQ.1)
     .   CALL DATRST(ELPRE,    2,    1)
        CALL DATRST(ELVAR,    3,    1)
       ENDDO
      ENDIF
C
C**** READ OR WRITE ALL MATRICES
C
      CALL DATRST(DISTO,   4,IFLAG)
C
      CALL DATRST(DISPR,   5,IFLAG)
C
      CALL DATRST(HEADS,   6,IFLAG)
C
      CALL DATRST(REFOR,   7,IFLAG)
C
      CALL DATRST(TLOAD,   8,IFLAG)
C
      CALL DATRST(HTLOD,   9,IFLAG)
C
      CALL DATRST(IFFIX,  10,IFLAG)
C
      CALL DATRST(RLOAD,  11,IFLAG)
C
C**** WRITE HEADINGS
C
      IF(IFLAG.EQ.1) THEN
       WRITE(LURST,REC=    1) ITIME,ISTEP,TTIME,NRECC,KTSTE
       WRITE(LURST,REC=NRECC) ITIME,ISTEP,TTIME,NRECC,KTSTE
      ENDIF
C
      IF(IFLAG.EQ.1) CLOSE(LURST)
C
      CALL CPUTIM(TIME2)
      CPURS=CPURS+(TIME2-TIME1)
      RETURN
C
      END
