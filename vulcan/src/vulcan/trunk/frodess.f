      SUBROUTINE FRODESS(LOCEL,LNODS,NACVA,NBUFA,NDEST,NDOFN,NELEM,
     .                   NEVAB,NFRON,NNODE,NSTIF)
C***********************************************************************
C
C**** THIS ROUTINE IDENTIFIES THE FRONT DESTINATION OF THE CURRENT 
C     ELEMENTAL EQUATION
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
c     CHARACTER*80  CAT,CBT,CCT,CDT,CET,CFT,CGT,CHT,CIT,CJT,CKT,CLT,
c    .              CMT,CNT,COT,CPT,CQT,CRT,CST,
c    .              CA1T,CB1T,CC1T,CD1T,CE1T,CF1T,
c    .              C1T,C2T,C3T,C4T,C5T,C6T,C7T,C8T,C9T,C10T
C
c     COMMON/NAMETA/CAT,CBT,CCT,CDT,CET,CFT,CGT,CHT,CIT,CJT,CKT,CLT,
c    .              CMT,CNT,COT,CPT,CQT,CRT,CST,
c    .              CA1T,CB1T,CC1T,CD1T,CE1T,CF1T,
c    .              C1T,C2T,C3T,C4T,C5T,C6T,C7T,C8T,C9T,C10T
      CHARACTER*80  CBS,CDS,CES,CFS,CGS,CJS,
     .              C1S
C
      COMMON/NAMESA/CBS,CDS,CES,CFS,CGS,CJS,
     .              C1S
C
c     COMMON/LOGUNT/LUDTST,LUSOLT,LUFROT,LUFRHT,LUDATT,LUPRIT,LUREST,
c    .              LUSO2T,LUFR2T,LUPOST,LURSTT,LUBFGT,LUPIPT,LUPANT,
c    .              LUGEOT,LUSETT,LUMATT,LUINIT,LULOAT,LUFIXT,LUADVT,
c    .              LUACTS,LUFANS,
c    .              LUCU1T,LUCU2T,LUCU3T,LUCU4T,LUCU5T,LUCU6T,LUCU7T,
c    .              LUCU8T,LUCU9T,LUC10T
      COMMON/LOGUNS/LUSOLS,LUFRHS,LUDATS,LUPRIS,LURESS,LUPOSS,
     .              LUCU1S
C
      DIMENSION LOCEL(NEVAB), LNODS(NNODE,*), NACVA(NFRON),
     .          NDEST(NEVAB)
C
C**** OPEN FILE .frhk
C
      OPEN(UNIT=LUFRHS,FILE=CDS,STATUS='UNKNOWN',FORM='UNFORMATTED')
ctm
ctm   only necessary for arc-length problems (karclt ne 0)
ctm
ctm      OPEN(UNIT=LUFR2T,FILE=CIT,STATUS='UNKNOWN',FORM='UNFORMATTED')
ctm                                                               !.fro2
ctm
C
      REWIND LUFRHS
      WRITE(LUFRHS) NBUFA,NFRON,NSTIF
C
      DO 1 IFRON=1,NFRON
    1 NACVA(IFRON)=0
C
      KFRON=0
C
C**** LOOP ON ELEMENTS
C
      DO 100 IELEM=1,NELEM
C
      DO 5 INODE=1,NNODE
      DO 5 IDOFN=1,NDOFN
      NPOSI=(INODE-1)*NDOFN+IDOFN
      LOCNO=LNODS(INODE,IELEM)
      LOCEL(NPOSI)=0
      IF(LOCNO.GT.0) LOCEL(NPOSI)=(LOCNO-1)*NDOFN+IDOFN
      IF(LOCNO.LT.0) LOCEL(NPOSI)=(LOCNO+1)*NDOFN-IDOFN
    5 CONTINUE
C
C**** START BY LOOKING FOR EXISTING DESTINATIONS
C
      KEVAB=0
      DO 10 IEVAB=1,NEVAB
      NIKNO=IABS(LOCEL(IEVAB))
C
      IF(KFRON.NE.0)THEN
        KEXIS=0
        DO 20 IFRON=1,KFRON
        IF(NIKNO.NE.NACVA(IFRON))GOTO 20
cmem        KEVAB=KEVAB+1
        kevab=ievab
        KEXIS=1
        if(kevab.gt.nevab)
     .   call runends('frodest 1                         ')
        NDEST(KEVAB)=IFRON
   20   CONTINUE
        IF(KEXIS.NE.0)GOTO 10
      ENDIF
C
C**** WE NOW SEEK NEW EMPTY PLACES FOR DESTINATION VECTOR
C
      DO 30 IFRON=1,NFRON
      IF(NACVA(IFRON).NE.0)GOTO 30
      NACVA(IFRON)=NIKNO
cmem      KEVAB=KEVAB+1
      kevab=ievab
      if(kevab.gt.nevab)
     . call runends('frodest 2                         ')
      NDEST(KEVAB)=IFRON
      GOTO 40
   30 CONTINUE
C
C**** THE NEW PLACES MAY DEMAND AN INCREASE IN CURRENT FRONTWIDTH
C
   40 IF(NDEST(KEVAB).GT.KFRON) KFRON=NDEST(KEVAB)
C
   10 CONTINUE
C
      IF(KFRON.GT.NFRON)
     . CALL RUNENDS('ERROR IN FRODEST: KFRON            ')
C
C**** STORE IN TAPE ELEMENT DESTINATION
C
      WRITE(LUFRHS) LOCEL,NDEST,KFRON
      WRITE(LUFRHS) (NACVA(IACVA), IACVA=1,KFRON)
C
C**** RETURN ALL NODAL CONNECTION NUMBERS TO POSITIVE VALUES
C
      DO 50 INODE=1,NNODE
   50 LNODS(INODE,IELEM)=IABS(LNODS(INODE,IELEM))
C
C**** FIND POSITIONS OF VARIABLES READY FOR ELIMINATION
C
      DO 1000 IEVAB=1,NEVAB
      NIKNO=-LOCEL(IEVAB)
      IF(NIKNO.LE.0)GOTO 1000
      DO 1500 IFRON=1,KFRON
      IF(NACVA(IFRON).NE.NIKNO)GOTO 1500
C
C**** RECORD THE NEW VACANT SPACE, AND REDUCE FRONTWIDTH IF POSSIBLE
C
      NACVA(IFRON)=0
      GOTO 1100
 1500 CONTINUE
C
C**** COMPLETE THE ELEMENT LOOP IN THE FORWARD ELIMINATION
C
 1100 IF(NACVA(KFRON).NE.0)GOTO 1000
      KFRON=KFRON-1
      IF(KFRON.GT.0)GOTO 1100
C
 1000 CONTINUE
C
  100 CONTINUE
C
      RETURN
      END
