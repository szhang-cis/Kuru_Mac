      SUBROUTINE SKYASST(CSTIF,GSTDI,GSTLO,GSTUP,LNUEQ,LPONT,
     .                   KSYMM,LNODS,NDOFN,NELEM,NEQNS,NEVAB,
     .                   NLAST,NNODE,NWIDT,NTOTV,NPOIN,
     .                   NPREL,NGRUP,NPROP,NMATS,
     .                   NDATA,NPREV,NSTAT,NMATX,NDIME,NTOTVM,NFPCH,
     .                   MATNO,PROEL,PROPS,ELDAT,ELPRE,
     .                   ELVAR,ELMAT,WORK1,DISTO,COORD,DISIT,
     .                   ADVEL,TEMPI,PREAS,TGAPS,DISPL,FPCHA,LACTI)
C***********************************************************************
C
C**** THIS ROUTINE ASSEMBLES THE ELEMENTAL STIFFNESS MATRIX 
C     (SYMMETRIC OR UNSYMMETRIC) INTO THE GLOBAL STIFFNESS ARRAYS
C
C.... INPUT PARAMETERS
C
C     CSTIF(NEVAB,NEVAB)      - SQUARE ARRAY CONTAINING ELEMENT MATRIX
C     LNUEQ(NTOTV)            - VECTOR OF DESTINATIONS IN GLOBAL ARRAY
C     LPONT(NTOTV)            - POINTERS TO BOTTOM OF COLUMNS OF GSTLO
C                               & GSTUP
C     KSYMM                   - FLAG DEFINING SYMMETRY OF MATRIX
C     NWIDT                   - MAXIMUM HALF-WIDTH ALLOWED
C
C.... OUPUT PARAMETERS
C
C     GSTDI(NTOTV)            - DIAGONAL OF GLOBAL MATRIX
C     GSTLO(KPOSI(NTOTV))     - LOWER TRIANGULAR PART OF PROFILE STORED
C                               GLOBAL MATRIX (NEEDED IF UNSYMMETRIC)
C     GSTUP(KPOSI(NTOTV))     - UPPER TRIANGULAR PART OF PROFILE STORED
C                               GLOBAL MATRIX
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_omt.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'auxl_omt.f'
C
      DIMENSION CSTIF(NEVAB,NEVAB), GSTDI(*), GSTLO(*), GSTUP(*),
     .          LNODS(NNODE,*),     LNUEQ(*), LPONT(*)
C
      DIMENSION MATNO(NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX)
      DIMENSION DISTO(NTOTV,3),     COORD(NDIME,NPOIN),
     .          DISIT(NTOTV)
      DIMENSION ADVEL(NTOTV*NDIME), TEMPI(NPOIN,2)
      DIMENSION PREAS(NPOIN),       TGAPS(NPOIN)
      DIMENSION DISPL(NTOTVM),      FPCHA(NFPCH,NPOIN),
     .          LACTI(NELEM)
C
C**** INITIALISE GLOBAL MATRIX  
C
      DO 10 IEQNS=1,NEQNS
   10 GSTDI(IEQNS)=0.
      IF(KSYMM.LT.2) THEN
       DO 20 IPROF=1,NLAST
   20  GSTUP(IPROF)=0.
       IF(KSYMM.EQ.0) THEN
        DO 30 IPROF=1,NLAST
   30   GSTLO(IPROF)=0.0
       ENDIF
      ENDIF
C
C**** ASSEMBLE GLOBAL MATRIX 
C
      DO 1000 IELEMT=1,NELEM
C
C**** READ CSTIF FROM DATA BASE
C 
      IF(NMEMO7.EQ.0) THEN
       CALL DATBAST(CSTIF,    6,    2)
      ELSE
       CALL STIFMST(ELDAT,ELPRE,ELVAR,ELMAT,LNODS,MATNO,PROEL,
     .              PROPS,WORK1,DISTO(1,2),DISIT,COORD,
     .              ADVEL,TEMPI(1,1),PREAS,TGAPS,DISTO(1,1),
     .              TEMPI(1,2),DISPL,FPCHA,LACTI,CSTIF)
      ENDIF
C
      DO 100 INODE=1,NNODE
      IPOIN=LNODS(INODE,IELEMT)
      IF(IPOIN.EQ.0) GO TO 1000
      IEVAB=(INODE-1)*NDOFN
      ITOTV=(IPOIN-1)*NDOFN
C
      DO 100 IDOFN=1,NDOFN
      IEVAB=IEVAB+1
      ITOTV=ITOTV+1
      IDEST=LNUEQ(ITOTV)
      IF(IDEST.GT.0) THEN
C
C**** LOOP THROUGH THE COLUMNS TO PERFORM THE ASSEMBLY
C
       DO 40 JNODE=1,NNODE
       JPOIN=LNODS(JNODE,IELEMT)
       IF(JPOIN.EQ.0) GO TO 200
       JEVAB=(JNODE-1)*NDOFN
       JTOTV=(JPOIN-1)*NDOFN
       DO 40 JDOFN=1,NDOFN
       JEVAB=JEVAB+1
       JTOTV=JTOTV+1
       IF(LNUEQ(JTOTV).GE.IDEST)THEN
        IF(LNUEQ(JTOTV).EQ.IDEST)THEN
         GSTDI(IDEST)=GSTDI(IDEST)+CSTIF(IEVAB,JEVAB)
        ELSE
         IF(NWIDT.NE.0) THEN                       ! Non-diagonal Terms
          JDEST=LNUEQ(JTOTV)
          JLOCA=IDEST+LPONT(JDEST)-JDEST+1
          IF(JLOCA.GT.LPONT(JDEST-1)) THEN         ! Check on Band-width
           GSTUP(JLOCA)=GSTUP(JLOCA)+CSTIF(IEVAB,JEVAB)
           IF(KSYMM.EQ.0)GSTLO(JLOCA)=GSTLO(JLOCA)
     .                  +CSTIF(JEVAB,IEVAB)        ! Lower triangle
          ENDIF
         ENDIF
        ENDIF
       ENDIF
   40  CONTINUE
  200  CONTINUE
      ENDIF
C
  100 CONTINUE
C
 1000 CONTINUE
C
      RETURN
      END
