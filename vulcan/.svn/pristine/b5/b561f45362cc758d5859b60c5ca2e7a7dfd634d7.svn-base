      SUBROUTINE RENUM0(LNODS,LPNTN,NELEM,NNODE,NPOIN,IWORK)
C**********************************************************************
C                 
C**** THIS ROUTINE SETS UP ARRAY LPNTN IF NODE RENUMBERING FOR
C     PROFILE MINIMIZATION IS DESIRED
C                 
C**********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'auxl_om.f'
C
      COMMON/LOGUN/LUDTS,LUSOL,LUFRO,LUFRH,LUDAT,LUPRI,LURES,
     .             LUSO2,LUFR2,LUPOS,LURST,LUBFG,LUPIP,LUPAN,LUINF,
     .             LUGEO,LUSET,LUMAT,LUINI,LULOA,LUFIX,LUIN1,
     .             LUTUN,LUCON,LUACT,LUFAN,
     .             LUCU1,LUCU2,LUCU3,LUCU4,LUCU5,LUCU6,LUCU7,
     .             LUCU8,LUCU9,LUC10
C
      DIMENSION LNODS(NNODE,*), LPNTN(*), IWORK(*)
C
C.... COMPUTES THE CONNECTIONS BETWEEN DEGREES OF FREEDOM
C
      N1 = 1
      CALL RENUM1(LNODS,IWORK(N1),NNODE,NPOIN,NELEM,NPOSI)
C
C.... AUXILIAR MEMORY FOR RENUMBERING
C
      N2 = N1 + NPOSI          !  NODAL CONNECTIONS
      N3 = N2 + NPOIN          !  NSTART
      N4 = N3 + NPOIN          !  LEVEL
      IF(N4.GT.LWOR1*2) THEN
       WRITE(LURES,'(''RENUMBERING MODULE REQUIRES MORE WORKING SPACE'',
     .             2I10)') N4, LWOR1
       CALL RUNEND('INSUFFICIENT WORK SPACE TO RENUMBER')
      ENDIF
C
C.... RENUMBERING ROUTINES
C
      CALL RENUM2(IWORK(N1),IWORK(N2),IWORK(N3),LPNTN,NPOIN,NS)
      CALL RENUM3(IWORK(N1),IWORK(N2),IWORK(N3),LPNTN,NPOIN,NS)
C
C.... OBTAIN THE INVERSE OF ARRAY LPNTN
C
      DO IPOIN=1,NPOIN
	IWORK(LPNTN(IPOIN))=IPOIN
      ENDDO
C
C.... PRINT RENUMBERED NODES
C
      WRITE(LURES,900)
      DO IPOIN=1,NPOIN
        WRITE(LURES,901) IPOIN,LPNTN(IPOIN),IPOIN,IWORK(IPOIN)
      ENDDO
 900  FORMAT(//,5X,'RENUMBERED NODES :',//,7X,'OLD',7X,'NEW',
     .                                    17X,'NEW',7X,'OLD',/)
 901  FORMAT(2(5X,I5),10X,2(5X,I5))
C
      DO IPOIN=1,NPOIN
	LPNTN(IPOIN)=IWORK(IPOIN)
      ENDDO
C
      RETURN
      END
