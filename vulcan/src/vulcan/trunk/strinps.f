      SUBROUTINE STRINPS
C***********************************************************************
C
C**** THIS ROUTINE READS THE STRATEGY CONTROLLING PARAMETERS FOR THE
C     CURRENT TIME INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'auxl_oms.f'
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'inpo_oms.f'
C
      PARAMETER (MCOMMS=16)
      CHARACTER*5 COMMDS(MCOMMS)
      DATA COMMDS/'ACCEL','ALGOR','ARCLE','CONVE','FINAL','LINES',
     .            'LOADI','OUTPU','DRIFT','NODAL','STEPP','TIMEI',
     .            'RESTA','POSTP','PLOT' ,'END_S'/
C
      WRITE(LURESS,900)
C
C**** RESET RESTART DEFAULT TO NSTEP
C
      IF(KSAVES.NE.-1) THEN
       NOUTPS(1)=NSTEPS
       KSAVES=0
      ENDIF
C
C**** READ NEW PARAMETERS IF DESIRED
C
      NPRINS=0
      ITAPES=LUDATS
  200 CALL LISTENS('STRINPS',NPRINS,ITAPES)
C
C**** IDENTIFY COMMAND
C
      DO ICOMMS=1,MCOMMS
       IF(WORDSS(1).EQ.COMMDS(ICOMMS)) GOTO 300
      ENDDO
      GO TO 1000 
C
  300 CONTINUE
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), ICOMMS
C
C**** 'ACCEL' ACTIVATES OR DISACTIVATES SOLUTION ACCELARATION
C     (DEFAULT LACCE=0)
C
    1 CONTINUE
      call runends('strinps 1')
C
c     LACCET=0
c     NACCET=INT(PARAMT(1))
c     IF(WORDST(2).EQ.'ON') LACCET=NACCET
C
      GO TO 200
C
C**** 'ALGOR' DEFINES TYPE OF SOLUTION ALGORITHM 
C     (DEFAULT: NALGO=1)
C
    2 CONTINUE
C
      NALGOS=1
      IF(WORDSS(2).EQ.'UPDAT') THEN
       IF(INT(PARAMS(1)).GT.1) THEN
        NALGOS=INT(PARAMS(1))
        IF(INT(PARAMS(2)).GT.0) KALGOS=INT(PARAMS(2))
        IF(INT(PARAMS(3)).GT.0) KALGOS=INT(PARAMS(3))
       ENDIF
      ENDIF
C
      GO TO 200
C
C**** 'ARCLE' SELECTS ARC-LENGTH OPTIONS
C     (DEFAULT KARCL=0, NODIS,NFDIS,NCDIS= NOT DEFINED)
C
    3 CONTINUE
      call runends('strinps 3')
C
c     KARCLT=0
c     IF(WORDST(2).EQ.'NORMA') KARCLT=1
c     IF(WORDST(2).EQ.'UPDAT') KARCLT=2
c     IF(WORDST(2).EQ.'SPHER') KARCLT=3
c     IF(WORDST(2).EQ.'DISPL') KARCLT=4
c     IF(KARCLT.EQ.4) THEN
c      NODIST=INT(PARAMT(1))
c      NFDIST=INT(PARAMT(2))
c      NCDIST=(NODIST-1)*NDOFNT+NFDIST
c     ENDIF
C
      GO TO 200
C
C**** 'CONVE' DEFINES CONVERGENCE CRITERIA
C     (DEFAULT KCONV=1, MINTE=50 & TOLER=1%)
C
    4 CONTINUE
C
      KCONVS=1
      IF(WORDSS(2).EQ.'INCRE') KCONVS=2
      IF(WORDSS(2).EQ.'TEMPE') KCONVS=3
      IF(WORDSS(2).EQ.'ENERG') KCONVS=4
      IF(PARAMS(1).GT.0.)      MITERS=INT(PARAMS(1))
      IF(PARAMS(2).NE.0.)      TOLERS=PARAMS(2)
C
      ITRUCS=0
      TRUCHS=1.0
      IF(PARAMS(3).NE.0.) ITRUCS=INT(PARAMS(3))
      IF(PARAMS(4).NE.0.) TRUCHS=PARAMS(4)
C
      ITRUCVS=0
      IF(WORDSS(3).EQ.'VARIA') ITRUCVS=1     ! variable strategy
C
      IF(NNUPTS.EQ.0) THEN    ! no subincrem. & var. strat. for no ph-ch
       ITRUCS=MITERS
       ITRUCVS=0
      ENDIF
C
      GO TO 200
C
C**** 'FINAL' END OF ANALYSIS OPTION
C     (DEFAULT STIFI=0    N.B. IF STIFI=0 IT IS NOT USED AFTERWARDS)
C
    5 CONTINUE
      call runends('strinps 5')
C
c     IF(PARAMT(1).GT.0.) STIFIT=PARAMT(1)
c     STIFIT=STIFIT/100.
C
      GO TO 200
C
C**** 'LINES' LINE SEARCH
C
    6 CONTINUE
      call runends('strinps 6')
C
c     LINEST=0
c     IF(WORDST(2).EQ.'ON') LINEST=1
C
      GO TO 200
C
C**** 'LOADI' SELECTS LOAD INCREMENTATION OPTIONS
C     (DEFAULT LAUTO=0, DITER= NOT DEFINED)
C
    7 CONTINUE
      call runends('strinps 7')
C
c     LAUTOT=0
c     IF(WORDST(2).EQ.'ITERA') LAUTOT=1
c     IF(WORDST(2).EQ.'STI1')  LAUTOT=2
c     IF(WORDST(2).EQ.'STI2')  LAUTOT=3
c     DITERT=PARAMT(1)
c     IF(LAUTOT.GT.1) DITERT=DITERT/100.
C
      GO TO 200
C
C**** 'OUTPU' SELECTS OUTPUT FREQUENCY (see outcekt.f)
C
    8 CONTINUE
C
      IF(WORDSS(2).EQ.'TEMPE') THEN
       NOUTPS( 4)=INT(PARAMS(1))
       NOUTPS(13)=INT(PARAMS(2))
      ENDIF
C
c     IF(WORDST(2).EQ.'G_HEA') THEN
c      IF(NMEMO4.EQ.0) THEN
c       CALL RUNMENT('WARNING: GAUSSIAN HEATS WITH NMEMO4=0           ')
c       NOUTPT( 5)=0
c       NOUTPT(14)=0
c      ELSE
c       NOUTPT( 5)=INT(PARAMT(1))
c       NOUTPT(14)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
c     IF(WORDST(2).EQ.'G_TGR') THEN              ! not implemented
c      IF(NMEMO4.EQ.0) THEN
c       CALL RUNMENT('WARNING: GAUSSIAN TEMP. GRAD. WITH NMEMO4=0     ')
c       NOUTPT( 6)=0
c       NOUTPT(15)=0
c      ELSE
c       NOUTPT( 6)=INT(PARAMT(1))
c       NOUTPT(15)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
c     IF(WORDST(2).EQ.'G_INT') THEN
c      IF(NMEMO3.EQ.0.OR.NNUINT.EQ.0) THEN
c       CALL RUNMENT('WARNING: GAUSS INT. VAR. WITH NMEMO3=0-NNUINT=0 ')
c       NOUTPT( 7)=0
c       NOUTPT(16)=0
c      ELSE
c       NOUTPT( 7)=INT(PARAMT(1))
c       NOUTPT(16)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
c     IF(WORDST(2).EQ.'N_HEA') THEN
c      IF(KSGAUT.EQ.0)
c    .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
c      IF(NMEMO4.EQ.0) THEN
c       CALL RUNMENT('WARNING: NODAL HEATS WITH NMEMO4=0              ')
c       NOUTPT( 8)=0
c       NOUTPT(17)=0
c      ELSE
c       NOUTPT( 8)=INT(PARAMT(1))
c       NOUTPT(17)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
c     IF(WORDST(2).EQ.'N_PHA') THEN
c      NOUTPT( 9)=INT(PARAMT(1))
c      NOUTPT(18)=INT(PARAMT(2))
c     ENDIF
C
c     IF(WORDST(2).EQ.'N_INT') THEN
c      IF(KSGAUT.EQ.0)
c    .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
c      IF(NMEMO3.EQ.0.OR.NNUINT.EQ.0) THEN
c       CALL RUNMENT('WARNING: NODAL INT. VAR. WITH NMEMO3=0-NNUINT=0 ')
c       NOUTPT(20)=0
c       NOUTPT(21)=0
c      ELSE
c       NOUTPT(20)=INT(PARAMT(1))
c       NOUTPT(21)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
c     IF(WORDST(2).EQ.'N_POR') THEN
c      IF(KSGAUT.EQ.0)
c    .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
c      IF(NPOROT.EQ.0) THEN
c       CALL RUNMENT('WARNING: NO POROSITY CRITERIA HAS BEEN IMPUT    ')
c       NOUTPT(22)=0
c       NOUTPT(23)=0
c      ELSE
c       NOUTPT(22)=INT(PARAMT(1))
c       NOUTPT(23)=INT(PARAMT(2))
c      ENDIF
c     ENDIF
C
      IF(WORDSS(2).EQ.'ALL') THEN
       IF(KSGAUS.EQ.0)
     .  CALL RUNMENS('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       IF(NMEMO4S.EQ.0.OR.NMEMO3S.EQ.0.OR.NNUINS.EQ.0) THEN
        CALL RUNMENS('WARNING: ALL WITH NMEMO4=0, NMEMO3S=0, NNUINS=0 ')
        NOUTPS(10)=0
        NOUTPS(19)=0
       ELSE
        NOUTPS(10)=INT(PARAMS(1))
        NOUTPS(19)=INT(PARAMS(2))
       ENDIF
      ENDIF
C
      GO TO 200
C
C**** 'DRIFT' DEFINES TYPE OF PLASTIC BACK PROJECTION 
C     (DEFAULT: NBACK=1)
C     
    9 CONTINUE
      call runends('strinps 9')
C
c     NBACKT=1
c     IF(WORDST(2).EQ.'MODIF') NBACKT=2
C
      GO TO 200
C
C**** 'NODAL' ACTIVATES OR DISACTIVATES SMOOTHING OF EXPWP
C     (DEFAULT KSMUS= OFF)
C
   10 CONTINUE
      call runends('strinps 10')
C
c     IF(WORDST(2).EQ.'ON')  KSMUST= IABS(KSMUST)
c     IF(WORDST(2).EQ.'OFF') KSMUST=-IABS(KSMUST)
c     IF(PARAMT(1).NE.0.)    WLUMPT=PARAMT(1)
C
      GO TO 200
C
C**** 'STEPP' DEFINE TIME STEPPING ALGORITHM 
C     (DEFAULT KINTE=0, TALFA & TBETA NOT DEFINED)
C
   11 CONTINUE
C
      KINTES=0
      IF(WORDSS(2).EQ.'EULER') KINTES=1
      IF(WORDSS(2).EQ.'NEWMA') KINTES=2
      IF(WORDSS(2).EQ.'HUGHE') THEN
       IF(WORDSS(3).EQ.'V_FOR') KINTES=3
       IF(WORDSS(3).EQ.'D_FOR') KINTES=4
      ENDIF
      CONSTS=PARAMS(1)
c     IF(CONSTS.LT.0.5) CONSTS=.5
      IF(KINTES.NE.2) THEN
       TALFAS=CONSTS
       TBETAS=1.
       NCETAS=0
       IF(PARAMS(2).NE.0.) NCETAS=INT(PARAMS(2))
      ELSE
       CNEW1S=CONSTS
       CNEW2S=PARAMS(2)
       IF(CNEW2S.EQ.0.) CNEW2S=(CNEW1S+.5)**2/4.
       TALFAS=    1./CNEW2S
       TBETAS=CNEW1S/CNEW2S
      ENDIF
      GO TO 200
C
C**** 'TIMEI' SELECTS TIME INCREMENTATION OPTIONS
C     (DEFAULT KOPTI=0, XTIME=1.)
C
   12 CONTINUE
      call runends('strinps 12')
C
c     KOPTIT=INT(PARAMT(1))
c     IF(PARAMT(2).NE.0.) XTIMET=PARAMT(2)
      GO TO 200
C
C**** 'RESTA' DEFINES FREQUENCY OF RESTART DUMPING
C     (DEFAULT:  KEEP ONLY LAST STEP )
C
   13 CONTINUE
      call runends('strinps 13')
C
c     IF(PARAMT(1).NE.0.0)    NOUTPT( 1)=INT(PARAMT(1))
c     IF(WORDST(2).EQ.'NONE') KSAVET=-1
c     IF(WORDST(2).EQ.'SAVE') KSAVET= 1
      GO TO 200
C
C**** 'POSTP' DEFINES FREQUENCY OF POST-PROCESSING DUMPING
C     (DEFAULT:  NO POST-PROCESSING)
C
   14 CONTINUE
C
C**** ESTABLISHES SOME INDEXES (see setdatt.f)
C
      KPPCGS=0
      KPPCNS=1
C
      IF(KPOSTS.EQ.1) THEN
       IF(KSGAUS.EQ.0)
     .  CALL RUNMENS('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       NOUTPS( 2)=INT(PARAMS(1))
       NOUTPS(11)=INT(PARAMS(2))
      ENDIF
      GO TO 200
C
C**** 'PLOT' DEFINES X-Y PLOTS
C
   15 NFILES=LUDATS
      IFLAGS=0
      IF(WORDSS(2).EQ.'NEW') IFLAGS=1
      IF(PARAMS(1).NE.0) NFILES=INT(PARAMS(1))
      CALL PLOINPS(NFILES,IFLAGS)
      GO TO 200
C
C**** END
C
   16 CONTINUE
C
      RETURN
 1000 CALL RUNENDS('STRINP:ERROR IN STRATEGY DATA BLOCK')
  900 FORMAT(1H1,///)
      END
