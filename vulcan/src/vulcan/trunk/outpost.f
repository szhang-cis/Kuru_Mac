      SUBROUTINE OUTPOST(ELDATT,LNODST,MATNOT,PROELT,PROPST,COORDT,
     .                   GPCODT,
     .                   ELPRET,ELVART,ELMATT,DISPLT,WORK1T)
C***********************************************************************
C
C**** THIS ROUTINE DUMPS THE GEOMETRIC MODEL FOR POSTPROCESS
C
C     Note: Gauss coordinates should not be printed in post file
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_omt.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'            ! thermal-mechanical
      INCLUDE 'nuef_om.f'            ! thermal-flow
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'auxl_omt.f'
C
      DIMENSION MATNOT(NELEMT),        LNODST(NNODET,NELEMT),
     .          PROELT(NPRELT,NGRUPT), PROPST(NPROPT,NMATST),
     .          ELDATT(NDATAT),        COORDT(NDIMET,*),
     .          GPCODT(NDIMET,*)
      DIMENSION WORK1T(*)
      DIMENSION ELPRET(NPREVT),
     .          ELVART(NSTATT),        ELMATT(NMATXT),
     .          DISPLT(NTOTVM)
C
      NNUPX=NNUPC                    ! see outmic.f
      IF(ITERMEF.EQ.0) THEN
       IF(NFILL.EQ.1) NNUPX=NNUPX+1
      ENDIF
C
C**** WRITE CONTROL DATA FOR POSTPROCESSOR
C
      OPEN(UNIT=LUPOST,FILE=CJT,STATUS='OLD',FORM='UNFORMATTED',
     .     ACCESS='APPEND')
C
      WRITE(LUPOST) NDIMET,NDOFCT,NDOFNT,NGAUST,NHISTT,NNODET,NELEMT,
     .              NGRUPT,
     .              NMATST,NPOINT,NPRELT,NPROPT,NSTR1T,TITLET,NDATAT,
     .              NSTATT,
     .              KSGAUT,NNUINT,NNUPX, NPOROT,LARGET,KDYNAT
C
      ICOUNT=0
      DO 101 IELEMT=1,NELEMT
      LGRUPT=MATNOT(IELEMT)
      LMATST=INT(PROELT(1,LGRUPT))
      LTYPET=INT(PROELT(5,LGRUPT))
      NNODLT=INT(PROELT(2,LGRUPT))
      IF(LTYPET.EQ.101.OR.LTYPET.EQ.104) GO TO 101  ! SKIP CONTACT ELEM.
C
C**** READ NODAL AND GAUSSIAN COORDINATES FROM DATA-BASE
C
      IF(NMEMO1.EQ.0.OR.NMEMO2.EQ.0)
     . CALL DATBAST(ELDATT,    1,    2)
C
      IF(NMEMO2.NE.0.AND.KPPCGT.NE.0) THEN
C
C**** GATHER NODAL COORDINATES
C
       IF(NMEMO1.EQ.1) THEN          ! coordinates in a global array
        CALL GATHER(COORDT,NDIMET,NPOINT,WORK1T(ISTART(11)),NDIMET,
     .              NNODLT,LNODST(1,IELEMT))
       ENDIF
C
       IF(ITERME.GT.0) THEN          ! bidirectional coupled
        IF(ITERMD.EQ.1) THEN         ! deformed shape
C
C**** SCALAR GATHER OPERATIONS ( DISPLT ---> WORK1T(ISTART(17)) )
C
         CALL GATHER(DISPLT,NDOFCM,NPOINT,WORK1T(ISTART(17)),NDOFCM,
     .               NNODLT,
     .               LNODST(1,IELEMT))
        ENDIF                        ! itermd.eq.1
       ENDIF                         ! iterme.gt.0
C
C**** CALL ELEMENT PROCESSOR TO PERFORM REQUIRED OPERATIONS
C
       CALL ELMLIBT(LNODST(1,IELEMT),PROELT(1,LGRUPT),PROPST(1,LMATST),
     .              ELDATT,ELPRET,ELVART,ELMATT,DUMMYT,WORK1T,    16)
C
C**** WORK1T(ISTART(5) --> GPCODT
C
       IKOUNT=0
       DO IDIMET=1,NDIMET
        DO IGAUST=1,NGAULT
         GPCODT(IDIMET,IGAUST)=WORK1T(ISTART(5)+IKOUNT)
         IKOUNT=IKOUNT+1
        ENDDO
       ENDDO
      ENDIF                          ! nmemo2.ne.0.and.kppcgt.ne.0
C
C**** RECOVER NODAL COORDINATES AND PUT THEM IN GLOBAL VECTOR
C
      IF(NMEMO1.EQ.0) THEN           ! coordinates in an elemental array
       KCOUNT=0
       DO 100 INODET=1,NNODET
       LNODET=LNODST(INODET,IELEMT)
       IF(LNODET.EQ.0) GO TO 100
C$DIR SCALAR
       DO IDIMET=1,NDIMET
        COORDT(IDIMET,LNODET)=ELDATT(IDATAT(1)+KCOUNT)
        KCOUNT=KCOUNT+1
       ENDDO
  100 CONTINUE
      ENDIF
C
C**** RECOVER GAUSSIAN COORDINATES AND WRITES THEM TO POSTPROCESS FILE
C
      IF(NMEMO2.EQ.0) THEN
       ICOUNT=0
       DO IGAUST=1,NGAUST
C$DIR SCALAR
        DO IDIMET=1,NDIMET
         GPCODT(IDIMET,IGAUST)=ELDATT(IDATAT(4)+ICOUNT)
         ICOUNT=ICOUNT+1
        ENDDO
       ENDDO
      ENDIF
C
      IF(KPPCGT.NE.0) THEN
       WRITE(LUPOST) ((SNGL(GPCODT(IDIMET,IGAUST)),
     .                 IDIMET=1,NDIMET),IGAUST=1,NGAUST)
      ENDIF
C
  101 CONTINUE
C
C**** WRITE GEOMETRY FOR POSTPROCESSOR
C
      WRITE(LUPOST)
     .((SNGL(COORDT(IDIMET,IPOINT)),IDIMET=1,NDIMET),IPOINT=1,NPOINT),
     .  LNODST,MATNOT,
     .((SNGL(PROELT(IPRELT,IGRUPT)),IPRELT=1,NPRELT),IGRUPT=1,NGRUPT),
     .((SNGL(PROPST(IPROPT,IMATST)),IPROPT=1,NPROPT),IMATST=1,NMATST),
     .  IDATAT,ISTATT
C
      CLOSE(LUPOST)
C
      END
