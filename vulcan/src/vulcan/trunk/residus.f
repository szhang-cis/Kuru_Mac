      SUBROUTINE RESIDUS(DISITS,DISPRS,DISTOS,ELDATS,ELPRES,ELVARS,
     .                   ELMATS,HEADSS,IFFIXS,LNODSS,MATNOS,PROELS,
     .                   PROPSS,REFORS,TLOADS,DISPLS,PWORKS,PREASS,
     .                   TGAPSS,COORDS,TEMPIS,ADVELS,FPCHAS,WORK1S)
C***********************************************************************
C
C**** THIS ROUTINE EVALUATES THE RESIDUAL FORCES AND REACTIONS
C     IT ALSO PERFORMS THE LINE SEARCH IF DESIRED
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
      INCLUDE 'nued_om.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
C
      DIMENSION MATNOS(NELEMS),        LNODSS(NNODES,NELEMS),
     .          PROELS(NPRELS,NGRUPS), PROPSS(NPROPS,NMATSS),
     .          ELDATS(NDATAS),        ELPRES(NPREVS),
     .          ELVARS(NSTATS),        ELMATS(NMATXS),
     .          WORK1S(*)
      DIMENSION DISITS(*),             DISPRS(NTOTVS,3), 
     .          DISTOS(NTOTVS,3),      HEADSS(NPOINS,*),
     .          IFFIXS(*),             REFORS(NTOTVS,2),
     .          TLOADS(NTOTVS,2)
      DIMENSION DISPLS(NTOTVMS),       PWORKS(NPOINS,3),
     .          PREASS(NPOINS),        TGAPSS(NPOINS),
     .          COORDS(NDIMES,NPOINS)
      DIMENSION TEMPIS(NPOINS,2),      ADVELS(NTOTVS*NDIMES),
     .          FPCHAS(NFPCH,NPOINS)
C
      CALL CPUTIMS(TIME1S)
C
C**** COMPUTE DISSIPATED ENERGY & IN CASE CORRECT THE LUMPED EXPWP
C
      CALL ENERGYS(DISITS,REFORS)
C
      ALPHAS=1.0D+00                 ! Initialize LINE SEARCH parameters
      ITRILS=0
      LSRCHS=1
C
C**** LINE SEARCH LOOP
C
      DO WHILE (LSRCHS.EQ.1)
C
       ITRILS=ITRILS+1
C
C**** READ LAST CONVERGED DISPLACEMENTS
C
       CALL DATBASS(DISTOS,   12,   2)
C
C**** UPDATE NODAL VARIABLES (BEFORE RESIDUAL EVALUATION)
C
       CALL CORRECS(ALPHAS,DISITS,DISPRS,DISTOS,DTIMES,KINTES,REFORS,
     .              TALFAS,TBETAS,IITERS,     1)
C
C**** COMPUTE THE INTERNAL RESISTING FORCES
C
       CALL FORCINS(DISTOS(1,1),
     .              ELDATS,ELPRES,ELVARS,ELMATS,
     .              REFORS(1,1),
     .              HEADSS,LNODSS,MATNOS,PROELS,PROPSS,WORK1S,
     .              REFORS(1,2),
     .              DISTOS(1,1+KDYNAS),DISPRS(1,1+KDYNAS),
     .              DISPLS,PREASS,TGAPSS,COORDS,TEMPIS(1,1),ADVELS,
     .              TEMPIS(1,1+NMEMO10S),FPCHAS)
C
C**** EVALUATE THE INERTIAL & DAMPING FORCES
C
       IF(KDYNAS.EQ.1) THEN
        CALL THERDYS(DISTOS(1,2),LNODSS,MATNOS,PROELS,PROPSS,
     .               REFORS(1,1),ELDATS,ELPRES,ELVARS,ELMATS,
     .               WORK1S,DISITS,REFORS(1,2),COORDS,
     .               TEMPIS(1,1),ADVELS,FPCHAS,DISTOS(1,1),DISPLS)
       ENDIF
C
C**** CALCULATE RESIDUAL LOAD 
C
       CALL RESLODS(DISITS,HEADSS,IFFIXS,REFORS(1,1),TLOADS,PWORKS)
C
C**** PRINT SOME RELEVANT DATA
C
       IF(IITERS.GE.1) THEN
        IF(ITRILS.EQ.1) THEN
         WRITE(LURESS,900) IITERS,GZEROS
         IF(ABS(AACOES)+ABS(BBCOES).NE.0.0D0) 
     .    WRITE(LURESS,910) AACOES,BBCOES/AACOES
        ENDIF
        RATIOS=0.0
        IF(GZEROS.NE.0.0D0) RATIOS=GCURNS/GZEROS
        WRITE(LURESS,905) ITRILS,ALPHAS,RATIOS
       ENDIF
C
C**** FIND A NEW FALUE FOR ALPHA ; IF REQUIRED
C
       LSRCHS=0                             ! Set mark not to loop again
       IF(LINESS.EQ.1.AND.IITERS.GT.1)
     .  CALL LINSCH(ALPHAS,GCURNS,GZEROS,ITRILS,LSRCHS)
C
      END DO                                       ! WHILE (LSRCHS.EQ.1)
C
C**** UPDATE NODAL VARIABLES (BEFORE RESIDUAL EVALUATION)
C
       CALL CORRECS(ALPHAS,DISITS,DISPRS,DISTOS,DTIMES,KINTES,REFORS,
     .              TALFAS,TBETAS,IITERS,     2)
C
      CALL CPUTIMS(TIME2S)
      CPURES=CPURES+(TIME2S-TIME1S)
C
      RETURN 
  900 FORMAT(132('='),//,
     .          10X,'ITERATION NO. ',I5,28X,' GZERO =',E13.5/)
  905 FORMAT(15X,'SEARCH NO. ',I3,3X,'ALPHA =',F10.5,3X,
     .           'GCURN/GZERO =',E13.5)
  910 FORMAT(15X,'SECANT-NEWTON :      A =',F10.5,10X,' B/A =',E13.5)
      END
