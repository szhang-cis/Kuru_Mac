      SUBROUTINE ANTESOT(REFORT,RFOLDT,DSOLDT,VVECTT,WVECTT)
C***********************************************************************
C
C**** THIS ROUTINE MODIFIES THE R. H. S. IF A QUASI-NEWTON METHOD IS 
C     USED ( BFGS )
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'auxl_omt.f'
C
      COMMON/ANTESOTA/NBFGST,NVECTT
C
      DIMENSION REFORT(NTOTVT), RFOLDT(NTOTVT), DSOLDT(NTOTVT), 
     .          VVECTT(NTOTVT), WVECTT(NTOTVT)
C
      DATA CONMXT,MVECTT/1.0D+10,15/
C
      IF(LACCET.NE.3.OR.IITERT.LE.1.OR.KARCLT.NE.0) RETURN
C
      IBFGST=1
      IF(IITERT.EQ.2) THEN
        NVECTT=0
        NBFGST=LUBFGT
        REWIND NBFGST
      ENDIF
C
C**** SEE IF BFGS UPDATE IS POSSIBLE
C
      GAMMAT= GZEROT-GCURNT
      IF(GAMMAT.LE.0.0.OR.GZEROT.LE.0.0) THEN
        WRITE(LUREST,900)
        WRITE(LUPRIT,900)
        IBFGST=0
        GO TO 100
      ENDIF
C
C**** COMPUTE UPDATING VECTORS FOR THIS ITERATION
C
      FACT1T=1.0D+00 + DSQRT((AALPHT*GAMMAT)/GZEROT)
      FACT2T=1.0D+00/GAMMAT
      DO 10 ITOTVT=1,NTOTVT
        VVECTT(ITOTVT)=-FACT1T*RFOLDT(ITOTVT)+REFORT(ITOTVT)
        WVECTT(ITOTVT)= FACT2T*DSOLDT(ITOTVT)
  10  CONTINUE
C
C**** CHECK ON CONDITION NUMBER
C
      VV=0.0D+00
      WW=0.0D+00
      DO 20 ITOTVT=1,NTOTVT
        V=VVECTT(ITOTVT)
        W=WVECTT(ITOTVT)
        VV=VV+V*V
        WW=WW+W*W
  20  CONTINUE
C
C**** CHECK IF COND. NUMBER IS POSITIVE
C
      WV4=4.0D+00*(1.0D+00 + FACT2T*(-FACT1T*GZEROT+GCURNT) )
      IF(ABS(WV4).LT.1.0D-15) THEN
        WRITE(LUREST,902)
        WRITE(LUPRIT,902)
        IBFGST=0
        GO TO 100
      ENDIF
C
C**** CHECK IF COND. NUMBER IS TOO LARGE
C
      VALUET=DSQRT(VV*WW)+DSQRT(ABS(VV*WW+WV4))
      ESTCNT=VALUET*VALUET/ABS(WV4)
      IF(ESTCNT.GT.CONMXT) THEN
        WRITE(LUREST,901)
        WRITE(LUPRIT,901)
        IBFGST=0
        GO TO 100
      ENDIF
C
 100  CONTINUE
C
C**** ADD NEW PAIR OF UPDATING VECTORS
C
      IF(IBFGST.EQ.1) THEN
        NVECTT=NVECTT+1
        IF(NVECTT.GT.MVECTT) THEN
          NVECTT=1
          REWIND NBFGST
        ENDIF
        WRITE(NBFGST) VVECTT,WVECTT
      ENDIF
C
C**** END FILE WITH 'REAL' RESIDUAL FORCES ARRAY
C
      WRITE(NBFGST) REFORT
      BACKSPACE NBFGST
C
C**** UPDATE R.H.S. ( RESIDUAL FORCES )
C
      IF(NVECTT.EQ.0) RETURN
C
      DO 200 IVECTT=1,NVECTT
        BACKSPACE NBFGST
        READ(NBFGST) VVECTT,WVECTT
        BACKSPACE NBFGST
        CONSTT=0.0D+00
        DO 210 ITOTVT=1,NTOTVT
  210   CONSTT=CONSTT+WVECTT(ITOTVT)*REFORT(ITOTVT)
        DO 220 ITOTVT=1,NTOTVT
  220   REFORT(ITOTVT)=REFORT(ITOTVT)+CONSTT*VVECTT(ITOTVT)
  200 CONTINUE     
C
      RETURN
  900 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO NEGATIVE ',
     .                     'SQRT ',3('*'),/)
  901 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO LARGE ',
     .                     'EST. COND. NUMBER ',3('*'),/)
  902 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO NEGATIVE ',
     .                     'EST. COND. NUMBER ',3('*'),/)
      END
