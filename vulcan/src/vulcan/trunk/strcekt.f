      SUBROUTINE STRCEKT
C***********************************************************************
C
C**** THIS ROUTINE CHECKS THE CONTROLLING PARAMETERS FOR THE
C     CURRENT TIME INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
C
      DIMENSION NERORT(17)
C
      DO 10 IERORT=1,17
   10 NERORT(IERORT)=0
C
C**** CHECK ON PARAMETERS FOR STATIC-UNCOUPLED PROBLEM
C
      IF(KDYNAT.EQ.0.AND.KPORET.NE.2) THEN
       IF(KINTET.NE.0)                                    NERORT(2)=1
       IF(KOPTIT.NE.0.AND.LAUTOT.NE.0)                    NERORT(3)=1
       IF(KARCLT.EQ.4.AND.NCDIST.EQ.0)                    NERORT(9)=1
       IF(KSMUST.GT.0)                                    NERORT(10)=1
       IF(KARCLT.NE.0.AND.LAUTOT.EQ.0)                    NERORT(12)=1
      ENDIF
C
C**** CHECK ON PARAMETERS FOR STATIC-COUPLED PROBLEM
C
      IF(KDYNAT.EQ.0.AND.KPORET.EQ.2) THEN
       IF(KINTET.EQ.0)                                    NERORT(4)=1
       IF(LAUTOT.NE.0)                                    NERORT(5)=1
       IF(KSMUST.GT.0.AND.LINEST.NE.0)                    NERORT(6)=1   !?????
       IF(LINEST.NE.0) WRITE(LUREST,800)
       IF(KARCLT.NE.0)                                    NERORT(7)=1
       IF(LACCET.NE.0)                                    NERORT(8)=1
      ENDIF
C
C**** CHECK ON PARAMETERS FOR DYNAMIC-UNCOUPLED PROBLEM
C
      IF(KDYNAT.EQ.1.AND.KPORET.NE.2) THEN
       IF(KINTET.EQ.0)                                    NERORT(4)=1
       IF(LAUTOT.NE.0)                                    NERORT(5)=1
       IF(KARCLT.NE.0)                                    NERORT(7)=1
       IF(LACCET.NE.0.AND.KPROBT.NE.4)                    NERORT(8)=1
       IF(KSMUST.GT.0)                                    NERORT(10)=1
       IF(KINTET.NE.2.AND.KPROBT.NE.4)                    NERORT(11)=1
       IF(KOPTIT.NE.0)                                    NERORT(13)=1
      ENDIF
C
C**** CHECK ON PARAMETERS FOR DYNAMIC-COUPLED PROBLEM
C
      IF(KDYNAT.EQ.1.AND.KPORET.EQ.2) THEN
       IF(LAUTOT.NE.0)                                    NERORT(5)=1
       IF(KSMUST.GT.0.AND.LINEST.NE.0)                    NERORT(6)=1
       IF(LINEST.NE.0) WRITE(LUREST,800)
       IF(KARCLT.GT.0)                                    NERORT(7)=1
       IF(LACCET.NE.0)                                    NERORT(8)=1
       IF(KINTET.NE.2)                                    NERORT(11)=1
       IF(KOPTIT.NE.0)                                    NERORT(13)=1
      ENDIF
C
C**** CHECK ON PARAMETERS FOR THE "EXPLICIT_SOLUTION" OPTION
C
      IF(KSOLVT.EQ.4) THEN
       IF(KDYNAT.EQ.0)                                    NERORT(14)=1
       IF(KDYNAT.EQ.1) THEN
        IF(KINTET.EQ.1) THEN
         IF(TALFAT.NE.0.0)                                NERORT(15)=1
        ELSE
                                                          NERORT(16)=1
        ENDIF
       ENDIF
       IF(ICONVT.EQ.1) THEN
        IF(IPERT.EQ.3)                                    NERORT(17)=1
       ENDIF
      ENDIF
C
C**** CHECK IF ERRORS HAD OCCURED
C
      KOUNTT=0
      DO 20 IERORT=1,17
      IF(NERORT(IERORT).NE.1)GOTO 20
      KOUNTT=KOUNTT+1
   20 CONTINUE
C
      IF(KOUNTT.EQ.0) RETURN
C
C**** ERRORS DIAGNOSED BY ROUTINE STRCEK
C
      WRITE(LUREST,600)KOUNTT
  600 FORMAT(//,20X,I5,' INPUT ERRORS DETECTED BY STRATE.'/,
     .          25X,   ' DIAGNOSTIC FOLLOWS :',//)
C
      IF(NERORT(2).EQ.1)  WRITE(LUREST,705) 
      IF(NERORT(3).EQ.1)  WRITE(LUREST,710) 
      IF(NERORT(4).EQ.1)  WRITE(LUREST,715) 
      IF(NERORT(5).EQ.1)  WRITE(LUREST,720)
      IF(NERORT(6).EQ.1)  WRITE(LUREST,725) 
      IF(NERORT(7).EQ.1)  WRITE(LUREST,730) 
      IF(NERORT(8).EQ.1)  WRITE(LUREST,735)
      IF(NERORT(9).EQ.1)  WRITE(LUREST,740)
      IF(NERORT(10).EQ.1) WRITE(LUREST,745)
      IF(NERORT(11).EQ.1) WRITE(LUREST,750)
      IF(NERORT(12).EQ.1) WRITE(LUREST,755)
      IF(NERORT(13).EQ.1) WRITE(LUREST,760)
      IF(NERORT(14).EQ.1) WRITE(LUREST,765)
      IF(NERORT(15).EQ.1) WRITE(LUREST,770)
      IF(NERORT(16).EQ.1) WRITE(LUREST,775)
      IF(NERORT(17).EQ.1) WRITE(LUREST,776)
C
      CALL RUNENDT('    ERROR DETECTED IN STRATET      ')
C
      RETURN
C
  705 FORMAT(
     .' THE PROBLEM IS STATIC-UNCOUPLED AND YOU ARE ASKING FOR'
     .' A TIME STEPPING ALGORITHM',/)
C
  710 FORMAT(
     .' YOU ARE ASKING SIMULTANEOUSLY FOR AUTOMATIC LOAD AND TIME'
     .' INCREMENTATION',/,' >>>> INCOMPATIBLE',/)
C
  715 FORMAT(
     .' THE PROBLEM ADVANCES IN TIME BUT YOU ARE NOT ASKING FOR',/,
     .' ANY TIME STEPPING ALGORITHM OR YOU ARE ASKING FOR A ',/,
     .' NON-AVAILABLE ONE',/)
C
  720 FORMAT(
     .' AUTOMATIC LOAD INCREMENTATION IS INCOMPATIBLE WITH TIME',/,
     .' STEPPING ALGORITHMS',/)
C
  725 FORMAT(
     .' SMOOTHING AND LINE SEARCH ARE NOT AVAILABLE SIMULTANEOUSLY'/)
C
  730 FORMAT(
     .' ARC-LENGTH IS NOT COMPATIBLE WITH TIME STEPPING PROBLEMS',/)
C
  735 FORMAT(
     .' CONVERGENCE ACCELERATOR IS NOT COMPATIBLE WITH TIME STEPPING',
     .' PROBLEMS',/)
C
  740 FORMAT(
     .' YOU HAVE SELECTED DISPLACEMENT CONTROL BUT HAVE NOT SPECIFIED',
     .' A CONTROLLING D.O.F.',/)
C
  745 FORMAT(
     .' THIS IS NOT A COUPLED PROBLEM AND YOU ARE ACTIVATING THE',
     .' SMOOTHING ALGORITHM',/)
C
  750 FORMAT(
     .' THE PROBLEM IS SECOND ORDER IN TIME AND YOU ARE NOT SELECTING'/,
     .' AN APPROPRIATE TIME STEPPING ALGORITHM',/)
C
  755 FORMAT(
     .' THE ARC-LENGTH ALGORITHM REQUIRES AUTOMATIC LOAD '/,
     .' PLEASE, SPECIFY ONE OF THE AVAILABLE OPTIONS',/)
C
  760 FORMAT(
     .' FOR THE DYNAMIC PROBLEM IT IS SUPPOSED TO HAVE CONSTANT TIME'/,
     .' WITHIN EACH INTERVAL. THUS IT SHOULD SET THE TIME PARAMETERS'/,
     .' IN CARD "TIME_INCREMENTION,<PARA1>,<PARA2>" EQUAL TO ZERO'/)
C
  765 FORMAT(
     .'THE "EXPLICIT_SOLUTION" OPTION CAN ONLY BE USED FOR TRANSIENT',/,
     .' PROBLEMS',/)
C
  770 FORMAT(
     .' THE "EXPLICIT_SOLUTION" OPTION MUST BE USED WITH A CERO ALFA',/,
     .' PARAMETER FOR THE EULER METHOD',/)
C
  775 FORMAT(
     .' THE "EXPLICIT_SOLUTION" OPTION IS NOT IMPLEMENTED YET FOR',/,
     .' HUGHES TIME MARCHING SCHEMES',/)
C
  776 FORMAT(
     .' THE "EXPLICIT_SOLUTION" OPTION IS NOT RECOMMENDABLE FOR  ',/,
     .' ADVECTION PROBLEMS WITH IPERT=3',/)
C
  800 FORMAT(
     .' WARNING: THE OPTION OF LINE-SEARCH FOR COUPLED PROBLEM HAS '/,
     .' NOT BEEN YET TESTED PROPERLY. PAY ATTENTIONS ON THE RESULTS.'/)
C
      END
