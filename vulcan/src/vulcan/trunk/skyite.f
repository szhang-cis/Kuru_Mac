      SUBROUTINE SKYITE(ELOAD,LNODS,NDOFN,NELEM,NEQNS,NEVAB,NNODE,
     .                  NPOIN,NTOTV,CSTIF,LNUEQ,LPONT,DISIM,FOREL,
     .                  ALOAD,DELTA,DISIC,GSTDI,GSTLO,GSTUP,LOCAL,
     .                  NPREL,NGRUP,NPROP,NMATS,
     .                  NDATA,NPREV,NSTAT,NMATX,NDIME,
     .                  NDISR,NDISO,
     .                  MATNO,PROEL,PROPS,ELDAT,ELPRE,
     .                  ELVAR,ELMAT,WORK1,TEMPN,DISPR,DTEMP,
     .                  VNORM,DISTO,COORD,INFRI,COFRI,LACTI)
C***********************************************************************
C
C**** THIS ROUTINE SOLVES THE SYSTEM OF EQUATIONS USING  
C     A PRECONDITIONED CONJUGATED GRADIENT ITERATIVE SOLVER
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMMON/SOLVERA/KRENU,KSOLV,KSYMM,NWIDT,MITCG,NBUFA,NPRIR,
     .               MITGM,MKRYL,IPGMR,KPARAM, NTHMCM, NTHSOM
      COMMON/SOLVERB/TOLCG,TOLC1,TOLGM
C
      COMMON/LOGUN/LUDTS,LUSOL,LUFRO,LUFRH,LUDAT,LUPRI,LURES,
     .             LUSO2,LUFR2,LUPOS,LURST,LUBFG,LUPIP,LUPAN,LUINF,
     .             LUGEO,LUSET,LUMAT,LUINI,LULOA,LUFIX,LUIN1,
     .             LUTUN,LUCON,LUACT,LUFAN,
     .             LUCU1,LUCU2,LUCU3,LUCU4,LUCU5,LUCU6,LUCU7,
     .             LUCU8,LUCU9,LUC10
C
      DIMENSION ALOAD(*), CSTIF(*), DELTA(*), DISIC(*),
     .          DISIM(*), ELOAD(*), FOREL(*), LNODS(NNODE,*),
     .          LNUEQ(*), LPONT(*), GSTDI(*), GSTLO(*), GSTUP(*),
     .          LOCAL(*)
C
      DIMENSION MATNO(NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX)
      DIMENSION TEMPN(NPOIN,2),     DISPR(NTOTV,NDISR),
     .          DTEMP(NPOIN),       VNORM(NTOTV)
      DIMENSION DISTO(NTOTV,NDISO), COORD(NDIME,NPOIN)
      DIMENSION INFRI(*),           COFRI(*),
     .          LACTI(NELEM)
C
      ANORM=VECDOT(ELOAD,ELOAD,NEQNS)
      IF(ANORM.LE.TOLC1) RETURN
C
      BETAB=1.0D00
C
C**** INITIALISE SOME ARRAYS
C
      DO 10 IEQNS=1,NEQNS
      ALOAD(IEQNS)=ELOAD(IEQNS)
      DELTA(IEQNS)=0.0
      DISIC(IEQNS)=0.0
   10 CONTINUE
C
C**** ITERATIVE SOLUTION
C
      DO 100 IITER=1,MITCG
C
C**** COMPUTE FIRST PART OF ITERATIVE SOLUTION
C
      CALL SKYBAK(GSTDI,GSTLO,GSTUP,LPONT,NEQNS,ALOAD,LURES)
C
C**** EVALUATE CG PARAMETER
C
      BETAT=VECDOT(ALOAD,ELOAD,NEQNS)
      BETAK=BETAT/BETAB
C
C**** EVALUATE ADVANCING DIRECTION
C
      DO 30 IEQNS=1,NEQNS
   30 DELTA(IEQNS)=ALOAD(IEQNS)+BETAK*DELTA(IEQNS)
C
C**** EVALUATE PRODUCT K*d
C
      CALL SKYPRO(CSTIF,DELTA,LNODS,LNUEQ,NDOFN,NELEM,NEQNS,
     .            NEVAB,NNODE,NPOIN,ALOAD,DISIM,FOREL,LOCAL,
     .            NPREL,NGRUP,NPROP,NMATS,
     .            NDATA,NPREV,NSTAT,NMATX,NDIME,NTOTV,
     .            NDISR,NDISO,
     .            MATNO,PROEL,PROPS,ELDAT,ELPRE,
     .            ELVAR,ELMAT,WORK1,TEMPN,DISPR,DTEMP,
     .            VNORM,DISTO,COORD,INFRI,COFRI,LACTI)
C
C**** COMPUTE LINE SEARCH PARAMETER
C
      EETAT=VECDOT(DELTA,ELOAD,NEQNS)
      EETAB=VECDOT(DELTA,ALOAD,NEQNS)
      EETAK=EETAT/EETAB
      BETAB=BETAT
C
C**** UPDATE SOLUTION
C
      DO 40 IEQNS=1,NEQNS
      DISIC(IEQNS)=DISIC(IEQNS)+EETAK*DELTA(IEQNS)
      ELOAD(IEQNS)=ELOAD(IEQNS)-EETAK*ALOAD(IEQNS)
      ALOAD(IEQNS)=ELOAD(IEQNS)
   40 CONTINUE
C
C**** CHECK FOR CONVERGENCE ( NORM OF RESIDUAL FORCES )
C
      BNORM=VECDOT(ELOAD,ELOAD,NEQNS)
      RATIO=DSQRT(BNORM/ANORM)
C
      IF(RATIO.LT.TOLCG) THEN
       WRITE(LUPRI,900) IITER,RATIO
       DO 50 IEQNS=1,NEQNS
       ELOAD(IEQNS)=DISIC(IEQNS)
   50  CONTINUE
       RETURN
      ENDIF
C
  100 CONTINUE
C
C**** NOT CONVERGED
C
      CALL RUNEND(' "SEDATIVE" SOLVER NOT CONVERGED   ')
C
      RETURN
  900 FORMAT(5X,'PCG ITER. = ',I5,3X,'PCG RATIO = ',E15.6)
      END   
