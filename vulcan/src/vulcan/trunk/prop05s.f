      SUBROUTINE PROP05S(ITAPES,PROPSS)
C***********************************************************************
C
C**** THIS ROUTINE READS THE MATERIAL PROPERTIES FOR SOLID MODEL
C     (ELEMENT NO. 5)
C
C     PROPSS(       1:NPROPM)=microstructural properties
C     PROPSS(NPROPM+1:NPROPS)=species properties
C                                                      
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
      INCLUDE 'nued_om.f'
      INCLUDE 'nuef_om.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'inpo_oms.f'
C
      DIMENSION PROPSS(*)
C
C**** ESTABLISH SOME PARAMETERS
C
      PROPSS(NPROPM+1)=0.0             ! isotrs=0 => isotropic material
      PROPSS(NPROPM+2)=0.0             ! ifills=0 => standard material
C
C**** READ & WRITE MATERIAL PROPERTIES
C
      NPRINS=0
C
C**** LOOK FOR 'DENSITY-TEMPERATURE CURVE' CARD
C
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
      IF(WORDSS(1).NE.'DENSI')THEN
       IF(KDYNAS.EQ.1.OR.ICONVS.EQ.1) THEN
        CALL RUNENDS('PROP05S: DENSITY-TEMP. CARD NOT FOUND   ')
       ELSE
        NPOI1S=NPROPM+3 !ISOTRS=PROPSS(NPROPM+1),IFILLS=PROPSS(NPROPM+2)
        NPOI2S=NPROPM+7
        PROPSS(NPROPM+3)=2.0
        DO IPROPS=NPOI1S+1,NPOI2S
         PROPSS(IPROPS)=0.0
        ENDDO
        CALL RUNMENS('WARNING: ZERO DENSITY VALUE IS ASSUMED')
        IF(NMEMO10S.EQ.1)
     .   CALL RUNMENS('WARNING: ZERO DENSITY WITH NMEMO10S=1')
        GOTO 3
       ENDIF
      ELSE
       IF(PARAMS(1).EQ.0.0)
     .  CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN DENSITY')
C
C**** READ 'DENSITY-TEMPERATURE CURVE' BY LISTEN
C
       NPOI1S=NPROPM+3  !ISOTRS=PROPSS(NPROPM+1),IFILLS=PROPSS(NPROPM+2)
       NPOI2S=NPOI1S
       PROPSS(NPOI1S)=PARAMS(1)
       NLINES=INT(PARAMS(1))
       IF(NLINES.GT.20)
     .  CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN DENSITY')
       NPRINS=1
       DO LINEAS=1,NLINES
        CALL LISTENS('PROP05S',NPRINS,ITAPES)
        DO I=1,2
         NPOI2S=NPOI2S+1
         PROPSS(NPOI2S)=PARAMS(I)
        ENDDO
       ENDDO
       WRITE(LURESS,803)
       DO IPROPS=NPOI1S+1,NPOI2S,2
        WRITE(LURESS,804) PROPSS(IPROPS),PROPSS(IPROPS+1)
       ENDDO
       WRITE(LURESS,809)
      ENDIF
C
      DO IPROPS=NPOI1S+1,NPOI2S-2,2
       IF(PROPSS(IPROPS+1).GT.PROPSS(IPROPS+3))
     .  CALL RUNENDS('PROP05S: TAKE CARE TEMPERATURE ORDER, DENSITY')
       IF(NMEMO10S.EQ.0) THEN
        IF(PROPSS(IPROPS).NE.PROPSS(IPROPS+2))
     .   CALL RUNMENS('WARNING: INITIAL DENSITY WILL BE CONSIDERED')
       ENDIF
      ENDDO
C
C**** LOOK FOR 'SPECIFIC_HEAT-TEMPERATURE CURVE' CARD
C
      NPRINS=0
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
    3 IF(WORDSS(1).NE.'SPECI')THEN
       IF(KDYNAS.EQ.1.OR.ICONVS.EQ.1) THEN
        CALL RUNENDS('ERROR: SPECIFIC_HEAT-TEMP. CARD NOT FOUND')
       ELSE
        NPOI1S=NPOI2S+1
        NPOI2S=4+NPOI1S
        PROPSS(NPOI1S)=2.0
        DO IPROPS=NPOI1S+1,NPOI2S
         PROPSS(IPROPS)=0.0
        ENDDO
        GOTO 4
       ENDIF
      ELSE
       IF(KDYNAS.EQ.1.OR.ICONVS.EQ.1) THEN
        IF(PARAMS(1).EQ.0.0)
     .   CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN SPEC. HEAT')
       ELSE
        CALL RUNMENS('WARNING: SPEC. HEAT-TEMP. CURVE NOT USED')
       ENDIF
C
C**** READ FOR 'SPECIFIC_HEAT-TEMPERATURE CURVE' BY LISTEN
C
       NPOI1S=NPOI2S+1
       NPOI2S=NPOI1S
       PROPSS(NPOI1S)=PARAMS(1)
       NLINES=INT(PARAMS(1))
       IF(NLINES.GT.500)
     .  CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN SPEC. HEAT')
       NPRINS=1
       DO LINEAS=1,NLINES
        CALL LISTENS('PROP05S',NPRINS,ITAPES)
        DO I=1,2
         NPOI2S=NPOI2S+1
         PROPSS(NPOI2S)=PARAMS(I)
        ENDDO
       ENDDO
       WRITE(LURESS,805)
       DO IPROPS=NPOI1S+1,NPOI2S,2
        WRITE(LURESS,804) PROPSS(IPROPS),PROPSS(IPROPS+1)
       ENDDO
       WRITE(LURESS,809)
      ENDIF
C
      DO IPROPS=NPOI1S+1,NPOI2S-2,2
       IF(PROPSS(IPROPS+1).GT.PROPSS(IPROPS+3))
     .  CALL RUNENDS('PROP05S: TAKE CARE TEMPERATURE ORDER, SPEC. HEAT')
      ENDDO
C
C**** LOOK FOR 'CONDUCTIVITY-TEMPERATURE CURVE' CARD
C
      NPRINS=0
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
    4 IF(WORDSS(1).NE.'CONDU')
     . CALL RUNENDS('ERROR: CONDUCTIVITY-TEMPERATURE CARD NOT FOUND')
C
      IF(PARAMS(1).EQ.0.0)
     . CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN CONDUCTIVITY')
C
C**** READ 'CONDUCTIVITY-TEMPERATURE CURVE' BY LISTEN
C
      NPOI1S=NPOI2S+1
      NPOI2S=NPOI1S
      PROPSS(NPOI1S)=PARAMS(1)
      NLINES=INT(PARAMS(1))
      IF(NLINES.GT.500)
     . CALL RUNENDS('ERROR: WRONG NUMBER OF POINTS IN CONDUCTIVITY')
      NPRINS=1
      DO LINEAS=1,NLINES
       CALL LISTENS('PROP05S',NPRINS,ITAPES)
       DO I=1,2
        NPOI2S=NPOI2S+1
        PROPSS(NPOI2S)=PARAMS(I)
       ENDDO
      ENDDO
      WRITE(LURESS,806)
      DO IPROPS=NPOI1S+1,NPOI2S,2
       WRITE(LURESS,804) PROPSS(IPROPS),PROPSS(IPROPS+1)
      ENDDO
      WRITE(LURESS,809)
C
      DO IPROPS=NPOI1S+1,NPOI2S-2,2
       IF(PROPSS(IPROPS+1).GT.PROPSS(IPROPS+3))
     .  CALL RUNENDS('PROP05S: TAKE CARE TEMPERATURE ORDER, CONDUC.')
      ENDDO
C
C**** LOOK FOR 'PHASE_CHANGE_HEAT CURVE' CARD
C
      NPRINS=0
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
      NPOI2S=NPOI2S+1
      PROPSS(NPOI2S)=0.0
      IF(WORDSS(1).NE.'PHASE') GOTO 5      ! PHASE_CHANGE CARD NOT FOUND
c     IF(KDYNAT.NE.1.AND.ICONVT.NE.1)
c    . CALL RUNENDT('ERROR: PHASE-CHANGE ONLY IN TRANS. OR ADVEC. PROB')
C
c     IF(PARAMT(1).EQ.0.0)
c    . CALL RUNENDT('ERROR: WRONG NUMBER OF PHASE_CHANGES')
C
C**** READ 'PHASE_CHANGE_HEAT CURVE' BY LISTEN
C
c     NPOI1T=NPOI2T
c     PROPST(NPOI1T)=PARAMT(1)
c     NLINET=INT(PARAMT(1))
c     NSUBDT=INT(PARAMT(2))
c     IF(NLINET.GT.MPLATS)                  ! see auxl_om*.f & nued_om.f
c    . CALL RUNENDT('ERROR: WRONG NUMBER OF PHASE_CHANGES')
c     ITERMEX=ITERMEF
c     IF(ITERMEX.GT.1) ITERMEX=1
c     NLINEA=(NFPCH-ITERMEX)/2              ! micro checked in pointes.f
c     IF(NLINET.GT.NLINEA)
c    . CALL RUNENDT('ERROR: WRONG NUMBER OF PHASE_CHANGES')
c     IF(ITERME.GE.0) THEN
c      CALL RUNMENT('WARNING: CHECK THE CORRESPONDANCE BETWEEN THERMAL &
c    . MECHANICAL PHASE-CHANGES    ')
c     ENDIF
C
C**** CHECKS NUMBER OF MACROSCOPIC PHASE-CHANGES
C
c     IF(IMICR.EQ.0) THEN
c      IF(NLINET.GT.NNUPC) NNUPC=NLINET
c      IF(NNUPC.GT.NLINEA)
c    .  CALL RUNENDS('ERROR: WRONG NUMBER OF PHASE_CHANGES')
c      NNUPT=NNUPC
c     ENDIF
C
c     NPRINT=1
c     NPOI1T=NPOI1T+1
c     DO LINEAT=1,NLINET
c      WRITE(LUREST,810) LINEAT
c      CALL LISTENT('PROP05T',NPRINT,ITAPET)
C
c      IF(WORDST(1).EQ.'     ') THEN    ! linear
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCMO
c       DO I=1,3
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(I)
c       ENDDO
c       IF(PARAMT(1).GT.PARAMT(2))
c    .   CALL RUNENDT('T_SOLIDUS < T_LIQUIDUS    ')
c       WRITE(LUREST,811)
c       WRITE(LUREST,812)
c       WRITE(LUREST,813) PROPST(NPOI2T-2),PROPST(NPOI2T-1),
c    .                    PROPST(NPOI2T)
c       WRITE(LUREST,809)
c      ENDIF
C
c      IF(WORDST(1).EQ.'LINEA') THEN    ! linear
c       CALL LISTENT('PROP05T',NPRINT,ITAPET)
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCMO
c       DO I=1,3
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(I)
c       ENDDO
c       IF(PARAMT(1).GT.PARAMT(2))
c    .   CALL RUNENDT('T_SOLIDUS < T_LIQUIDUS    ')
c       IF(PARAMT(3).LT.0.0)
c    .   CALL RUNENDT('LATENT HEAT < 0.0         ')
c       WRITE(LUREST,811)
c       WRITE(LUREST,812)
c       WRITE(LUREST,813) PROPST(NPOI2T-2),PROPST(NPOI2T-1),
c    .                    PROPST(NPOI2T)
c       WRITE(LUREST,809)
c      ENDIF
C
c      IF(WORDST(1).EQ.'NO_RE') THEN    ! no real phase-change
c       NNUPC=NNUPC-1
c       NNUPT=NNUPT-1
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=-1.0             ! IPCMO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=10.0E+20
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=10.1E+20
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0
c       WRITE(LUREST,870)
c       WRITE(LUREST,809)
c      ENDIF
C
c      IF(WORDST(1).EQ.'PIECE'.OR.WORDST(1).EQ.'FS_PI') THEN
c       NPOI1T=NPOI2T+1
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       IF(WORDST(1).EQ.'PIECE') THEN   ! piece wise linear
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=1.0             ! IPCMO
c        IPCMO=1
c       ENDIF
c       IF(WORDST(1).EQ.'FS_PI') THEN   ! solid fract. piece wise linear
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=2.0             ! IPCMO
c        IPCMO=2
c       ENDIF
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=PARAMT(1)
c       NPCFU=INT(PARAMT(1))
c       IF(NPCFU.LE.1.OR.NPCFU.GT.500)
c    .   CALL RUNENDT('PROP05T: ERROR WITH PIECE WISE LINEAR FUNCTION')
C
c       IF(WORDST(2).EQ.'     '.OR.WORDST(2).EQ.'CONST') THEN
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=0.0         ! nlate
c        DO IPCFU=1,NPCFU
c         CALL LISTENT('PROP05T',NPRINT,ITAPET)
c         DO I=1,2
c          NPOI2T=NPOI2T+1
c          PROPST(NPOI2T)=PARAMT(I)
c         ENDDO
c        ENDDO
c        DO IPROPT=NPOI1T+4,NPOI2T-2,2  ! 4=IPCFO,IPCMO,NPCFU,NLATE
c         IF(PROPST(IPROPT+1).GT.PROPST(IPROPT+3))
c    .     CALL RUNENDT('PROP05T: TAKE CARE TEMPERATURE ORDER, LINEAR')
c        ENDDO
c        IF(IPCMO.EQ.1) THEN            ! piece wise linear
c         WRITE(LUREST,821)
c         WRITE(LUREST,822)
c        ENDIF
c        IF(IPCMO.EQ.2) THEN            ! solid fract. piece wise linear
c         WRITE(LUREST,824)
c         WRITE(LUREST,825)
c        ENDIF
c        DO IPROPT=NPOI1T+4,NPOI2T,2
c         WRITE(LUREST,804) PROPST(IPROPT),PROPST(IPROPT+1)
c        ENDDO
C
c        CALL LISTENT('PROP05T',NPRINT,ITAPET)
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(1)            ! constant latent heat
c        IF(PARAMT(1).LT.0.0)
c    .    CALL RUNENDT('LATENT HEAT < 0.0         ')
c        WRITE(LUREST,823) PROPST(NPOI2T)
c        WRITE(LUREST,809)
c       ELSE
c        IF(WORDST(2).EQ.'VARIA') THEN       ! temp-dep latent heat
c         NPOI2T=NPOI2T+1
c         PROPST(NPOI2T)=1.0          ! nlate
c         IF(WORDST(3).EQ.'     '.OR.WORDST(3).EQ.'SECAN') THEN
c          NPOI2T=NPOI2T+1
c          PROPST(NPOI2T)=0.0         ! ntypc (0=secant L)
c         ENDIF
c         IF(WORDST(3).EQ.'TANGE') THEN
c          NPOI2T=NPOI2T+1
c          PROPST(NPOI2T)=1.0         ! ntypc (1=tangent L)
c         ENDIF
c         DO IPCFU=1,NPCFU
c          CALL LISTENT('PROP05T',NPRINT,ITAPET)
c          DO I=1,3
c           NPOI2T=NPOI2T+1
c           PROPST(NPOI2T)=PARAMT(I)
c          ENDDO
c         ENDDO
c         DO IPROPT=NPOI1T+5,NPOI2T-3,3   ! 5=idem former,NTYPC
c          IF(PROPST(IPROPT+1).GT.PROPST(IPROPT+4))
c    .      CALL RUNENDT('PROP05T: TAKE CARE TEMPERATURE ORDER, LINEAR')
c         ENDDO
c         WRITE(LUREST,824)
c         WRITE(LUREST,826)
c         DO IPROPT=NPOI1T+5,NPOI2T,3
c          WRITE(LUREST,807) PROPST(IPROPT),PROPST(IPROPT+1),
c    .                       PROPST(IPROPT+2)
c         ENDDO
c         WRITE(LUREST,809)
c        ELSE
c         CALL RUNENDT('ERROR IN PHASE-CHANGE DATA')
c        ENDIF
c       ENDIF
c      ENDIF
C
c      IF(WORDST(1).EQ.'PARAB') THEN  ! parabolic
c       CALL LISTENT('PROP05T',NPRINT,ITAPET)
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=3.0              ! IPCMO
c       DO I=1,3
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(I)
c       ENDDO
c       IF(PARAMT(1).GT.PARAMT(2))
c    .   CALL RUNENDT('T_SOLIDUS < T_LIQUIDUS    ')
c       IF(PARAMT(3).LT.0.0)
c    .   CALL RUNENDT('LATENT HEAT < 0.0         ')
c       WRITE(LUREST,831)
c       WRITE(LUREST,812)
c       WRITE(LUREST,813) PROPST(NPOI2T-2),PROPST(NPOI2T-1),
c    .                    PROPST(NPOI2T)
c       WRITE(LUREST,809)
c      ENDIF
C
c      IF(WORDST(1).EQ.'CUBIC') THEN  ! cubic
c       CALL LISTENT('PROP05T',NPRINT,ITAPET)
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=4.0              ! IPCMO
c       call runendt('prop05t: cubic not implemented yet')
c      ENDIF
C
c      IF(WORDST(1).EQ.'SCHEI') THEN  ! Scheil's equation
c       CALL LISTENT('PROP05T',NPRINT,ITAPET)
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=5.0              ! IPCMO
c       DO I=1,5
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(I)
c       ENDDO
c       IF(PARAMT(1).GT.PARAMT(2))
c    .   CALL RUNENDT('T_SOLIDUS > T_EUTECTIC    ')
c       IF(PARAMT(2).GT.PARAMT(3))
c    .   CALL RUNENDT('T_EUTECTIC > T_LIQUIDUS   ')
c       IF(PARAMT(3).GT.PARAMT(4))
c    .   CALL RUNENDT('T_LIQUIDUS > T_MELTING    ')
c       IF(PARAMT(5).LT.0.0)
c    .   CALL RUNENDT('LATENT HEAT < 0.0         ')
c       WRITE(LUREST,861)
c       WRITE(LUREST,863)
c       WRITE(LUREST,813) PROPST(NPOI2T-4),PROPST(NPOI2T-3),
c    .                    PROPST(NPOI2T-2),PROPST(NPOI2T-1),
c    .                    PROPST(NPOI2T)
c       WRITE(LUREST,809)
c      ENDIF
C
c      IF(WORDST(1).EQ.'LEVER') THEN  ! lever rule
c       CALL LISTENT('PROP05T',NPRINT,ITAPET)
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0              ! IPCFO
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=6.0              ! IPCMO
c       DO I=1,4
c        NPOI2T=NPOI2T+1
c        PROPST(NPOI2T)=PARAMT(I)
c       ENDDO
c       IF(PARAMT(1).GT.PARAMT(2))
c    .   CALL RUNENDT('T_SOLIDUS > T_LIQUIDUS    ')
c       IF(PARAMT(2).GT.PARAMT(3))
c    .   CALL RUNENDT('T_LIQUIDUS > T_MELTING    ')
c       IF(PARAMT(4).LT.0.0)
c    .   CALL RUNENDT('LATENT HEAT < 0.0         ')
c       WRITE(LUREST,861)
c       WRITE(LUREST,862)
c       WRITE(LUREST,813) PROPST(NPOI2T-3),PROPST(NPOI2T-2),
c    .                    PROPST(NPOI2T-1),PROPST(NPOI2T)
c       WRITE(LUREST,809)
c      ENDIF
C
c     ENDDO                 ! do lineat=1,nlinet
C
C**** LOAD "NSUBDT"
C
c     NPOI1T=NPOI2T
c     IF(NSUBDT.EQ.0) NSUBDT=4
c     DO IDIMET=1,NDIMET
c      DO IAUXX=1,2
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=NSUBDT
c      ENDDO
c     ENDDO
C
C**** POROSITY CRITERIA
C
C     Note: see assprot.f, inppros.f, propmic.f, idepros.f & ideprom.f
C
c     CALL LISTENT('PROP05T',NPRINT,ITAPET)
c     NPOI1T=NPOI2T
c     IF(WORDST(1).EQ.'POROS') THEN
c      IF(WORDST(2).EQ.'PHASE') THEN
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=PARAMT(1)                  ! KPOROT
c       IF(IMICR.EQ.1) PROPST(NPROPM+1)=PARAMT(1) ! KPOROT
c      ELSE
c       NPOI2T=NPOI2T+1
c       PROPST(NPOI2T)=0.0                        ! KPOROT
c       IF(IMICR.EQ.1) PROPST(NPROPM+1)=0.0       ! KPOROT
c       CALL RUNMENT('WARNING: POROSITY CRITERIA NOT CONSIDERED')
c      ENDIF
c     ELSE
c      NPOI2T=NPOI2T+1
c      PROPST(NPOI2T)=0.0                         ! KPOROT
c      IF(IMICR.EQ.1) PROPST(NPROPM+1)=0.0        ! KPOROT
c      GOTO 5
c     ENDIF
C
C**** LOOK FOR FREE ENERGY MODEL
C
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
    5 IF(WORDSS(1).EQ.'FREE_') THEN
       NPOI1S=NPOI2S+1
       NPOI2S=NPOI1S
       PROPSS(NPOI1S)=PARAMS(1)       ! ifrents
       IFRENTS=INT(PROPSS(NPOI1S))
       IF(LARGES.EQ.0) THEN
        IF(IFRENTS.LE.0.OR.IFRENTS.GT.3)
     .   CALL RUNENDS('ERROR: WRONG FREE ENERGY MODEL')
       ELSE
        IF(IFRENTS.LE.0.OR.IFRENTS.GT.8)
     .   CALL RUNENDS('ERROR: WRONG FREE ENERGY MODEL')
       ENDIF
       WRITE(LURESS,875) IFRENTS
       WRITE(LURESS,809)
      ELSE                            ! defaults
       IF(LARGES.EQ.0) THEN
        NPOI1S=NPOI2S+1
        NPOI2S=NPOI1S
        PROPSS(NPOI1S)=1.0            ! ifrents
        IFRENTS=1
       ELSE
        NPOI1S=NPOI2S+1
        NPOI2S=NPOI1S
        PROPSS(NPOI1S)=1.0            ! ifrents
        IFRENTS=1
       ENDIF
       WRITE(LURESS,875) IFRENTS
       WRITE(LURESS,809)
       GO TO 6
      ENDIF
C
C**** LOOK FOR HEAT FLUX MODEL
C
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
    6 IF(WORDSS(1).EQ.'HEAT_') THEN
       NPOI1S=NPOI2S+1
       NPOI2S=NPOI1S
       PROPSS(NPOI1S)=PARAMS(1)       ! ifrekts
       IFREKTS=INT(PROPSS(NPOI1S))
       IF(LARGES.EQ.0) THEN
        IF(IFREKTS.LE.0.OR.IFREKTS.GT.1)
     .   CALL RUNENDS('ERROR: WRONG HEAT FLUX MODEL')
       ELSE
        IF(IFREKTS.LE.0.OR.IFREKTS.GT.2)
     .   CALL RUNENDS('ERROR: WRONG HEAT FLUX MODEL')
       ENDIF
       WRITE(LURESS,876) IFREKTS
       WRITE(LURESS,809)
      ELSE                            ! defaults
       IF(LARGES.EQ.0) THEN
        NPOI1S=NPOI2S+1
        NPOI2S=NPOI1S
        PROPSS(NPOI1S)=1.0            ! ifrekts
        IFREKTS=1
       ELSE
        NPOI1S=NPOI2S+1
        NPOI2S=NPOI1S
        PROPSS(NPOI1S)=1.0            ! ifrekts
        IFREKTS=1
       ENDIF
       WRITE(LURESS,876) IFREKTS
       WRITE(LURESS,809)
       GO TO 7
      ENDIF
C
C**** LOOK FOR 'END_MATERIAL' CARD
C
      NPRINS=0
      CALL LISTENS('PROP05S',NPRINS,ITAPES)
    7 IF(WORDSS(1).NE.'END_M')
     . CALL RUNENDS('PROP05S: END_MATERIAL CARD NOT FOUND   ')
      WRITE(LURESS,809)
C
C**** CONTROLS DIMENSION OF PROPSS
C
      IF(NPOI2S.GT.NPROPS) THEN
       WRITE(LURESS,900) NPROPS,NPOI2S
       CALL RUNENDS('PROP05S: TOO MANY PROPERTIES TO READ')
      ENDIF
C
      RETURN
  803 FORMAT(/,'      DENSITY       Vs.     TEMPERATURE',/)
  804 FORMAT(E15.6,10X,E15.6)
  805 FORMAT(/,'  SPECIFIC HEAT     Vs.     TEMPERATURE',/)
  806 FORMAT(/,'   CONDUCTIVITY     Vs.     TEMPERATURE',/)
  807 FORMAT(E15.6,10X,E15.6,10X,E15.6)
  809 FORMAT(/)
  810 FORMAT(/,3X,'PHASE-CHANGE NUMBER  =',I5,/)
  811 FORMAT(/,3X,'LINEAR PHASE-CHANGE',/)
  812 FORMAT(/,3X,'SOLIDUS TEMP.',11X,'LIQUIDUS TEMP.',12X,
     .            'LATENT HEAT',/)
  813 FORMAT(E15.6,10X,E15.6,10X,E15.6,10X,E15.6,10X,E15.6)
  821 FORMAT(/,3X,'PIECE WISE LINEAR PHASE-CHANGE',/)
  822 FORMAT(/,'PHASE-CHANGE FUNC.  Vs.     TEMPERATURE',/)
  823 FORMAT(/,3X,'CONSTANT LATENT HEAT =',E15.6)
  824 FORMAT(/,3X,'PIECE WISE LINEAR SOLID FRACTION',/)
  825 FORMAT(/,'SOLID FRACTION      Vs.     TEMPERATURE',/)
  826 FORMAT(/,'SOLID FRACTION      Vs.     TEMPERATURE',
     .         '               LATENT HEAT',/)
  831 FORMAT(/,3X,'PARABOLIC PHASE-CHANGE',/)
  861 FORMAT(/,3X,'LEVER RULE',/)
  862 FORMAT(/,3X,'SOLIDUS TEMP.',11X,'LIQUIDUS TEMP.',11X,
     .            'MELTING TEMP.',12X,'LATENT HEAT',/)
  863 FORMAT(/,3X,'SOLIDUS TEMP. ',11X,'EUTECTIC TEMP.',11X,
     .            'LIQUIDUS TEMP.',11X,'MELTING TEMP. ',12X,
     .            'LATENT HEAT   ',/)
  870 FORMAT(/,3X,'NO REAL PHASE-CHANGE',/)
  875 FORMAT(/,3X,'FREE ENERGY MODEL=',I5,/)
  876 FORMAT(/,3X,'HEAT FLUX MODEL=',I5,/)
  900 FORMAT(//,'TOO MANY MATERIAL PROPERTIES TO READ:',/,
     .      20X,'NPROP =',I5,5X,'NUMBE =',I5,/)
      END
