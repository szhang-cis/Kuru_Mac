      SUBROUTINE ANTESO(REFOR,RFOLD,DSOLD,VVECT,WVECT)
C***********************************************************************
C
C**** THIS ROUTINE MODIFIES THE R. H. S. IF A QUASI-NEWTON METHOD IS 
C     USED ( BFGS )
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
C
      COMMON/ANTESOA/NBFGS,NVECT
C
      DIMENSION REFOR(NTOTV), RFOLD(NTOTV), DSOLD(NTOTV), 
     .          VVECT(NTOTV), WVECT(NTOTV)
C
      DATA CONMX,MVECT/1.0D+10,15/
C
      IF(LACCE.NE.3.OR.IITER.LE.1.OR.KARCL.NE.0) RETURN
C
      IBFGS=1
      IF(IITER.EQ.2) THEN
        NVECT=0
        NBFGS=LUBFG
        REWIND NBFGS
      ENDIF
C
C**** SEE IF BFGS UPDATE IS POSSIBLE
C
      GAMMA= GZERO-GCURN
      IF(GAMMA.LE.0.0.OR.GZERO.LE.0.0) THEN
        WRITE(LURES,900)
        WRITE(LUPRI,900)
        IBFGS=0
        GO TO 100
      ENDIF
C
C**** COMPUTE UPDATING VECTORS FOR THIS ITERATION
C
      FACT1=1.0D+00 + DSQRT((AALPH*GAMMA)/GZERO)
      FACT2=1.0D+00/GAMMA
      DO 10 ITOTV=1,NTOTV
        VVECT(ITOTV)=-FACT1*RFOLD(ITOTV)+REFOR(ITOTV)
        WVECT(ITOTV)= FACT2*DSOLD(ITOTV)
  10  CONTINUE
C
C**** CHECK ON CONDITION NUMBER
C
      VV=0.0D+00
      WW=0.0D+00
      DO 20 ITOTV=1,NTOTV
        V=VVECT(ITOTV)
        W=WVECT(ITOTV)
        VV=VV+V*V
        WW=WW+W*W
  20  CONTINUE
C
C**** CHECK IF COND. NUMBER IS POSITIVE
C
      WV4=4.0D+00*(1.0D+00 + FACT2*(-FACT1*GZERO+GCURN) )
      IF(ABS(WV4).LT.1.0D-15) THEN
        WRITE(LURES,902)
        WRITE(LUPRI,902)
        IBFGS=0
        GO TO 100
      ENDIF
C
C**** CHECK IF COND. NUMBER IS TOO LARGE
C
      VALUE=DSQRT(VV*WW)+DSQRT(ABS(VV*WW+WV4))
      ESTCN=VALUE*VALUE/ABS(WV4)
      IF(ESTCN.GT.CONMX) THEN
        WRITE(LURES,901)
        WRITE(LUPRI,901)
        IBFGS=0
        GO TO 100
      ENDIF
C
 100  CONTINUE
C
C**** ADD NEW PAIR OF UPDATING VECTORS
C
      IF(IBFGS.EQ.1) THEN
        NVECT=NVECT+1
        IF(NVECT.GT.MVECT) THEN
          NVECT=1
          REWIND NBFGS
        ENDIF
        WRITE(NBFGS) VVECT,WVECT
      ENDIF
C
C**** END FILE WITH 'REAL' RESIDUAL FORCES ARRAY
C
      WRITE(NBFGS) REFOR
      BACKSPACE NBFGS
C
C**** UPDATE R.H.S. ( RESIDUAL FORCES )
C
      IF(NVECT.EQ.0) RETURN
C
      DO 200 IVECT=1,NVECT
        BACKSPACE NBFGS
        READ(NBFGS) VVECT,WVECT
        BACKSPACE NBFGS
        CONST=0.0D+00
        DO 210 ITOTV=1,NTOTV
  210   CONST=CONST+WVECT(ITOTV)*REFOR(ITOTV)
        DO 220 ITOTV=1,NTOTV
  220   REFOR(ITOTV)=REFOR(ITOTV)+CONST*VVECT(ITOTV)     
  200 CONTINUE     
C
      RETURN
  900 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO NEGATIVE ',
     .                     'SQRT ',3('*'),/)
  901 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO LARGE ',
     .                     'EST. COND. NUMBER ',3('*'),/)
  902 FORMAT(/,5X,3('*'),' BFGS UPDATE ABANDONED DUE TO NEGATIVE ',
     .                     'EST. COND. NUMBER ',3('*'),/)
      END
