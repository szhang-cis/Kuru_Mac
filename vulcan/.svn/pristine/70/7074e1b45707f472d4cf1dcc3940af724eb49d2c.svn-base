      SUBROUTINE MASS32B(DVOLU,PROPS,SHAPE,WSTIF,EHIST,ELDIS,TENOD,
     .                   DISPL,ELCOD,VNORL,DMATX)
C***********************************************************************
C
C**** THIS ROUTINE COMPUTES THE STIFFNESS MATRIX FOR THE GAP ELEMENT
C     ( ELEMENT NO. 32 )
C
C**** PROPERTIES FOR THE CONTACT PROBLEM
C
C     PROPS(2)=RIGIN            : NORNAL STIFFNESS
C     PROPS(3)=IMODEL           : CONTACT MODEL
C     PROPS(5)=TEMPL            : LIQUIDUS TEMPERATURE
C     PROPS(6)=INOTE            : DENOTES WHICH NODE BELONGS TO PIECE
C
C**** STABILIZATION PARAMETERS (CONTROL AT MATERIAL PROPERTIES AND/OR
C     INTERVAL DATA LEVEL) COMING FROM A COMMON OF TUNING PARAMETERS
C
C     IITEF                     : ITERATION FROM WHICH TRUPL ACTS
C     TRUPL                     : FIRST STIFFNESS IN TENSION
C     TRUPM                     : SECOND STIFFNESS IN TENSION
C     TOLGA                     : REFERENCE NORMAL GAP
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
C
      COMMON/TUNING4/RITEN,RITEF,TRUPL,TRUPM,TOLGA,TOLGAM
C
      DIMENSION DVOLU(*),       PROPS(*),
     .          SHAPE(NNODL,*), WSTIF(*),
     .          EHIST(NHIST,*), ELDIS(NDOFC,*),
     .          TENOD(*),       DISPL(NDOFN,*),
     .          ELCOD(NDIME,*), VNORL(NDIME,*)
C
      DIMENSION AUXS1(27,27),   AUXS2(54,54), AUXS3(27,27),
     .          DMATX(NDIME,*), BMATX(3,27)
C
      NNOBO=NNODL/3
      NEVBO=NNOBO*NDOFN
C
      RIGIN=PROPS(2)
      RIGIX=1.0
      RIGIZ=RIGIN
      IMODEL=INT(PROPS(3))  ! 0: symmetric matrix; 1: unsymmetric matrix
      TEMPL=PROPS(5)
      INOTE=INT(PROPS(6))
      ICOMO=INT(PROPS(7))
C
      IITEF=INT(RITEF)
C
C**** LOOP ON INTEGRATION POINTS
C
      DO 100 IGAUS=1,NGAUL
C
C**** ENSURES A UNIT OUTWARD NORMAL (only necessary when NMEMO2=0)
C
      VNORC=0.0
      DO IDIME=1,NDIME
       VNORA=VNORL(IDIME,IGAUS)
       VNORC=VNORC+VNORA*VNORA
      ENDDO
      VNORC=DSQRT(VNORC)
      DO IDIME=1,NDIME
       VNORA=VNORL(IDIME,IGAUS)
       VNORL(IDIME,IGAUS)=VNORA/VNORC
      ENDDO
C
C**** COMPUTES NORMAL GAP (CURRENT)
C
C     DGAPN  > 0: CONTACT PROBLEM
C     DGAPN <= 0: NO CONTACT PROBLEM
C
      DGAPN=0.0
      DO IDOFN=1,NDOFN
       DO INODL=1,NNOBO
        ELDI1=ELDIS(IDOFN,INODL)
        ELDI2=ELDIS(IDOFN,INODL+NNOBO)
        DGAPN=DGAPN+SHAPE(INODL,IGAUS)*(ELDI1-ELDI2)*VNORL(IDOFN,IGAUS)
       END DO
      END DO
C
C**** COMPUTES NORMAL GAP (LAST CONVERGED)
C
      DGAPA=0.0
      DO IDOFN=1,NDOFN
       DO INODL=1,NNOBO
        ELDI1=ELDIS(IDOFN,INODL)-DISPL(IDOFN,INODL)
        ELDI2=ELDIS(IDOFN,INODL+NNOBO)-DISPL(IDOFN,INODL+NNOBO)
        DGAPA=DGAPA+SHAPE(INODL,IGAUS)*(ELDI1-ELDI2)*VNORL(IDOFN,IGAUS)
       END DO
      END DO
C
C**** COMPUTES TEMPERATURE
C
      TGAUS=0.0
      IF(ITERME.GE.0) THEN                 ! coupled problems
       IF(INOTE.EQ.1) THEN
        DO INODL=1,NNOBO
         TGAUS=TGAUS+SHAPE(INODL,IGAUS)*TENOD(INODL)
        END DO
       ELSE
        DO INODL=1,NNOBO
         TGAUS=TGAUS+SHAPE(INODL,IGAUS)*TENOD(INODL+NNOBO)
        END DO
       ENDIF
      ENDIF
C
C**** COMPUTES NORMAL PRESSURE IN THE GLOBAL SYSTEM 
C
      PRESN=0.0
      DO INODL=1,NNOBO
       ELDIP=ELDIS(1,INODL+2*NNOBO)
       PRESN=PRESN+SHAPE(INODL,IGAUS)*ELDIP
      END DO
C
C**** COMPUTES CONTACT RIGIDITY
C
      RIGIN=PROPS(2)
      RIGIX=1.0
      RIGIZ=RIGIN
      IF(ICOMO.EQ.1) THEN
       DGABA=PROPS(8)
       IF(DGAPN.GT.0.0.AND.DGAPN.LT.DGABA) RIGIN=RIGIN/DGABA*DGAPN
      ENDIF
C
C**** "STABILIZED" CONTACT RIGIDITY
C
      IF(TGAUS.LT.TEMPL) THEN
       IF(DGAPN.LE.TOLGA.OR.PRESN.GT.0.0) THEN
        DO III20=1,20
         IF(IITER.GT.(III20*IITEF)) RIGIX=RIGIX*TRUPL
        ENDDO
        IF(DGAPA.LT.TOLGA) RIGIX=RIGIX*TRUPM
       ENDIF
      ENDIF       ! tgaus.lt.templ
C
C**** INITIALISES DMATX
C
      DO IDIME=1,NDIME
       DO JDIME=1,NDIME
        DMATX(IDIME,JDIME)=0.0D+00
       ENDDO
      ENDDO
C
C**** COMPUTES FIRST CONTACT CONSTITUTIVE TENSOR (UNSYMMETRIC)
C     
C     Note: normal component only (not tangential contributions)
C
      DO IDIME=1,NDIME
       PROYI=VNORL(IDIME,IGAUS)
       DMATX(IDIME,1)=RIGIX*PROYI
      ENDDO
C
C**** COMPUTES CONTACT MATRIX (DISPLACEMENT-FORCE) (UNSYMMETRIC)
C
      KSYMA=0
      CALL WBOUND(NDIME,NEVBO,NNOBO,
     .            SHAPE(1,IGAUS),WSTIF,DMATX,BMATX,
     .            KSYMA,AUXS1)
C
C**** COMPUTES SECOND CONTACT CONSTITUTIVE TENSOR (SYMMETRIC)
C     
      DO IDIME=1,NDIME
       DO JDIME=1,NDIME
        DMATX(IDIME,JDIME)=0.0D+00
        IF(IDIME.EQ.JDIME) THEN
         IF(IDIME.EQ.1) THEN
          if(imodel.eq.0) then
           DMATX(IDIME,JDIME)=-1.0/RIGIZ
          else
           DMATX(IDIME,JDIME)= 1.0/RIGIZ
          endif
         ELSE
          DMATX(IDIME,JDIME)=1.0
         ENDIF
        ENDIF
       ENDDO
      ENDDO
C
C**** COMPUTES CONTACT MATRIX (FORCE-FORCE) (SYMMETRIC)
C
      CALL WBOUND(NDIME,NEVBO,NNOBO,
     .            SHAPE(1,IGAUS),WSTIF,DMATX,BMATX,
     .            KSYMM,AUXS3)
C
C**** ASSEMBLES CONTACT MATRICES (SYMM. OR UNSYMM. DEPENDING ON IMODEL)
C
      CALL WINTER(DVOLU(IGAUS),NEVAB,NEVBO,WSTIF,KSYMM,
     .            AUXS1,AUXS2,AUXS3,AUXS1,IMODEL)
C
  100 CONTINUE
C
      RETURN
      END
