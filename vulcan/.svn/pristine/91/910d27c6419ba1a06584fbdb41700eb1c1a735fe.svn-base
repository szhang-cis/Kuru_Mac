      SUBROUTINE STROUT
C***********************************************************************
C
C**** THIS ROUTINE PRINTS OUT THE SOLUTION STRATEGY FOR THE CURRENT 
C     INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
C
      CHARACTER WACCE*31,WACTI*14,WALGO*24,WARCL*31,WCONV*35,WSMUS*14
      DIMENSION WACCE(4), WACTI(2),WALGO(4),WARCL(5),WCONV(4),WSMUS(5)
      DATA WACCE/' NOT ACTIVATED ',
     .           ' SN 1 PARAMET. ',
     .           ' SN 2 PARAMET. ',
     .           '          BFGS '/
      DATA WACTI/' NOT ACTIVATED',
     .           '     ACTIVATED '/
      DATA WALGO/' INITIAL STIFF.',
     .           ' NEWTON-RAPHSON',
     .           ' MODIF. N_R    ',
     .           ' MODIF. N_R    '/
      DATA WARCL/' NOT ACTIVATED ',
     .           '   NORMAL PLANE',
     .           ' UPD. NM. PLANE',
     .           ' SPHERICAL PATH',
     .           ' DISPL. CONTROL'/
      DATA WCONV/' RESID / TOTAL FORCES',
     .           ' RESID / INCR. FORCES',
     .           ' ITERT / INCR. DISPL. ',
     .           ' ITERT / TOTAL ENERGY '/
      DATA WSMUS/' NOT ACTIVATED',
     .           '         LOCAL',
     .           '   GLOBAL A.F.',
     .           '   GLOBAL H.O.',
     .           '      DISCRETE'/
C
C**** HEADING
C
      WRITE(LURES,900)
  900 FORMAT(
     .10X//,' * * * SOLUTION STRATEGY OF THE CURRENT INTERVAL * * *',//)
C
C**** NUMBER OF STEPS AND TIME STEP INTERVAL
C
      WRITE(LURES,899) NSTEP,DTIME
  899 FORMAT(
     .10X,'TOTAL N0. OF STEPS IN THE INTERVAL: ',8X,I5,/,
     .10X,'INITIAL TIME STEP INCREMENT       : ',1X,E12.6)
C
C**** TIME MARCHING SCHEME
C
      IF(KINTE.EQ.0) WRITE(LURES,810)
  810 FORMAT(
     .10X,'TIME MARCHING SCHEME              : NOT ACTIVATED')
C
      IF(KINTE.EQ.1) THEN
       CONST=3.0D0/TBETA
       WRITE(LURES,811) CONST
       IF(KOPTI.EQ.0) WRITE(LURES,812)
       IF(KOPTI.EQ.1) WRITE(LURES,813)
       IF(KOPTI.EQ.2) WRITE(LURES,814)
       IF(KOPTI.EQ.3) WRITE(LURES,815)
      ENDIF
  811 FORMAT(
     .10X,'TIME MARCHING SCHEME              : THETA-WILSON ',/,
     .10X,'INITIAL THETA PARAMETER           =',3X,F10.5,/)
  812 FORMAT(10X,'TIME INCREMENT AND THETA PARAMETER CONSTANT',/)
  813 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND CONSTANT',/,
     .10X,'THETA PARAMETER. ',/)
  814 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND THETA   ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
  815 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE AND THETA ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
C
      IF(KINTE.EQ.2) THEN
       CNEW2=1.0D0/TALFA                 ! alfa
       CNEW1=TBETA*CNEW2                 ! delta
       WRITE(LURES,816) CNEW1,CNEW2
       IF(KOPTI.EQ.0) WRITE(LURES,817)
       IF(KOPTI.EQ.1.OR.KOPTI.EQ.2) WRITE(LURES,818)
       IF(KOPTI.EQ.3) WRITE(LURES,819)
      ENDIF
  816 FORMAT(
     .10X,'TIME MARCHING SCHEME              : NEWMARK',/,
     .10X,'FIRST PARAMETER (DELTA)           =',3X,F10.5,/,
     .10X,'SECOND PARAMETER (ALPHA)          =',3X,F10.5,/)
  817 FORMAT(10X,'TIME INCREMENT CONSTANT',/)
  818 FORMAT(10X,'TIME INCREMENT CONSTANT IN LOG. SCALE ',/)
  819 FORMAT(10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE',/)
C
      IF(KINTE.EQ.3) THEN
       WRITE(LURES,820)
       IF(KOPTI.EQ.0) WRITE(LURES,817)
       IF(KOPTI.EQ.1.OR.KOPTI.EQ.2) WRITE(LURES,818)
       IF(KOPTI.EQ.3) WRITE(LURES,819)
      ENDIF
  820 FORMAT(
     .10X,'TIME MARCHING SCHEME              : CENTRAL DIFFERENCE',/)
C
      IF(KINTE.EQ.5) THEN
       CNEW2=1.0D0/TALFA                 ! alfa
       CNEW1=TBETA*CNEW2                 ! delta
       CNEW3=TGAMA-1.0D0                 ! gama
       WRITE(LURES,821) CNEW3,CNEW1,CNEW2
       IF(KOPTI.EQ.0) WRITE(LURES,817)
       IF(KOPTI.EQ.1.OR.KOPTI.EQ.2) WRITE(LURES,818)
       IF(KOPTI.EQ.3) WRITE(LURES,819)
      ENDIF
  821 FORMAT(
     .10X,'TIME MARCHING SCHEME              : HILBER-HUGHES-TAYLOR',/,
     .10X,'FIRST PARAMETER (GAMMA)           =',3X,F10.5,/,
     .10X,'SECOND PARAMETER (DELTA)          =',3X,F10.5,/,
     .10X,'THIRD PARAMETER (ALPHA)           =',3X,F10.5,/)
C
      IF(KINTE.EQ.6) THEN
       CNEW3=TDELT                       ! theta
       CNEW2=1.0D0/(TALFA*CNEW3*CNEW3)   ! alfa
       CNEW1=TBETA*CNEW2*CNEW3           ! delta
       WRITE(LURES,822) CNEW3,CNEW1,CNEW2
       IF(KOPTI.EQ.0) WRITE(LURES,817)
       IF(KOPTI.EQ.1.OR.KOPTI.EQ.2) WRITE(LURES,818)
       IF(KOPTI.EQ.3) WRITE(LURES,819)
      ENDIF
  822 FORMAT(
     .10X,'TIME MARCHING SCHEME              : COLLOCATION SCHEME',/,
     .10X,'FIRST PARAMETER (THETA)           =',3X,F10.5,/,
     .10X,'SECOND PARAMETER (DELTA)          =',3X,F10.5,/,
     .10X,'THIRD PARAMETER (ALPHA)           =',3X,F10.5,/)
C
C**** TYPE OF OVERALL ALGORITHM
C
      WRITE(LURES,901) WALGO(NALGO)
  901 FORMAT(10X,'TYPE OF ALGORITHM                 :',A)
C
C**** LINE SEARCH
C
      WRITE(LURES,920) WACTI(LINES+1)
  920 FORMAT(10X,'LINE SEARCH                       :',A)
C
C**** ARC-LENGTH
C
      WRITE(LURES,930) WARCL(KARCL+1)
  930 FORMAT(10X,'ARC-LENGHT                        :',A)
C
C**** ACCELERATION METHOD
C
      WRITE(LURES,940) WACCE(LACCE+1)
  940 FORMAT(10X,'ACCELERATION METHOD               :',A,/)
C
C**** CONVERGENCE CRITERIA
C
      WRITE(LURES,951) WCONV(KCONV),TOLER,MITER
C
  951 FORMAT(10X,'CONVERGENCE CRITERIA              : ',A,/,
     .       10X,'  WITH A TOLLERANCE               = ',1X,E12.6,/,
     .       10X,'  MAX. NO. ITERATIONS             = ',8X,I5,/)
C
C**** AUTOMATIC LOAD INCREMENT
C
      IF(LAUTO.EQ.0) WRITE(LURES,960)
      IF(LAUTO.EQ.1) WRITE(LURES,961) INT(DITER)
      IF(LAUTO.EQ.2) WRITE(LURES,962) DITER
      IF(LAUTO.EQ.3) WRITE(LURES,963) DITER
  960 FORMAT(10X,'AUTOMATIC LOAD/DISPL. INCREM.     : NOT ACTIVATED')
  961 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON NO. 
     .ITERATIONS',/,
     .10X,'          DESIRED NO. ITERATIONS  = ',8X,I5)
  962 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON STIFFNESS 
     .CHANGE',/,
     .10X,'                                   REFERED TO THE 
     .INITIAL ONE',/,
     .10X,'    DESIRED STIFFNESS CHANGE      = ',1X,E12.6)
  963 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON STIFFNESS
     .CHANGE',/,
     .10X,'                                   REFERED TO THE 
     .PREVIOUS ONE',/,
     .10X,'    DESIRED STIFFNESS CHANGE      = ',1X,E12.6)
C
C**** AUTOMATIC END OF ANALYSIS
C
      IF(STIFI.EQ.0.) WRITE(LURES,970)
      IF(STIFI.NE.0.) WRITE(LURES,971) STIFI
  970 FORMAT(10X,'AUTOMATIC END OF ANALYSIS         : NOT ACTIVATED',/)
  971 FORMAT(
     .10X,'AUTOMATIC END OF ANALYSIS         : THE ANALYSIS IS 
     .STOPPED IF  ',/,
     .10X,'                                   THE STIFFNESS 
     .PARAMETER IS  ',/,
     .10X,'                                   LOWER THAN A 
     .SPECIFIED VALUE',/,
     .10X,'FINAL STIFFNESS PARAMETER  =',1X,E12.6,/)
C
C**** FOR COUPLED PROLEM: PORE PRESSURE SMOOTHING & LUMPING OPTIONS
C
      IF(KPORE.EQ.2) THEN
         ISMUS=IABS(KSMUS)
         WRITE(LURES,980) WSMUS(ISMUS+1)
         IF(WLUMP.EQ.1) WRITE(LURES,990)
         IF(WLUMP.NE.1) WRITE(LURES,991)WLUMP
      ENDIF
  980 FORMAT(10X,'PORE PRESSURE SMOOTHING OPTION    : ',A)
  990 FORMAT(10X,'PORE PRESSURE LUMPING OPTION      : NOT ACTIVATED',/)
  991 FORMAT(10X,'PORE PRESSURE LUMPING MULTIPLIER  =',1X,E12.6,/)
      RETURN
      END
