      SUBROUTINE RENUM0T(LNODST,LPNTNT,NELEMT,NNODET,NPOINT,IWORKT)
C**********************************************************************
C                 
C****THIS ROUTINE SETS UP ARRAY LPNTN IF NODE RENUMBERING FOR
C    PROFILE MINIMIZATION IS DESIRED
C                 
C**********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'auxl_omt.f'
C
      COMMON/LOGUNT/LUDTST,LUSOLT,LUFROT,LUFRHT,LUDATT,LUPRIT,LUREST,
     .              LUSO2T,LUFR2T,LUPOST,LURSTT,LUBFGT,LUPIPT,LUPANT,
     .              LUGEOT,LUSETT,LUMATT,LUINIT,LULOAT,LUFIXT,LUADVT,
     .              LUACTT,LUFANT,LUSTRT,
     .              LUCU1T,LUCU2T,LUCU3T,LUCU4T,LUCU5T,LUCU6T,LUCU7T,
     .              LUCU8T,LUCU9T,LUC10T
C
      DIMENSION LNODST(NNODET,*), LPNTNT(*), IWORKT(*)
C
C.... COMPUTES THE CONNECTIONS BETWEEN DEGREES OF FREEDOM
C
      N1 = 1
      CALL RENUM1(LNODST,IWORKT(N1),NNODET,NPOINT,NELEMT,NPOSIT)
C
C.... AUXILIAR MEMORY FOR RENUMBERING
C
      N2 = N1 + NPOSIT          !  NODAL CONNECTIONS
      N3 = N2 + NPOINT          !  NSTART
      N4 = N3 + NPOINT          !  LEVEL
      IF(N4.GT.LWOR1T*2) THEN
	WRITE(LUREST,
     .   '('' RENUMBERING MODULE REQUIRES MORE WORKING SPACE'',
     .   2I10)') N4, LWOR1T
	CALL RUNENDT('INSUFFICIENT WORK SPACE TO RENUMBER')
      ENDIF
C
C.... RENUMBERING ROUTINES
C
      CALL RENUM2(IWORKT(N1),IWORKT(N2),IWORKT(N3),LPNTNT,NPOINT,NS)
      CALL RENUM3(IWORKT(N1),IWORKT(N2),IWORKT(N3),LPNTNT,NPOINT,NS)
C
C.... OBTAIN THE INVERSE OF ARRAY LPNTNT
C
      DO IPOINT=1,NPOINT
	IWORKT(LPNTNT(IPOINT))=IPOINT
      ENDDO
C
C.... PRINT RENUMBERED NODES
C
      WRITE(LUREST,900)
      DO IPOINT=1,NPOINT
        WRITE(LUREST,901) IPOINT,LPNTNT(IPOINT),IPOINT,IWORKT(IPOINT)
      ENDDO
 900  FORMAT(//,5X,'RENUMBERED NODES :',//,7X,'OLD',7X,'NEW',
     .                                    17X,'NEW',7X,'OLD',/)
 901  FORMAT(2(5X,I5),10X,2(5X,I5))
C
      DO IPOINT=1,NPOINT
	LPNTNT(IPOINT)=IWORKT(IPOINT)
      ENDDO
C
      RETURN
      END
