      SUBROUTINE CONVERT(DISITT,DISPRT,DISTOT,REFORT,TLOADT,IFFIXT)
C***********************************************************************
C
C**** THIS ROUTINE CHECKS FOR CONVERGENCE OF THE ITERATION PROCESS
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'auxl_omt.f'
      INCLUDE 'inpo_omt.f'
C
      DIMENSION DISITT(*),        DISPRT(*),        DISTOT(NTOTVT,*), 
     .          REFORT(NTOTVT,2), TLOADT(NTOTVT,*), IFFIXT(*)
C
      DIMENSION PVALS(4),RATIS(4),SELEC(4),SIGNS(4)
C
      CHARACTER*12 BLANK,CONVE,DIVER,SELEC,SIGNA,SIGNS
C
      SAVE PVALS,GINIT
      SAVE RETO4,DDDDD
      SAVE PVALU
      save mitertx,tolertx,itrucx,truchx
C
      DATA CONVE,DIVER,BLANK,SIGNA
     .    /'  D -->> C  ','  D <<-- C  ','            ','  SELECTED  '/ 
C
      ZEROM=1.0E-08
C
      CALL CPUTIMT(CUCPUT)
C
C**** INITIALISE FLAGS
C
      NCHEKT=0
      IJUMPT=0
C
      DO 1 I=1,4
      RATIS(I)=0.0D0
   1  SELEC(I)=BLANK
      SELEC(KCONVT)=SIGNA
C
      IF(IITERT.EQ.1) THEN
       DO 2 I=1,4
   2   SIGNS(I)=BLANK
      ELSE
       DO 3 I=1,4
   3   SIGNS(I)=CONVE
      ENDIF
C
C**** COMPUTE RELEVANT NORMS
C
      RESID=0.0D0
      RETO1=0.0D0
      RETO11=0.0D0
      RETO2=0.0D0
      RETO3=0.0D0
      DIST1=0.0D0
      DIST2=0.0D0
      GITER=0.0D0
      GTOTL=0.0D0
C
      DO 10 IDOFNT=1,NDOFNT
      DO 11 IPOINT=1,NPOINT
      ITOTVT=(IPOINT-1)*NDOFCT+IDOFNT
C
      RESLD=REFORT(ITOTVT,1)
      TOTL1=TLOADT(ITOTVT,1)              ! not used in thermal problems
      TOTL11=REFORT(ITOTVT,2)
C
      IF(IFFIXT(ITOTVT).EQ.1) THEN
       TOTL1=TOTL1-RESLD                  ! Add reaction; not used
       RESLD=0.0D0
      ENDIF
      TOTL2=TOTL1-TLOADT(ITOTVT,2)        ! not used
      TOTL3=REFORT(ITOTVT,1)+REFORT(ITOTVT,2)
C
      DIITE=DISITT(ITOTVT)
      DIINC=DISPRT(ITOTVT)
      DTOTL=DISTOT(ITOTVT,1)
C
      RESID=RESID+RESLD*RESLD
      RETO11=RETO11+TOTL11*TOTL11
      RETO1=RETO1+TOTL1*TOTL1
      RETO2=RETO2+TOTL2*TOTL2
      RETO3=RETO3+TOTL3*TOTL3
C
      DIST1=DIST1+DIITE*DIITE
      DIST2=DIST2+DIINC*DIINC
C
      IF(IITERT.EQ.1) THEN
       RETO4=RESID
       DDDDD=DIST1
      ENDIF
C
      GITER=GITER+RESLD*DIITE
      GTOTL=GTOTL+TOTL1*DTOTL
C
   11 CONTINUE
   10 CONTINUE 
C
C**** FOR PROBLEMS WITH ZERO CONDUCTIVITY
C
      IF(RETO11.LE.ZEROM) THEN
       IF(RESID.LE.RETO11) RESID=0.0D0
       RETO11=ZEROM
      ENDIF
C
C**** COMPUTE NORM RATIOS
C
      IF(RETO11.GE.ZEROM)      RATIS(1)=100.0D0*DSQRT(RESID/RETO11)
      IF(RETO4.GT.ZEROM)       RATIS(2)=100.0D0*DSQRT(RESID/RETO4)
      IF(DIST2.GT.ZEROM)       RATIS(3)=100.0D0*DSQRT(DIST1/DIST2)
      IF(DABS(GTOTL).GT.ZEROM) RATIS(4)=100.0D0*DABS(GITER/GTOTL)
      IF(DDDDD.GT.ZEROM)       CONNU=   100.0D0*DSQRT(DIST1/DDDDD)
C
C**** PHASE-CHANGE FRONT VELOCITY CONTROL ALGORITHM
C
      CALL PHCHFVT(REFORT,RATIS,     1)
C
      DO 5 I=1,4
    5 IF(RATIS(I).GT.999.9999D0) RATIS(I)=999.9999D0
C
C**** CHECK FOR CONVERGENCE WITH SPECIAL REFERENCE TO THE SELECTED ONE
C
      RATIO=RATIS(KCONVT)
      IF(RATIO.GT.TOLERT) NCHEKT=1
C
      IF(IITERT.GT.1) THEN
       DO 6 I=1,4
    6  IF(RATIS(I).GT.PVALS(I)) SIGNS(I)=DIVER
       IF(NCHEKT.EQ.1.AND.RATIO.GT.PVALU) NCHEKT=999
      ENDIF
C
      DO 7 I=1,4
    7 PVALS(I)=RATIS(I)
      PVALU=RATIO
C
C>>>> JUMPING TO NEXT STEP
C
      IF((NCHEKT.NE.0).AND.(IITERT.GT.MITERT/2).AND.
     .                     (RATIO.LT.2.0D0*TOLERT)) THEN
       NCHEKT=0
       IJUMPT=1
       WRITE(LUPRIT,905)
      ENDIF
C
C**** PRINT RESULTS
C
      WRITE(LUREST,900) (RATIS(I),SIGNS(I),SELEC(I),I=1,4)
c     WRITE(LUREST,800) (RATIS(I),SIGNS(I),SELEC(I),I=1,4),CONNU
      IF(NCHEKT.EQ.0)   WRITE(LUREST,901) CUCPUT-CPUINT
      IF(NCHEKT.EQ.1)   WRITE(LUREST,902) CUCPUT-CPUINT
      IF(NCHEKT.EQ.999) WRITE(LUREST,903) CUCPUT-CPUINT
      IF(IJUMPT.EQ.1)   WRITE(LUREST,904) CUCPUT-CPUINT
      WRITE(LUPRIT,910) ITIMET,ISTEPT,IITERT,CUCPUT-CPUINT,RATIO/TOLERT
C
      RETURN
C
  900 FORMAT(/10X,'CONVERGENCE CHECKS :',//,
     .    15X,'RESIDUAL FLUXES/TOTAL   FLUXES =',F10.4,' ( % )',2A12/,
     .    15X,'RESIDUAL FLUXES/INCRMT. FLUXES =',F10.4,' ( % )',2A12/,
     .    15X,'ITERATV. TEMPE./INCRMT. TEMPE. =',F10.4,' ( % )',2A12/,
     .    15X,'ITERATV. ENERGY/TOTAL   ENERGY =',F10.4,' ( % )',2A12/)
C
c  800 FORMAT(/10X,'CONVERGENCE CHECKS :',//,
c     .    15X,'RESIDUAL FLUXES/TOTAL   FLUXES =',F10.4,' ( % )',2A12/,
c     .    15X,'RESIDUAL FLUXES/INCRMT. FLUXES =',F10.4,' ( % )',2A12/,
c     .    15X,'ITERATV. TEMPE./INCRMT. TEMPE. =',F10.4,' ( % )',2A12/,
c     .    15X,'ITERATV. ENERGY/TOTAL   ENERGY =',F10.4,' ( % )',2A12/,
c     .    15X,'ITERATV. TEMPE./INC111. TEMPE. =',F10.4,' ( % )',2A12/)
C
  901 FORMAT(10X,'>>>>>>>>> CONVERGED ',10X,'CPU TIME =',F10.3)
  902 FORMAT(10X,'>>>>>>>>> CONVERGING',10X,'CPU TIME =',F10.3)
  903 FORMAT(10X,'>>>>>>>>> DIVERGING ',10X,'CPU TIME =',F10.3)
  904 FORMAT(10X,'>>>>>>>>> SKIPPING  ',10X,'CPU TIME =',F10.3)
  905 FORMAT(10X,'>>>>>>>>> JUMPING TO NEXT STEP')
  910 FORMAT(5X,'ITIME =',I5,2X,'ISTEP =',I5,2X,'IITER =',I5,2X,/,
     .      10X,'CUCPU =',F10.3,2X,'RATIO/TOLER =',E15.6/)
      END
