      SUBROUTINE OUTSMO(ELDAT,ELPRE,ELVAR,ELMAT,LNODS,MATNO,PROEL,
     .                  PROPS,COORD,DISTO,LACTI,
     .                  SMSTS,SMSTN,ACCPN,SMSTP,SINI2,SINI3,WORK1)
C***********************************************************************
C
C**** THIS ROUTINE PERFORMS A SMOOTHING OVER DIFFERENT VARIABLES
C
C
C     Notes:
C
C     The call to OUTASS includes NNODE (instead of NNODS) because the
C     dimension of the arrays in this routine are fixed
C
C***********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      COMMON/SMOGAU/FACTA
      COMMON/HOMOGENIZATION/HVOLU,HSTRE(6)
C
      DIMENSION ACCPN(NPOIN),       SMSTS(NSTR1,NPOIN),
     .          SMSTN(NSTR1,NPOIN), SMSTP(NNUIN,NPOIN)
      DIMENSION MATNO(NELEM),       LNODS(NNODE,NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX)
      DIMENSION COORD(NDIME,NPOIN), DISTO(*),
     .          LACTI(NELEM)
      DIMENSION SINI2(NPRE2,*),     SINI3(NPRE3,*)
C
      DIMENSION WORK1(*)
C
C**** COMPUTES NUMBER OF POINTS WITHOUT CONTACT (AL METHOD)
C
      NPOI1=NPOIN-NPOIC
C
      ISINI23=0
      IF(INITV.EQ.1.AND.IPRCO.EQ.0) ISINI23=1
C
      FACTA=1.D+00
      DO IPOIN=1,NPOIN
       ACCPN(IPOIN)=0.D+00
       DO ISTRE=1,NSTR1
        SMSTS(ISTRE,IPOIN)=0.D+00
        IF(ISINI23.EQ.1.AND.NPRE2.GT.0)
     .                             SMSTS(ISTRE,IPOIN)=SINI2(ISTRE,IPOIN)
        SMSTN(ISTRE,IPOIN)=0.D+00
       ENDDO
       DO INUIN=1,NNUIN
        SMSTP(INUIN,IPOIN)=0.D+00
        IF(ISINI23.EQ.1.AND.NPRE3.GT.0)
     .                             SMSTP(INUIN,IPOIN)=SINI3(INUIN,IPOIN)
       ENDDO
      ENDDO
C
      HVOLU=0.0D0
      DO ISTRE=1,NSTR1
       HSTRE(ISTRE)=0.0D0
      ENDDO
C
C**** LOOP OVER THE ELEMENTS
C
      DO 100 IELEM=1,NELEM
       IF(NACTI.EQ.1) THEN
        IF(LACTI(IELEM).EQ.0) GO TO 100       ! skip non active elements
       ENDIF
       LGRUP=MATNO(IELEM)
       LMATS=INT(PROEL(1,LGRUP))
       LTYPE=INT(PROEL(5,LGRUP))
       NNODL=INT(PROEL(2,LGRUP))
       IF(LTYPE.EQ.2) GO TO 100       ! SKIP REINFORCING ELEMENTS
       IF(LTYPE.EQ.3) GO TO 100       ! SKIP LINK ELEMENTS
       IF(LTYPE.EQ.4) GO TO 100       ! SKIP CONTACT ELEMENTS
       IF(LTYPE.EQ.32) GO TO 100      ! SKIP CONTACT ELEMENTS
       IF(LTYPE.EQ.33) GO TO 100      ! SKIP LINK ELEMENTS
C
C**** READ ELDAT & ELVAR FROM DATA BASE
C
       IF(NMEMO1M.EQ.0.OR.NMEMO2M.EQ.0)
     .  CALL DATBAS(ELDAT,    1,    2)
       CALL DATBAS(ELVAR,    3,    2)
C
C**** GATHER NODAL COORDINATES
C
       IF(NMEMO1M.EQ.1) THEN    ! coordinates in a global array
        CALL GATHER(COORD,NDIME,NPOIN,WORK1(IGSMO(25)),NDIME,
     .              NNODL,LNODS(1,IELEM))
       ENDIF
C
       IF(LARGE.NE.0) THEN
        IF(NMEMO5M.EQ.0) THEN
C
C**** SCALAR GATHER OPERATIONS ( DISTO ---> ELDIS(ELVAR) )
C
         CALL GATHER(DISTO,NDOFC,NPOIN,ELVAR,           NDOFC,NNODL,
     .               LNODS(1,IELEM))
        ELSE
C
C**** SCALAR GATHER OPERATIONS ( DISTO ---> ELDIS )
C
         CALL GATHER(DISTO,NDOFC,NPOIN,WORK1(IGSMO(27)),NDOFC,NNODL,
     .               LNODS(1,IELEM))
        ENDIF                   ! nmemo5m.eq.0
       ENDIF                    ! large.ne.0
C
C**** COMPUTES ACCPN
C
       DO INODE=1,NNODS
        LPOIN=LNODS(INODE,IELEM)
        IF(LPOIN.NE.0) ACCPN(LPOIN)=ACCPN(LPOIN)+FACTA
       ENDDO
C
C**** CALL THE ELEMENT PROCESSOR TO EVALUATE ELEMENT CONTRIBUTION TO
C     GLOBAL VECTOR OF STRESSES
C
       IF(ISINI23.EQ.0) THEN
        CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .              WORK1,WORK1,WORK1,WORK1,WORK1,
     .              ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   13)
C
C**** INCLUDE IT IN A GLOBAL VECTOR
C
        CALL OUTASS(LNODS,SMSTS,WORK1(IGSMO(5)),FACTA,
     .              NNODE,IELEM,NELEM,NPOIN,
     .              NSTR1)
       ENDIF
C
C**** CALL THE ELEMENT PROCESSOR TO EVALUATE ELEMENT CONTRIBUTION TO
C     GLOBAL VECTOR OF STRAINS
C
       CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .             WORK1,WORK1,WORK1,WORK1,WORK1,
     .             ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   14)
C
C**** INCLUDE IT IN A GLOBAL VECTOR
C
       CALL OUTASS(LNODS,SMSTN,WORK1(IGSMO(7)),FACTA,
     .             NNODE,IELEM,NELEM,NPOIN,
     .             NSTR1)
C
C**** CALL THE ELEMENT PROCESSOR TO EVALUATE ELEMENT CONTRIBUTION TO
C     GLOBAL VECTOR OF INTERNAL VARIABLES
C
       IF(ISINI23.EQ.0) THEN
        CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .              WORK1,WORK1,WORK1,WORK1,WORK1,
     .              ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   15)
C
C**** INCLUDE IT IN A GLOBAL VECTOR
C
        CALL OUTASS(LNODS,SMSTP,WORK1(IGSMO(10)),FACTA,
     .              NNODE,IELEM,NELEM,NPOIN,
     .              NNUIN)
       ENDIF
C
  100 CONTINUE
C
C**** PERFORMS AVERAGE MEAN FOR STRESSES
C
      IF(ISINI23.EQ.0) THEN
       DO IPOIN=1,NPOI1
        DO ISTRE=1,NSTR1
         IF(ACCPN(IPOIN).NE.0.0)
     .    SMSTS(ISTRE,IPOIN)=SMSTS(ISTRE,IPOIN)/ACCPN(IPOIN)
        ENDDO
       ENDDO
      ENDIF
C
C**** PERFORMS AVERAGE MEAN FOR STRAINS
C
      DO IPOIN=1,NPOI1
       DO ISTR1=1,NSTR1
        IF(ACCPN(IPOIN).NE.0.0)
     .   SMSTN(ISTR1,IPOIN)=SMSTN(ISTR1,IPOIN)/ACCPN(IPOIN)
       ENDDO
      ENDDO
C
C**** PERFORMS AVERAGE MEAN FOR INTERNAL VARIABLES
C
      IF(ISINI23.EQ.0) THEN
       DO IPOIN=1,NPOI1
        DO INUIN=1,NNUIN
         IF(ACCPN(IPOIN).NE.0.0)
     .    SMSTP(INUIN,IPOIN)=SMSTP(INUIN,IPOIN)/ACCPN(IPOIN)
        ENDDO
       ENDDO
      ENDIF
C
C**** COMPUTES HOMOGENIZED STRESS
C
      DO ISTRE=1,NSTR1
       HSTRE(ISTRE)=HSTRE(ISTRE)/HVOLU
      ENDDO
C
C**** INTERPOLATE FOR MID-SIDE NODES
C
      DO 200 IELEM=1,NELEM
       IF(NACTI.EQ.1) THEN
        IF(LACTI(IELEM).EQ.0) GO TO 200       ! skip non active elements
       ENDIF
       LGRUP=MATNO(IELEM)
       LMATS=INT(PROEL(1,LGRUP))
       LTYPE=INT(PROEL(5,LGRUP))
       NNODL=INT(PROEL(2,LGRUP))
       IF(LTYPE.EQ.2) GO TO 200       ! SKIP REINFORCING ELEMENTS
       IF(LTYPE.EQ.3) GO TO 200       ! SKIP LINK ELEMENTS
       IF(LTYPE.EQ.4) GO TO 200       ! SKIP CONTACT ELEMENTS
       IF(LTYPE.EQ.32) GO TO 200      ! SKIP CONTACT ELEMENTS
       IF(LTYPE.EQ.33) GO TO 200      ! SKIP LINK ELEMENTS
C
C****  CALL THE ELEMENT PROCESSOR TO "NOTHING" (computes NQUTR)
C
       CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .             WORK1,WORK1,WORK1,WORK1,WORK1,
     .             ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   18)
C
       CALL SMONOD(NDIME,NNODL,NNODS,NQUTR)
C
       IF(NNODL.EQ.NNODS) GO TO 200
C
C**** STRESSES
C
       DO ISTRE=1,NSTR1
        DO INODE=1,NNODS
         IPOIN=LNODS(INODE,IELEM)
         WORK1(IGSMO(5)+INODE-1)=SMSTS(ISTRE,IPOIN)
        END DO
        CALL SMOMID(WORK1(IGSMO(5)),NDIME,NNODL,NQUTR)
        DO INODE=NNODS+1,NNODL
         IPOIN=LNODS(INODE,IELEM)
         SMSTS(ISTRE,IPOIN)=WORK1(IGSMO(5)+INODE-1)
        END DO
       END DO
C
C**** STRAINS
C
       DO ISTRE=1,NSTR1
        DO INODE=1,NNODS
         IPOIN=LNODS(INODE,IELEM)
         WORK1(IGSMO(7)+INODE-1)=SMSTN(ISTRE,IPOIN)
        END DO
        CALL SMOMID(WORK1(IGSMO(7)),NDIME,NNODL,NQUTR)
        DO INODE=NNODS+1,NNODL
         IPOIN=LNODS(INODE,IELEM)
         SMSTN(ISTRE,IPOIN)=WORK1(IGSMO(7)+INODE-1)
        END DO
       END DO
C
C**** INTERNAL VARIABLES
C
       DO INUIN=1,NNUIN
        DO INODE=1,NNODS
         IPOIN=LNODS(INODE,IELEM)
         WORK1(IGSMO(10)+INODE-1)=SMSTP(INUIN,IPOIN)
        END DO
        CALL SMOMID(WORK1(IGSMO(10)),NDIME,NNODL,NQUTR)
        DO INODE=NNODS+1,NNODL
         IPOIN=LNODS(INODE,IELEM)
         SMSTP(INUIN,IPOIN)=WORK1(IGSMO(10)+INODE-1)
        END DO
       END DO
C
  200 CONTINUE
C
      RETURN
      END
