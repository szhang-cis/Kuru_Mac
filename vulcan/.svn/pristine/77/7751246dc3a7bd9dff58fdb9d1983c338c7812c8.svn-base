      SUBROUTINE RSTAR3S(DISPRS,DISTOS,ELPRES,ELVARS,HEADSS,HTLODS,
     .                   IFFIXS,REFORS,RLOADS,TLOADS,IFLAGS)
C***********************************************************************
C
C**** THIS ROUTINE REFORMS THE FOLLOWING TASKS:
C
C     NEW     RUN: WRITES THE RESULTS OF THE CURRENT TIME STEP
C     RESTART RUN: READS THE RESULTS OF THE SELECTED TIME STEP 
C                ( record pointer KPOST has been identified in 
C                  routine rschek )
C
C     - IFLAG = 1 - NEW     RUN: WRITE INTO RESTART FILE 
C     - IFLAG = 2 - RESTART RUN: READ  FROM RESTART FILE
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inpo_oms.f'
C
      DIMENSION HTLODS(NHLODS,NSUBFS,NFUNCS), IFFIXS(NTOTVS,2),
     .          RLOADS(NTOTVS)
      DIMENSION DISPRS(NTOTVS,3),             DISTOS(NTOTVS,3),
     .          HEADSS(NPOINS,4), 
     .          REFORS(NTOTVS),               TLOADS(NTOTVS,2)
      DIMENSION ELPRES(NPREVS),               ELVARS(NSTATS)



      call runends('stop in rstar3s')




C
c     CALL CPUTIMS(TIME1S)
C
c     IF(IFLAGT.EQ.1)
c    . OPEN(UNIT=LURSTT,FILE=CKT,STATUS='OLD',ACCESS='DIRECT',
c    .      FORM='UNFORMATTED',RECL=LENRCT)
C
C**** WRITE OR READ ALL COMMON VARIABLES
C
c     IF(IFLAGT.EQ.1)THEN
C
C**** WRITE COMMON BLOCK 'INTERVL_OM'
C
c      WRITE(LURSTT,REC=NRECCT+1) 
C
C**** COMMON/CONSTNTA/
c    .                DAMP1T,DAMP2T,DITERT,DTIMET,GRAVYT,GVECTT,
c    .                STIFIT,TALFAT,TBETAT,TOLERT,XTIMET,WLUMPT,
C**** COMMON/CURRENTA/
c    .                ITIMET,ISTEPT,IITERT,KDTIMT,KRESLT,KSTIFT,KUNLDT,
c    .                NCHEKT,
C**** COMMON/CURRENTB/
c    .                ARCLNT,FACTOT,FACPRT,PITERT,PVALUT,STICUT,
c    .                STIINT,TFACTT,TTIMET,
C**** COMMON/INTERVTA/
c    .                IMPOST,KALGOT,KARCLT,KDAMPT,KINTET,KOPTIT,KCONVT,
c    .                LACCET,LAUTOT,LINEST,MITERT,NALGOT,NBACKT,NCDIST,
c    .                NSTEPT,NOUTPT
C
C**** WRITE COMMON BLOCK 'INP_OUT_OM'
C
C**** COMMON/PLOTERTA/ & COMMON/PLOTERTB/
c      WRITE(LURSTT,REC=NRECCT+2) NCOLDT,NCURVT,NPONTT,FORMAT
c      WRITE(LURSTT,REC=NRECCT+3) MPLOTT
C
c     ELSE
C
C**** READ COMMON BLOCK 'INTERVL_OM'
C
c      READ(LURSTT,REC=NRECCT+1) 
C
C**** COMMON/CONSTNTA/
c    .                DAMP1T,DAMP2T,DITERT,DTIMET,GRAVYT,GVECTT,
c    .                STIFIT,TALFAT,TBETAT,TOLERT,XTIMET,WLUMPT,
C**** COMMON/CURRENTA/
c    .                ITIMET,ISTEPT,IITERT,KDTIMT,KRESLT,KSTIFT,KUNLDT,
c    .                NCHEKT,
C**** COMMON/CURRENTB/
c    .                ARCLNT,FACTOT,FACPRT,PITERT,PVALUT,STICUT,
c    .                STIINT,TFACTT,TTIMET,
C**** COMMON/INTERVTA/
c    .                IMPOST,KALGOT,KARCLT,KDAMPT,KINTET,KOPTIT,KCONVT,
c    .                LACCET,LAUTOT,LINEST,MITERT,NALGOT,NBACKT,NCDIST,
c    .                NSTEPT,NOUTPT
C
C**** READ COMMON BLOCK 'INP_OUT_OM'
C
C**** COMMON/PLOTERTA/ & COMMON/PLOTERTA/
c      READ(LURSTT,REC=NRECCT+2) NCOLDT,NCURVT,NPONTT,FORMAT
c      READ(LURSTT,REC=NRECCT+3) MPLOTT
ctm
ctmC.....COMMON/I_P_CT/
ctm        READ(LURSTT,REC=NRECCT+4) IPCSTT,NTURNT,NITEMT,PNAMET,EXIMPT
ctm        READ(LURSTT,REC=NRECCT+5) TOLEDT,IPARAT
ctm
C
c     ENDIF
C
C**** READ FROM PROCESS AREA AND WRITE TO CONVERGED AREA ELPRE & ELVAR
C
c     IF(IFLAGT.EQ.1) THEN
c      DO IELEMT=1,NELEMT
C
C**** READ ELPRE & ELVAR ( CURRENT )
C
c       IF(NMEMO.EQ.1)
c    .   CALL DATBAST(ELPRET,    2,    2)
c       IF(NMEMO3.EQ.1.OR.NMEMO4.EQ.1.OR.NMEMO5.EQ.0)
c    .   CALL DATBAST(ELVART,    3,    2)
C
C**** WRITE ELPRE & ELVAR
C
c       IF(NMEMO.EQ.1)
c    .   CALL DATRSTT(ELPRET,    2,    1)
c       IF(NMEMO3.EQ.1.OR.NMEMO4.EQ.1.OR.NMEMO5.EQ.0)
c    .   CALL DATRSTT(ELVART,    3,    1)
c      ENDDO
c     ENDIF
C
C**** READ OR WRITE ALL MATRICES
C
c     CALL DATRSTT(DISTOT,   4,IFLAGT)
C
c     CALL DATRSTT(DISPRT,   5,IFLAGT)
C
c     CALL DATRSTT(HEADST,   6,IFLAGT)
C
c     CALL DATRSTT(REFORT,   7,IFLAGT)
C
c     CALL DATRSTT(TLOADT,   8,IFLAGT)
C
c     CALL DATRSTT(HTLODT,   9,IFLAGT)
C
c     CALL DATRSTT(IFFIXT,  10,IFLAGT)
C
c     CALL DATRSTT(RLOADT,  11,IFLAGT)
C
C**** WRITE HEADINGS
C
c     IF(IFLAGT.EQ.1) THEN
c      WRITE(LURSTT,REC=     1) ITIMET,ISTEPT,TTIMET,NRECCT,KTSTET
c      WRITE(LURSTT,REC=NRECCT) ITIMET,ISTEPT,TTIMET,NRECCT,KTSTET
c     ENDIF
C
c     IF(IFLAGT.EQ.1) CLOSE(LURSTT)
C
c     CALL CPUTIMS(TIME2S)
c     CPURSS=CPURSS+(TIME2S-TIME1S)
      RETURN
C
      END
