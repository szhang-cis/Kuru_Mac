      SUBROUTINE STROUTS
C***********************************************************************
C
C**** THIS ROUTINE PRINTS OUT THE SOLUTION STRATEGY FOR THE CURRENT 
C     INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
C
      CHARACTER WACCES*31,WACTIS*14,WALGOS*24,WARCLS*31,WCONVS*35,
     .          WSMUSS*14
      DIMENSION WACCES(4),WACTIS(2),WALGOS(4),WARCLS(5),WCONVS(4),
     .          WSMUSS(5)
      DATA WACCES/' NOT ACTIVATED ',
     .            ' SN 1 PARAMET. ',
     .            ' SN 2 PARAMET. ',
     .            '          BFGS '/
      DATA WACTIS/' NOT ACTIVATED',
     .            '     ACTIVATED '/
      DATA WALGOS/' INITIAL STIFF.',
     .            ' NEWTON-RAPHSON',
     .            ' MODIF. N_R    ',
     .            ' MODIF. N_R    '/
      DATA WARCLS/' NOT ACTIVATED ',
     .            '   NORMAL PLANE',
     .            ' UPD. NM. PLANE',
     .            ' SPHERICAL PATH',
     .            ' DISPL. CONTROL'/
      DATA WCONVS/' RESID / TOTAL FORCES',
     .            ' RESID / INCR. FORCES',
     .            ' ITERT / INCR. DISPL. ',
     .            ' ITERT / TOTAL ENERGY '/
      DATA WSMUSS/' NOT ACTIVATED',
     .            '         LOCAL',
     .            '   GLOBAL A.F.',
     .            '   GLOBAL H.O.',
     .            '      DISCRETE'/
C
C**** HEADING
C
      WRITE(LURESS,900)
  900 FORMAT(
     .10X//,' * * * SOLUTION STRATEGY OF THE CURRENT INTERVAL * * *',//)
C
C**** NUMBER OF STEPS AND TIME STEP INTERVAL
C
      WRITE(LURESS,899) NSTEPS,DTIMES
  899 FORMAT(
     .10X,'TOTAL N0. OF STEPS IN THE INTERVAL: ',8X,I5,/,
     .10X,'INITIAL TIME STEP INCREMENT       : ',1X,E12.6)
C
C**** TIME MARCHING SCHEME
C
      IF(KINTES.EQ.0) WRITE(LURESS,810)
  810 FORMAT(
     .10X,'TIME MARCHING SCHEME              : NOT ACTIVATED')
C
      IF(KINTES.EQ.1) THEN
         WRITE(LURESS,811) TALFAS
         IF(KOPTIS.EQ.0) WRITE(LURESS,812)
         IF(KOPTIS.EQ.1) WRITE(LURESS,813)
         IF(KOPTIS.EQ.2) WRITE(LURESS,814)
         IF(KOPTIS.EQ.3) WRITE(LURESS,815)
      ENDIF
  811 FORMAT(
     .10X,'TIME MARCHING SCHEME              : EULER ',/,
     .10X,'INITIAL THETA PARAMETER           =',3X,F10.5,/)
  812 FORMAT(10X,'TIME INCREMENT AND THETA PARAMETER CONSTANT',/)
  813 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND CONSTANT',/,
     .10X,'THETA PARAMETER. ',/)
  814 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND THETA   ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
  815 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE AND THETA ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
C
      IF(KINTES.EQ.2) THEN
         CNEW2S=1./TALFAS
         CNEW1S=TBETAS*CNEW2S
         WRITE(LURESS,816) CNEW1S,CNEW2S
         IF(KOPTIS.EQ.0) WRITE(LURESS,817)
         IF(KOPTIS.EQ.1.OR.KOPTIS.EQ.2) WRITE(LURESS,818)
         IF(KOPTIS.EQ.3) WRITE(LURESS,819)
      ENDIF
  816 FORMAT(
     .10X,'TIME MARCHING SCHEME              : NEWMARK',/,
     .10X,'FIRST PARAMETER                   =',3X,F10.5 ,/,
     .10X,'SECOND PARAMETER                  =',3X,F10.5,/)
  817 FORMAT(10X,'TIME INCREMENT CONSTANT',/)
  818 FORMAT(10X,'TIME INCREMENT CONSTANT IN LOG. SCALE ',/)
  819 FORMAT(10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE',/)
C
      IF(KINTES.EQ.3) THEN
         WRITE(LURESS,1811) TALFAS
         IF(KOPTIS.EQ.0) WRITE(LURESS,1812)
         IF(KOPTIS.EQ.1) WRITE(LURESS,1813)
         IF(KOPTIS.EQ.2) WRITE(LURESS,1814)
         IF(KOPTIS.EQ.3) WRITE(LURESS,1815)
      ENDIF
 1811 FORMAT(
     .10X,'TIME MARCHING SCHEME              : HUGHES-V_FORM',/,
     .10X,'INITIAL ALPHA PARAMETER           =',3X,F10.5,/)
 1812 FORMAT(10X,'TIME INCREMENT AND ALPHA PARAMETER CONSTANT',/)
 1813 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND CONSTANT',/,
     .10X,'THETA PARAMETER. ',/)
 1814 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND THETA   ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
 1815 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE AND THETA ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
C
      IF(KINTES.EQ.4) THEN
         WRITE(LURESS,2811) TALFAS
         IF(KOPTIS.EQ.0) WRITE(LURESS,2812)
         IF(KOPTIS.EQ.1) WRITE(LURESS,2813)
         IF(KOPTIS.EQ.2) WRITE(LURESS,2814)
         IF(KOPTIS.EQ.3) WRITE(LURESS,2815)
      ENDIF
 2811 FORMAT(
     .10X,'TIME MARCHING SCHEME              : HUGHES-D_FORM',/,
     .10X,'INITIAL ALPHA PARAMETER           =',3X,F10.5,/)
 2812 FORMAT(10X,'TIME INCREMENT AND ALPHA PARAMETER CONSTANT',/)
 2813 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND CONSTANT',/,
     .10X,'THETA PARAMETER. ',/)
 2814 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LOG. SCALE AND THETA   ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
 2815 FORMAT(
     .10X,'TIME INCREMENT CONSTANT IN LINEAR SCALE AND THETA ',/,
     .10X,'THETA PARAMETER CALCULATED ACCORDING TO SANDHU . ',/)
C
C***TYPE OF OVERALL ALGORITHM
C
      WRITE(LURESS,901) WALGOS(NALGOS)
  901 FORMAT(10X,'TYPE OF ALGORITHM                 :',A)
C
C***LINE SEARCH
C
      WRITE(LURESS,920) WACTIS(LINESS+1)
  920 FORMAT(10X,'LINE SEARCH                       :',A)
C
C***ARC-LENGTH
C
      WRITE(LURESS,930) WARCLS(KARCLS+1)
  930 FORMAT(10X,'ARC-LENGHT                        :',A)
C
C***ACCELERATION METHOD
C
      WRITE(LURESS,940) WACCES(LACCES+1)
  940 FORMAT(10X,'ACCELERATION METHOD               :',A,/)
C
C***CONVERGENCE CRITERIA
C
      WRITE(LURESS,951) WCONVS(KCONVS),TOLERS,MITERS
C
  951 FORMAT(10X,'CONVERGENCE CRITERIA              : ',A,/,
     .       10X,'  WITH A TOLLERANCE               = ',1X,E12.6,/,
     .       10X,'  MAX. NO. ITERATIONS             = ',8X,I5,/)
C
C***AUTOMATIC LOAD INCREMENT
C
      IF(LAUTOS.EQ.0) WRITE(LURESS,960)
      IF(LAUTOS.EQ.1) WRITE(LURESS,961) INT(DITERS)
      IF(LAUTOS.EQ.2) WRITE(LURESS,962) DITERS
      IF(LAUTOS.EQ.3) WRITE(LURESS,963) DITERS
  960 FORMAT(10X,'AUTOMATIC LOAD/DISPL. INCREM.     : NOT ACTIVATED')
  961 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON NO. 
     .ITERATIONS',/,
     .10X,'          DESIRED NO. ITERATIONS  = ',8X,I5)
  962 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON STIFFNESS 
     .CHANGE',/,
     .10X,'                                   REFERED TO THE 
     .INITIAL ONE',/,
     .10X,'    DESIRED STIFFNESS CHANGE      = ',1X,E12.6)
  963 FORMAT(
     .10X,'AUTOMATIC LOAD/DISPL. INCREM.     : BASED ON STIFFNESS
     .CHANGE',/,
     .10X,'                                   REFERED TO THE 
     .PREVIOUS ONE',/,
     .10X,'    DESIRED STIFFNESS CHANGE      = ',1X,E12.6)
C
C***AUTOMATIC END OF ANALYSIS
C
      IF(STIFIS.EQ.0.) WRITE(LURESS,970)
      IF(STIFIS.NE.0.) WRITE(LURESS,971) STIFIS
  970 FORMAT(10X,'AUTOMATIC END OF ANALYSIS         : NOT ACTIVATED',/)
  971 FORMAT(
     .10X,'AUTOMATIC END OF ANALYSIS         : THE ANALYSIS IS 
     .STOPPED IF  ',/,
     .10X,'                                   THE STIFFNESS 
     .PARAMETER IS  ',/,
     .10X,'                                   LOWER THAN A 
     .SPECIFIED VALUE',/,
     .10X,'FINAL STIFFNESS PARAMETER  =',1X,E12.6,/)
C
C***FOR COUPLED PROLEM: PORE PRESSURE SMOOTHING & LUMPING OPTIONS
C
      IF(KPORES.EQ.2) THEN
         ISMUSS=IABS(KSMUSS)
         WRITE(LURESS,980) WSMUSS(ISMUSS+1)
         IF(WLUMPS.EQ.1) WRITE(LURESS,990)
         IF(WLUMPS.NE.1) WRITE(LURESS,991) WLUMPS
      ENDIF
  980 FORMAT(10X,'PORE PRESSURE SMOOTHING OPTION    : ',A)
  990 FORMAT(10X,'PORE PRESSURE LUMPING OPTION      : NOT ACTIVATED',/)
  991 FORMAT(10X,'PORE PRESSURE LUMPING MULTIPLIER  =',1X,E12.6,/)
      RETURN
      END
