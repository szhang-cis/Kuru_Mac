      SUBROUTINE INTLODS(ELDATS,ELPRES,ELVARS,ELMATS,HTLODS,IFFIXS,
     .                   PRESCS,LNODSS,MATNOS,PROELS,PROPSS,RLOADS,
     .                   RLOAHS,ADVELS,TEMPIS,COORDS,FPCHAS,DISPLS,
     .                   WORK1S)
C***********************************************************************
C
C**** THIS SUBROUTINE SETS UP THE TYPE OF ALGORITHM AND REFERENCE LOAD
C     TO BE USED IN THE CURRENT TIME INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
      INCLUDE 'nued_om.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inpo_oms.f'
C
      COMMON/LDFILES/ITAPES
C
      COMMON/CONVE3S/ICONV2S
C
      DIMENSION MATNOS(NELEMS),          LNODSS(NNODES,NELEMS),
     .          PROELS(NPRELS,NGRUPS),   PROPSS(NPROPS,NMATSS),
     .          ELDATS(NDATAS),          ELPRES(NPREVS),
     .          ELVARS(NSTATS),          ELMATS(NMATXS),
     .          WORK1S(*),               RLOADS(*),
     .          HTLODS(NHLODS,NSUBFS,*), IFFIXS(NTOTVS,*)
      DIMENSION PRESCS(NTOTVS,2),        RLOAHS(NTOTVS,NFUNCS)
      DIMENSION ADVELS(NTOTVS*NDIMES),   TEMPIS(NPOINS,2),
     .          COORDS(NDIMES,NPOINS),   FPCHAS(NFPCH,NPOINS),
     .          DISPLS(NTOTVMS)
C
      PARAMETER (MCOMMS=7)
      CHARACTER*5 COMMDS(MCOMMS)
      DATA COMMDS/'HEAT','ADVEC','BOUND','STRAT','FUNCT','PROPE',
     .            'END_I'/
C
      NEWLOS=-1
      NEWBOS=-1
      NEWSTS=-1
      NEWFUS=-1
      NEWADS=-1
      IF(IRESTS.EQ.1) THEN
       NEWLOS=0
       NEWBOS=0
      ENDIF
C
C**** LOOK FOR INTERVAL CARD KEY WORD WHICH DEFINES IF NEW 
C     HEAT OR/AND NEW INTERVAL DATA HAS TO BE READ.
C
  100 NPRINS=0
      ITAPES=LUDATS
      CALL LISTENS('INTLODS',NPRINS,ITAPES)
C
      DO ICOMMS=1,MCOMMS
       IF(WORDSS(1).EQ.COMMDS(ICOMMS)) GO TO 20
      END DO
      GO TO 1000
C
   20 GO TO (1,2,3,4,5,6,7),ICOMMS
C
C**** IF REQUIRED SET UP NEW REFERENCE HEAT
C
    1 NEWLOS=0
      IF(WORDSS(2).EQ.'NEW_H') NEWLOS=1
      IF(NEWLOS.EQ.1) THEN
       IF(PARAMS(1).NE.0.) ITAPES=INT(PARAMS(1))
       CALL LOADPSS(ELDATS,ELPRES,ELVARS,ELMATS,
     .              LNODSS,MATNOS,PROELS,PROPSS,RLOADS,RLOAHS,TEMPIS,
     .              WORK1S(ILOSUS(1)),WORK1S(ILOSUS(15)),ADVELS,COORDS,
     .              FPCHAS,DISPLS)
C
       NPRINS=0
       IF(ITAPES.NE.LUDATS) THEN
        ITAPES=LUDATS
        CALL LISTENS('INTLODS',NPRINS,ITAPES)
       ENDIF
       IF(WORDSS(1).EQ.'END_H') GO TO 100
       WRITE(LURESS,909)
       CALL RUNENDS('ERROR: RUN STOPPED FOR HEAT INPUT')
      ENDIF                  ! newlos.eq.1
C
      GOTO 100
C
C**** IF REQUIRED SET UP ADVECTIVE VELOCITY
C
    2 NEWADS=0
      iconv2s=int(params(2))
      IF(WORDSS(2).EQ.'NEW_A') NEWADS=1
      IF(NEWADS.EQ.1) THEN
       IF(PARAMS(1).NE.0.) ITAPES=INT(PARAMS(1))
       CALL ADVECTS(ADVELS)
C
       NPRINS=0
       ITAPES=LUDATS
       CALL LISTENS('INTLODS',NPRINS,ITAPES)
       IF(WORDSS(1).EQ.'END_A') GO TO 100
       WRITE(LURESS,911)
       CALL RUNENDS('RUN STOPPED FOR INPUT ERROR        ')
      ENDIF                    ! newads.eq.1
C
      GOTO 100
C
C**** IF REQUIRED SET UP NEW BOUNDARY CONDITION
C
    3 NEWBOS=0
      IF(WORDSS(2).EQ.'NEW_B') NEWBOS=1
      IF(NEWBOS.EQ.1) THEN
       IF(PARAMS(1).NE.0.) ITAPES=INT(PARAMS(1))
       CALL FIXITYS(IFFIXS,LNODSS,PRESCS,WORK1S(ILOSUS(15)),
     .              ELDATS,MATNOS,PROELS,WORK1S(ILOSUS( 1)) )
C
       NPRINS=0
       ITAPES=LUDATS
       CALL LISTENS('INTLODS',NPRINS,ITAPES)
       IF(WORDSS(1).EQ.'END_B') GO TO 100
       WRITE(LURESS,910)
       CALL RUNENDS('RUN STOPPED FOR INPUT ERROR        ')
      ENDIF                    ! newbos.eq.1
C
      GOTO 100
C
C**** IF NECESSARY SET UP NEW SOLUTION STRATEGY
C
    4 NEWSTS=0
      IF(WORDSS(2).EQ.'NEW_S') NEWSTS=1
      IF(NEWSTS.EQ.1) CALL STRATES
C
      GO TO 100
C
C**** IF REQUIRED SET UP NEW FUNCTION
C
    5 NEWFUS=0
      IF(WORDSS(2).EQ.'NEW_F') NEWFUS=1
      IF(NEWFUS.EQ.1) CALL INTFUNS(HTLODS)
C
      GO TO 100
C
C**** IF REQUIRED SET UP NEW MAT. PROPERTIES (at INTERVAL_DATA level)
C
    6 NEWPRS=0
      IF(WORDSS(2).EQ.'NEW_P') NEWPRS=1
      IF(NEWPRS.EQ.1) THEN
       ITAPES=LUDATS
       IF(PARAMS(1).NE.0.0) ITAPES=INT(PARAMS(1))
       CALL INPPROS(ITAPES,PROPSS,    1)
      ENDIF
C
      GO TO 100
C
C**** CHECK THE CORRECTNESS OF THE INPUT
C
    7 CONTINUE
C
      IF(IRESTS.EQ.0) THEN
       IF(NEWFUS.EQ.-1.OR.NEWLOS.EQ.-1.OR.NEWBOS.EQ.-1.OR.
     .    NEWSTS.EQ.-1)THEN
        WRITE(LURESS,915)
        GO TO 1001
       ENDIF
C
       IF(ITIMES.EQ.1.AND.(NEWFUS.EQ.0.OR.NEWLOS.EQ.0.OR.
     .    NEWBOS.EQ.0.OR.NEWSTS.EQ.0)) THEN
        WRITE(LURESS,920)
        GO TO 1001
       ENDIF
C
       IF(ICONVS.EQ.1.AND.NEWADS.EQ.-1) THEN
        WRITE(LURESS,930)
        GO TO 1001
       ENDIF
      ENDIF            ! irests.eq.0
C
      IF(IRESTS.EQ.1.AND.ISKIPS.EQ.1.AND.NEWSTS.EQ.-1)
     . WRITE(LURESS,925)
C
      RETURN
C
 1000 CALL RUNENDS('INTLOD:ERROR IN INTERVAL DATA BLOCK')
 1001 CALL RUNENDS('INTLOD:STOP FOR LACK OF INFORMATION')
C
  909 FORMAT(
     .'THE LIST OF HEATS DOES NOT END WITH AN        ',/,
     .'"END_HEAT_DATA" COMMAND CARD. VERIFY THE INPUT DATA.   .',/)
  910 FORMAT(
     .'THE LIST OF BOUNDARY CONDITIONS DOES NOT END WITH AN        ',/,
     .'"END_BOUNDARY_DATA" COMMAND CARD. VERIFY THE INPUT DATA.   .',/)
  911 FORMAT(
     .'THE LIST OF ADVECTIVE VELOCITY DOES NOT END WITH AN        ',/,
     .'"END_ADVECTIVE_VELOCITY_DATA" COMMAND CARD. VERIFY THE INPUT',/,
     .' DATA.   .',/)
  915 FORMAT(
     .'EACH INTERVAL DATA BLOCK MUST HAVE HEAT, BOUNDARY &
     . STRATEGY ',/,
     .'COMMAND CARDS EVEN IF YOU WANT TO KEEP THE SAME DATA FOR ANY',/,
     .'OF THEM. IN THIS CASE JUST SPECIFY THE QUALIFIER AS "OLD".', /)
  920 FORMAT(
     .' THIS IS SUPPOSED TO BE A NEW RUN THEREFORE IT IS EXPECTED',   /,
     .' TO CONTAIN DATA FOR THE INTERVAL TIME PARAMETERS, THE TYPE',  /,
     .' OF HEAT AND/OR THE FIXITY CONDTIONS.',/)
  925 FORMAT(
     .'           * * * W A R N I N G * * *                        ',//,
     .'THIS IS SUPPOSED TO BE A RESTART TO COMPLETE THE INTERVAL   ',/,
     . I5,'FROM THE TIME ',E12.6,'. IN THIS CASE YOU MOST PROBABLY ',/,
     .'WANTED TO CHANGE THE SOLUTION STRATEGY BUT NO INFORMATION   ',/,
     .'ABOUT IT HAS BEEN GIVEN. CHECK YOUR DATA FILE IN THE RESTART',/,
     .'INTERVAL DATA .',/)
  930 FORMAT(
     .'ADVECTIVE VELOCITY MUST BE INPUT FOR ADVECTIVE PROBLEMS',/)
      END
