      SUBROUTINE SET101T(DVOLUT,ELCODT,GPCODT,LNODST,PROPST,SHAPET,
     .                   THICKT,DERIVT,POSGPT,WEIGPT,XJACMT)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP SOME NEEDED CONSTANT MATRICES FOR
C     FUTURE USE ( ELEMENT NO. 101 )
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'auxl_omt.f'
C
      COMMON/JACOBSTA/IERORT,KERORT
C
      DIMENSION DERIVT(NDIMLT,NNODLT,*), DVOLUT(*),
     .          ELCODT(NDIMET,NNODLT),
     .          GPCODT(NDIMET,*),        LNODST(*), PROPST(*),
     .          SHAPET(NNODLT,*)
      DIMENSION POSGPT(NDIMLT,*),        WEIGPT(*),
     .          XJACMT(NDIMET,NDIMLT)
C
      TWOPIT=6.283185307179586
C
C**** INITIALIZATION
C
      DO IDIMET=1,NDIMET
       DO IGAUST=1,NGAUST
        GPCODT(IDIMET,IGAUST)=0.0
       ENDDO
      ENDDO
C
C**** EVALUATE QUANTITIES ASSOCIATED WITH THE GAUSSIAN POINTS
C
      if(ndimet.eq.1) then
       posgpt(1,1)=1.0
       weigpt(1)=1.0
       shapet(1,1)=1.0
       derivt(1,1,1)=1.0
       dvolut(1)=thickt
       return
      endif
C
C**** IDENTIFY SAMPLING POINTS AND WEIGHTS
C
      CALL RULEPW(NDIMLT,NGAULT,NRULET,POSGPT,WEIGPT)
C
C**** LOOP ON INTEGRATION POINTS
C
      DO IGAUST=1,NGAULT
C
C**** COMPUTE SHAPE FUNCTIONS AND DERIVATIVES
C
       EXISPT=POSGPT(1,IGAUST)
       ETASPT=0.0
       IF(NDIMLT.EQ.2) ETASPT=POSGPT(2,IGAUST)
       CALL SHAFUN(DERIVT(1,1,IGAUST),EXISPT,ETASPT,EZETAT,NDIMLT,
     .             NNODLT,     1,     0,SHAPET(1,IGAUST))
C
C**** COMPUTE JACOBIAN ( NOTE CARTESIAN DERIVATIVES ARE NOT COMPUTED )
C
       CALL JACBOUT(DERIVT(1,1,IGAUST),DETJMT,ELCODT,GPCODT(1,IGAUST),
     .              IELEMT,NDIMET,NDIMLT,NNODLT,SHAPET(1,IGAUST),
     .              XJACMT,LUREST,LUPRIT)
       IF(IERORT.NE.0) RETURN
C
C**** INTEGRATION WEIGHTS
C
                         DVOLUT(IGAUST)=WEIGPT(IGAUST)*DETJMT
       IF(NTYPET.EQ.3)   DVOLUT(IGAUST)=DVOLUT(IGAUST)*TWOPIT*
     .                                  GPCODT(1,IGAUST)
       IF(NTYPET.EQ.5)   DVOLUT(IGAUST)=DVOLUT(IGAUST)*THICKT ! 1-D
C
      END DO
C
C**** CHECKS GAUSSIAN VOLUME FOR AXISYMMETRIC PROBLEMS FOR OUTPUT OPER.
C
      IF(NTYPET.EQ.3) THEN
       CALL GAUCEK(DVOLUT,   101,     1,NGAULT,NNODLT,ICEKET)
       IF(ICEKET.NE.0) CALL RUNENDT('ERROR:WRONG NGAUS IN gaucek.f-101')
      ENDIF
C
      RETURN
      END
