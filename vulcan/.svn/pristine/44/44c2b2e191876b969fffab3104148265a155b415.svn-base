      SUBROUTINE LOAGRA(ELDAT,ELPRE,ELVAR,ELMAT,LNODS,MATNO,PROEL,
     .                  PROPS,RLOAD,RLOAH,COORD,LACTI,WORK1)
C***********************************************************************
C
C**** THIS ROUTINE EVALUATES THE EQUIVALENT NODAL FORCES DUE TO 
C     THE WEIGHT 
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      COMMON/LDFILE/ITAPE
C
      DIMENSION MATNO(NELEM),       LNODS(NNODE,NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX),
     .          WORK1(*)
      DIMENSION RLOAD(*),           RLOAH(NTOTV,NFUNC)
      DIMENSION COORD(NDIME,NPOIN), LACTI(NELEM)
C
C**** IDENTIFY GRAVITY DIRECTION 
C
      IF(KPROB.EQ.2.AND.NDIME.EQ.2) THEN  ! Plates gravity assumed
       WRITE(LURES,920)                   ! vertical
      ELSE                                ! read gravity vector
C
C**** READ BY LISTEN
C
       NPRIN=1
       CALL LISTEN('LOAGRA',NPRIN,ITAPE)
       GRAVY=PARAM(1)
       IFUNC=INT(PARAM(2))
       IF(IFUNC.GT.NFUNC)
     .  CALL RUNEND('LOAGRA: ERROR IN FUNCTION NUMBER')
       DO IDIME=1,NDIME
        GVECT(IDIME)=PARAM(2+IDIME)
       ENDDO
C
       GMODU=0.00D+00
       DO IDIME=1,NDIME
        GMODU=GMODU+GVECT(IDIME)**2
       END DO
       GMODU=DSQRT(GMODU)
       DO IDIME=1,NDIME
        GVECT(IDIME)=GVECT(IDIME)/GMODU
       END DO
       WRITE(LURES,910) GRAVY,IFUNC,(GVECT(IKOUN), IKOUN=1,NDIME)
      END IF
C
C**** LOOP ON ELEMENTS
C
      DO 100 IELEM=1,NELEM
C
      IF(NACTI.EQ.1) THEN                     ! see comment on loadps.f
       NPRIN=1
       CALL LISTEN('LOAGRA',NPRIN,ITAPE)
       IELEMX=INT(PARAM(1))
       IF(IELEM.NE.IELEMX)
     .  CALL RUNEND('LOAGRA: ERROR IN ELEMENT NUMBERING')
       IF(IELEMX.GT.NELEM)
     .  CALL RUNEND('LOAGRA: ERROR IN ELEMENT NUMBER')
       IFUNC=INT(PARAM(2))
       IF(IFUNC.GT.NFUNC)
     .  CALL RUNEND('LOAGRA: ERROR IN FUNCTION NUMBER')
       IF(LACTI(IELEM).EQ.0) GO TO 100        ! skip non active elements
      ENDIF
C
      LGRUP=MATNO(IELEM)
      LMATS=INT(PROEL(1,LGRUP))
      NNODL=INT(PROEL(2,LGRUP))
C
C**** READ ELDAT FROM DATA-BASE
C
      IF(NMEMO1M.EQ.0.OR.NMEMO2M.EQ.0)
     . CALL DATBAS(ELDAT,    1,    2)
C
C**** GATHER NODAL COORDINATES
C
      IF(NMEMO1M.EQ.1) THEN    ! coordinates in a global array
       CALL GATHER(COORD,NDIME,NPOIN,WORK1(ILOSU(16)),NDIME,
     .             NNODL,LNODS(1,IELEM))
      ENDIF
C
C**** CALL ELEMENT PROCESSOR TO PERFORM THE REQUIRED OPERATIONS
C
      CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .            WORK1,WORK1,WORK1,WORK1,WORK1,
     .            ELDAT,ELPRE,ELVAR,ELMAT,WORK1,    7)
C
C**** SCALAR SCATTER OPERATION ( RLOAD )
C
      CALL SCATER(WORK1,NDOFN,NNODL,RLOAD,NDOFC,NPOIN,
     .            LNODS(1,IELEM))
C
C**** SCALAR SCATTER OPERATION ( RLOAH )
C
      CALL SCATER(WORK1,NDOFN,NNODL,RLOAH(1,IFUNC),NDOFC,NPOIN,
     .            LNODS(1,IELEM))
C
  100 CONTINUE
C
      RETURN
  910 FORMAT(/,5X,'GRAVITY=',F10.3,5X,'FUNCTION=',I5,5X,
     .       'GRAVITY VECTOR=',3F10.3,/)
  920 FORMAT(5X,'GRAVITY ASSUMED VERTICAL (+Z)')
      END
