      SUBROUTINE SMOG30(DVOLU,EMASS,SHAPE,STRSG,
     .                  STREB,STREA)
C***********************************************************************
C
C**** THIS ROUTINE COMPUTES THE ELEMENTAL CONTRIBUTION TO NODAL STRESSES
C
C***********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
C
      COMMON/SMOGAU/FACTA
      COMMON/HOMOGENIZATION/HVOLU,HSTRE(6)
C
      DIMENSION DVOLU(*),           SHAPE(NNODS,*),
     .          STRSG(NSTR1,*),     EMASS(NNODS,*)
      DIMENSION STREB(NSTR1,*),     STREA(NNODS,*)
      DIMENSION STSMO(6)
C
C**** CALCULATE SMOOTHED STRESSES FOR THE SOLIDIFICATION PROBLEM
C
      GO TO(1,2,3) NDIME
C
    1 CONTINUE
C
C**** 1D CASE (not implemented yet)
C
      CALL RUNEND('ERROR IN SMOG30; NDIME = 1         ')
      GO TO 4
C
    2 CONTINUE
C
C**** 2D CASE FOR 3-NODED, 4-NODED & 8-NODED ELEMENTS
C
      ICHEQ=0
      IF(NNODL.EQ.3.AND.NGAUL.EQ.1) THEN
       ICHEQ=1
       VOLIN=1.0/DVOLU(1)
      ENDIF
      IF(NNODL.EQ.4.AND.NGAUL.EQ.4) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3)+DVOLU(4))
      ENDIF
      IF(NNODL.EQ.6.AND.NGAUL.EQ.1) THEN
       ICHEQ=1
       VOLIN=1.0/DVOLU(1)
      ENDIF
      IF(NNODL.EQ.6.AND.NGAUL.EQ.3) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3))
      ENDIF
      IF(NNODL.EQ.8.AND.NGAUL.EQ.4) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3)+DVOLU(4))
      ENDIF
      IF(NNODL.EQ.8.AND.NGAUL.EQ.9) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3)+DVOLU(4)+
     .            DVOLU(5)+DVOLU(6)+DVOLU(7)+DVOLU(8)+DVOLU(9))
      ENDIF
      IF(NNODL.EQ.9.AND.NGAUL.EQ.9) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3)+DVOLU(4)+
     .            DVOLU(5)+DVOLU(6)+DVOLU(7)+DVOLU(8)+DVOLU(9))
      ENDIF
      IF(ICHEQ.EQ.0)
     . CALL RUNEND('ERROR IN SMOG30; NDIME = 2         ')
      GO TO 4
C
    3 CONTINUE
C
C**** 3D CASE FOR 4-NODED & 8-NODED ELEMENTS
C
      ICHEQ=0
      IF(NNODL.EQ.4.AND.NGAUL.EQ.1) THEN
       ICHEQ=1
       VOLIN=1.0/DVOLU(1)
      ENDIF
      IF(NNODL.EQ.8.AND.NGAUL.EQ.8) THEN
       ICHEQ=1
       VOLIN=1.0/(DVOLU(1)+DVOLU(2)+DVOLU(3)+DVOLU(4)+
     .            DVOLU(5)+DVOLU(6)+DVOLU(7)+DVOLU(8))
      ENDIF
      IF(ICHEQ.EQ.0)
     . CALL RUNEND('ERROR IN SMOG30; NDIME = 3         ')
C
    4 CONTINUE
C
      DO ISTR1=1,NSTR1
       STSMO(ISTR1)=0.0D0
       DO IGAUS=1,NGAUL
        STSMO(ISTR1)=STSMO(ISTR1)+STRSG(ISTR1,IGAUS)*DVOLU(IGAUS)
       ENDDO
       HSTRE(ISTR1)=HSTRE(ISTR1)+STSMO(ISTR1) ! to compute homog. stress
       STSMO(ISTR1)=STSMO(ISTR1)*VOLIN
      ENDDO
      HVOLU=HVOLU+1.0D0/VOLIN
C
C**** COMPUTE TOTAL VOLUME IF NECESSARY
C
      IF(IABS(KSGAU).EQ.2) THEN
       FACTA=0.D+00
       DO IGAUS=1,NGAUL
        FACTA=FACTA+DVOLU(IGAUS)
       ENDDO
      ENDIF
C
C**** FOR 'ONE-POINT' INTEGRATION RULES
C
      IF(NGAUL.EQ.1) THEN
C$DIR SCALAR
       DO ISTRE=1,NSTR1
        DO INODE=1,NNODS
         STREB(ISTRE,INODE)=STRSG(ISTRE,1)
        ENDDO
       ENDDO
       RETURN
      ENDIF
C
C**** INTEGRAL PERFORMING
C
C$DIR SCALAR
      DO ISTRE=1,NSTR1
       DO INODE=1,NNODS
        DO IGAUS=1,NGAUL
         STREA(INODE,ISTRE)=STREA(INODE,ISTRE)+SHAPE(INODE,IGAUS)*
     .                      STSMO(ISTRE)*DVOLU(IGAUS)
          ENDDO
        ENDDO
      ENDDO
C
C**** PERFORMS MATRIX PRODUCT
C
C$DIR SCALAR
      DO ISTRE=1,NSTR1
       DO INODE=1,NNODS
        DO JNODE=1,NNODS
         STREB(ISTRE,INODE)=STREB(ISTRE,INODE)+
     .                      STREA(JNODE,ISTRE)*EMASS(INODE,JNODE)
        ENDDO
       ENDDO
      ENDDO
C
      RETURN
      END
