      SUBROUTINE SETM05S(CARTDS,DVOLUS,ELCODS,EMASSS,GPCODS,LNODSS,
     .                   PROPSS,SHAPES,THICKS,
     .                   DERIVS,POSGPS,WEIGPS,XJACMS)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP SOME NEEDED CONSTANT MATRICES FOR
C     FUTURE USE ( ELEMENT NO. 5 )
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
C
      COMMON/JACOBSSA/IERORS,KERORS
C
      DIMENSION CARTDS(NDIMES,NNODSS,*), DVOLUS(*),
     .          ELCODS(NDIMES,*),        GPCODS(NDIMES,*),
     .          LNODSS(*),               PROPSS(*),
     .          SHAPES(NNODSS,*),        EMASSS(*)
      DIMENSION DERIVS(NDIMES,NNODSS,*), POSGPS(NDIMES,*),
     .          WEIGPS(*),               XJACMS(NDIMES,*)
C      
      TWOPIS=6.283185307179586
C
C**** INITIALIZATION
C
      DO IDIMES=1,NDIMES
       DO IGAUSS=1,NGAUSS
        GPCODS(IDIMES,IGAUSS)=0.0
       ENDDO
      ENDDO
C
C**** IDENTIFY SAMPLING POINTS AND WEIGHTS
C
      CALL RULEPW(NDIMES,NGAULS,NRULES,POSGPS,WEIGPS)
C
C**** LOOP ON INTEGRATION POINTS
C
      DO 100 IGAUSS=1,NGAULS
C
C**** COMPUTE SHAPE FUNCTIONS AND DERIVATIVES
C
      EXISPS=POSGPS(1,IGAUSS)
      ETASPS=0.0D0
      IF(NDIMES.GE.2) ETASPS=POSGPS(2,IGAUSS)
      EZETAS=0.0
      IF(NDIMES.EQ.3) EZETAS=POSGPS(3,IGAUSS)
      CALL SHAFUN(DERIVS(1,1,IGAUSS),EXISPS,ETASPS,EZETAS,NDIMES,NNODSS,
     .            NQUTRS,     0,SHAPES(1,IGAUSS))
C
C**** CARTESIAN DERIVATIVES OF THE SHAPE FUNCTIONS
C
      CALL JACOBSS(CARTDS(1,1,IGAUSS), DERIVS(1,1,IGAUSS), DETJMS,
     .             ELCODS,             GPCODS(1,IGAUSS),   IELEMS,
     .             NDIMES,NNODSS,      SHAPES(1,IGAUSS),   XJACMS,
     .             LURESS,LUPRIS)
      IF(IERORS.NE.0) GO TO 101
C
C**** MAKE A CONTROL ON THE CORRECTNESS OF THE SHAPE FUNCTION AND THEIR
C     DERIV.
C
      ICHEKS=0
      IF(ICHEKS.EQ.1)CALL TESTM2(CARTDS(1,1,IGAUSS),DERIVS(1,1,IGAUSS),
     .                           SHAPES(1,  IGAUSS),IGAUSS,NDIMES,
     .                           NNODSS)
C
C**** INTEGRATION WEIGHTS
C
                         DVOLUS(IGAUSS)=WEIGPS(IGAUSS)*DETJMS
      IF(NTYPES.EQ.3)    DVOLUS(IGAUSS)=DVOLUS(IGAUSS)*TWOPIS*
     .                                  GPCODS(1,IGAUSS)
                         DVOLUS(IGAUSS)=DVOLUS(IGAUSS)*THICKS
C
  100 CONTINUE
C
C**** CHECKS GAUSSIAN VOLUME FOR AXISYMMETRIC PROBLEMS FOR OUTPUT OPER.
C
      IF(NTYPES.EQ.3) THEN
       CALL GAUCEK(DVOLUS,     5,     1,NGAULS,NNODLS,ICEKES)
       IF(ICEKES.NE.0) CALL RUNENDS('ERROR: WRONG NGAUS IN gaucek.f-5s')
      ENDIF
C
C**** COMPUTE MASS MATRIX TO PERFORM SMOOTHING OF GAUSSIAN TENSORS
C
      IF(KSGAUS.NE.0) THEN
c      call runends('no smoothing - setm05s')
       CALL SMOMTXS(ELCODS,DVOLUS,SHAPES,EMASSS)
      ENDIF
C
  101 CONTINUE
      RETURN
      END
