      SUBROUTINE JACBOU(DERIV,DETJM,ELCOD,GPCOD,IELEM,NDIME,NDIML,
     .                  NNODL,SHAPE,XJACM,LURES,LUPRI)
C***********************************************************************
C
C**** THIS ROUTINE EVALUATES THE JACOBIAN MATRIX FOR BOUNDARY ELEMENTS
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMMON/JACOBSA/IEROR,KEROR
C
      DIMENSION DERIV(NDIML,*), ELCOD(NDIME,*),
     .          GPCOD(*),       SHAPE(*),      XJACM(NDIME,NDIML)
      DIMENSION XJACI(3,3)
C
C**** CHECK THE RIGHT USE OF THIS ROUTINE
C
      IF(NDIME.LE.NDIML)
     .    CALL RUNEND('JACBOU: NDIME<=NDIML IN BOUNDARY ? ')
C
C**** CALCULATE COORDINATES OF SAMPLING POINT
C
      DO IDIME=1,NDIME
        GPCOD(IDIME)=0.0
        DO INODL=1,NNODL
          GPCOD(IDIME)=GPCOD(IDIME)+ELCOD(IDIME,INODL)*SHAPE(INODL)
        END DO
      END DO
C
C**** CREATE BOUNDARY JACOBIAN MATRIX
C
      CALL PROMAB(XJACM,ELCOD,DERIV,NDIME,NDIML,NNODL)
C
C**** CALCULATE THE "DETERMINANT" OF BOUNDARY JACOBIAN MATRIX
C
      CALL INTCUR(XJACM,DETJM,NDIME,NDIML)
C
C**** CHECK IF ITS POSITIVENESS
C
      IF(DETJM.LE.0.0) THEN
        IEROR=IEROR+1
        KEROR=KEROR+1
        WRITE(LURES,600) IELEM,
     .      ((ELCOD(IDIME,INODL),IDIME=1,NDIME),INODL=1,NNODL)
        WRITE(LUPRI,601) IELEM
        RETURN
      ENDIF
C
      RETURN
  600 FORMAT(/,'ZERO OR NEGATIVE LENGHT/AREA IN BOUNDARY ELEMENT
     .          NUMBER ',I5,/,10(3(F15.5,3X),/))
  601 FORMAT(/,'ZERO OR NEGATIVE LENGHT/AREA IN BOUNDARY ELEMENT
     .          NUMBER ',I5)
      END
