      SUBROUTINE RULEPW(NDIME,NGAUS,NRULE,POSGP,WEIGP)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP THE INTEGRATION CONSTANTS
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMMON/NEGATITE/NEGATT
C
      DIMENSION POSGL(3), POSGP(NDIME,*), WEIGL(3), WEIGP(*)
C
C**** INTEGRATION RULE FOR NEGATIVE TEMPERATURE CONTROL
C
      NRUAU=NRULE
      IF(NRULE.EQ.11) THEN
       IF(NEGATT.EQ.1) NRULE=1
       IF(NEGATT.EQ.2) NRULE=5
      ENDIF
      IF(NRULE.EQ.13) THEN
       IF(NEGATT.EQ.1) NRULE=3
       IF(NEGATT.EQ.2) NRULE=5
      ENDIF
C
C**** PRODUCT RULES (GAUSS & LOBATTO)
C
      IF(NRULE.LE.2) THEN
       IF(NDIME.EQ.1) THEN
        NLOCS=NGAUS
       ELSE IF(NDIME.EQ.2) THEN
        NLOCS=NINT(SQRT(FLOAT(NGAUS)))
       ELSE
        NLOCS=NINT(FLOAT(NGAUS)**(1./3.))
       ENDIF
       IF(NRULE.EQ.1) CALL RULGAU(NLOCS,POSGL,WEIGL)
       IF(NRULE.EQ.2) CALL RULLOB(NLOCS,POSGL,WEIGL)
       IF(NDIME.EQ.1) THEN
        IGAUS=0
        DO 5 ILOCS=1,NLOCS
        IGAUS=IGAUS+1
        WEIGP(IGAUS)=WEIGL(ILOCS)
        POSGP(1,IGAUS)=POSGL(ILOCS)
    5   CONTINUE         
       ELSE IF(NDIME.EQ.2) THEN
        IGAUS=0
        DO 10 ILOCS=1,NLOCS
        DO 10 JLOCS=1,NLOCS
        IGAUS=IGAUS+1
        WEIGP(IGAUS)=WEIGL(ILOCS)*WEIGL(JLOCS)
        POSGP(1,IGAUS)=POSGL(ILOCS)
        POSGP(2,IGAUS)=POSGL(JLOCS)
   10   CONTINUE         
       ELSE
        IGAUS=0
        DO 20 ILOCS=1,NLOCS
        DO 20 JLOCS=1,NLOCS
        DO 20 KLOCS=1,NLOCS
        IGAUS=IGAUS+1
        WEIGP(IGAUS)=WEIGL(ILOCS)*WEIGL(JLOCS)*WEIGL(KLOCS)
        POSGP(1,IGAUS)=POSGL(ILOCS)
        POSGP(2,IGAUS)=POSGL(JLOCS)
        POSGP(3,IGAUS)=POSGL(KLOCS)
   20   CONTINUE 
       ENDIF
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** TRIANGULAR RULES (RADAU)
C
      IF(NRULE.EQ.3) THEN
       CALL RULTRI(NDIME,NGAUS,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** CURBATURE RULES (IRONS)
C
      IF(NRULE.EQ.4) THEN
       CALL RULIRO(NGAUS,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** USER'S DEFINITION
C
      IF(NRULE.EQ.5) THEN
       CALL RULIUS(NGAUS,NDIME,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** TRIANGULAR RULES (OTHER OPTION)
C
      IF(NRULE.EQ.6) THEN
       CALL RULTRI1(NDIME,NGAUS,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** TRIANGULAR RULES (OTHER OPTION)
C
      IF(NRULE.EQ.7) THEN
       CALL RULTRI2(NDIME,NGAUS,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
C**** USER'S DEFINITION (OTHER OPTION)
C
      IF(NRULE.EQ.8) THEN
       CALL RULIUS1(NGAUS,NDIME,POSGP,WEIGP)
       NRULE=NRUAU
       RETURN
      ENDIF
C
      RETURN
      END
