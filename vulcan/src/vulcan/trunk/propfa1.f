      SUBROUTINE PROPFA1(ITAPE,PROPS)
C***********************************************************************
C
C**** THIS ROUTINE READS THE FATIGUE PARAMETERS FOR MODEL=1
C     (ELEMENT NO. 30)
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'inpo_om.f'
C
      DIMENSION PROPS(*)
C
C**** ESTABLISH SOME PARAMETERS
C
      PROPS(40)=1.0            ! fatigue material
      PROPS(41)=1.0            ! fatigue model
C
C**** READ & WRITE MATERIAL PROPERTIES
C
      NPRIN=0
C
C**** LOOK FOR 'WOHLER_CURVE_PARAMETERS' CARD
C
      CALL LISTEN('PROPFA1',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'WOHLE') THEN
       WRITE(LURES,801)
       WRITE(LURES,899)
C
C**** LOOK FOR 'LIMIT NUMBER OF CYCLES' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'N_LIM') THEN
        NPOI1=42
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,802) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: LIMIT NUMBER OF CYCLES CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'A_PARAMETER' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'A_PAR') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,803) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: A_PARAMETER CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'B_PARAMETER' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'B_PAR') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,804) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: B_PARAMETER CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'C_PARAMETER' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'C_PAR') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,805) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: C_PARAMETER CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'D_PARAMETER' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'D_PAR') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,806) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: D_PARAMETER CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'MINIMUM_REVERSIBILITY_FACTOR' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'R_MIN') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,807) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: MINIMUM REVERSIB. FACT. CARD NOT FOUND')
       ENDIF
C
C**** LOOK FOR 'MAXIMUM_REVERSIBILITY_FACTOR' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'R_MAX') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,808) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: MAXIMUM REVERSIB. FACT. CARD NOT FOUND')
       ENDIF
      ELSE
       CALL RUNEND('PROPFA1: WOHLER CURVE PARAMETERS CARD NOT FOUND')
      ENDIF
C
C**** LOOK FOR 'REDUCTION_LAW_PARAMETERS' CARD
C
      CALL LISTEN('PROPFA1',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'REDUC') THEN
       WRITE(LURES,811)
       WRITE(LURES,899)
C
C**** LOOK FOR 'E_PARAMETER' CARD
C
       CALL LISTEN('PROPFA1',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'E_PAR') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI2)=PARAM(1)
        WRITE(LURES,812) PROPS(NPOI2)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPFA1: E_PARAMETER CARD NOT FOUND')
       ENDIF
      ELSE
       CALL RUNEND('PROPFA1: REDUCTION LAW PARAMETERS CARD NOT FOUND')
      ENDIF
C
C**** CONTROLS DIMENSION OF PROPS
C
      NPRFA1=50                          ! see propipn.f propipt.f, etc.
      IF(NPOI2.GT.NPRFA1) THEN
       WRITE(LURES,900) NPRFA1,NPOI2
       CALL RUNEND('PROPFA1: TOO MANY PROPERTIES TO READ')
      ENDIF
C
      RETURN
C
  801 FORMAT(/,'  WOHLER CURVE PARAMETERS',E15.6,/)
  802 FORMAT(/,'  LIMIT NUMBER OF CYCLES=',E15.6,/)
  803 FORMAT(/,'  A_PARAMETER           =',E15.6,/)
  804 FORMAT(/,'  B_PARAMETER           =',E15.6,/)
  805 FORMAT(/,'  C_PARAMETER           =',E15.6,/)
  806 FORMAT(/,'  D_PARAMETER           =',E15.6,/)
  807 FORMAT(/,'  MINIMUM REVERSIBILITY =',E15.6,/)
  808 FORMAT(/,'  MAXIMUM REVERSIBILITY =',E15.6,/)
C
  811 FORMAT(/,'  REDUCTION LAW PARAMETER',E15.6,/)
  812 FORMAT(/,'  E_PARAMETER           =',E15.6,/)
C
  899 FORMAT(/)
  900 FORMAT(//,'TOO MANY FATIGUE PARAMETERS TO READ:',/,
     .      20X,'NPROP =',I5,5X,'NUMBE =',I5,/)
      END
