      SUBROUTINE SKYTRI(GSTDI,GSTLO,GSTUP,KSYMM,LPONT,KPORE,NEQNS,IUNIT,
     .                  NPOIC,IAUGM)
C***********************************************************************
C
C**** THIS ROUTINE PERFORMS THE TRIANGULAR DECOMPOSITION 
C     OF A MATRIX STORED IN PROFILE FORM
C
C.... INPUT PARAMETERS
C
C       GSTLO(LPONT(NEQNS)) - LOWER TRIANGULAR PART OF MATRIX
C       GSTUP(LPONT(NEQNS)) - UPPER PART OF TRIANGULAR MATRIX
C       GSTDI(NEQNS)        - DIAGONALS OF TRIANGULAR MATRIX
C       LPONT(NEQNS)        - POINTERS TO BOTTOM OF COLUMS OF 
C                             GSTLO AND GSTUP ARRAYS
C       NEQNS               - NUMBER OF EQUATIONS TO BE SOLVED
C       KSYMM               - =0 EQUATIONS ARE UNSYMMETRIC
C                             =1 EQUATIONS ARE SYMMETRIC AND CALLING
C                                 ADDRESS OF GSTLO MAY BE SAME 
C                                 AS THAT FOR GSTUP (I.E., GSTUP 
C                                 AND GSTLO SHARE SAME MEMORY)
C       KPORE               - =2 COUPLED PROBLEM ( NON-POSITIVE MATRIX )
C
C.... OUTPUT PARAMETERS
C
C       GSTLO(LPONT(NEQNS)) - LOWER TRIANGULAR FACTOR OF MATRIX
C       GSTUP(LPONT(NEQNS)) - UPPER TRIANGULAR FACTOR OF MATRIX
C       GSTDI(NEQNS)        - INVERSE OF DIAGONAL MATRIX IN TRIANGULAR 
C                              FACTOR
C
C.... LOCAL  PARAMETERS
C
C       TOLLE               - TOLLERANCE USED TO CHECK FOR NULL PIVOT
C                              IT SHOULD BE SET TO APPROXIMATE HALF-WORD
C                              PRECISION 
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION GSTLO(*), GSTUP(*), GSTDI(*), LPONT(*)
C
      DATA ZEROS,UNITY/0.0D0,1.0D0/, TOLLE/0.5D-07/
C
C**** IF KSYMM=0 OR KSYMM=1 PERFORM TRIANGULAR DECOMPOSITION
C
C**** LOOP THROUGH THE COLUMNS TO PERFORM THE TRIANGULAR DECOMPOSITION
C
      KPIVO=0
      IDIAG=1
      DO 200 IEQNS=1,NEQNS
      IROWS=IDIAG+1
      IDIAG=LPONT(IEQNS)
      IHEIG=IDIAG-IROWS
      IF(IHEIG.GT.0) THEN
       ISTAR=IEQNS-IHEIG
       IENDS=IEQNS-1
C
C**** IF DIAGONAL IS ZERO COMPUTE A NORM FOR SINGULARITY TEST
C
       IF(GSTDI(IEQNS).EQ.ZEROS) 
     .  CALL SKYCEK(GSTUP(IROWS),IHEIG,SAVAL)
       DO 100 JEQNS=ISTAR,IENDS
       IROWS=IROWS+1
       JDIAG=LPONT(JEQNS)
       JHEIG=MIN0(JDIAG-LPONT(JEQNS-1),JEQNS-ISTAR+1)
       IF(JHEIG.GT.0) THEN
        IRHEI=IROWS-JHEIG
        JDHEI=JDIAG-JHEIG+1
        GSTUP(IROWS)=GSTUP(IROWS)-
     .               VECDOT(GSTUP(IRHEI),GSTLO(JDHEI),JHEIG)
        IF(KSYMM.EQ.0) 
     .   GSTLO(IROWS)=GSTLO(IROWS)-
     .                VECDOT(GSTLO(IRHEI),GSTUP(JDHEI),JHEIG)
       ENDIF
  100  CONTINUE
      ENDIF
C
C**** REDUCE THE DIAGONAL
C
      IF(IHEIG.GE.0) THEN
       PIVOT=GSTDI(IEQNS)
       IROWS=IDIAG-IHEIG
       IRHEI=IEQNS-IHEIG-1
       CALL SKYDIA(GSTLO(IROWS),GSTUP(IROWS),GSTDI(IRHEI),IHEIG+1,
     .             KSYMM,GSTDI(IEQNS))
C
C**** CHECK FOR POSSIBLE ERRORS AND PRINT WARNINGS
C
       IF(PIVOT.LT.ZEROS) KPIVO=KPIVO+1
       IF(NPOIC.EQ.0) THEN
        IF(DABS(GSTDI(IEQNS)).LT.TOLLE*DABS(PIVOT))  
     .                                WRITE(IUNIT,2000) IEQNS
        IF(PIVOT.LT.ZEROS.AND.GSTDI(IEQNS).GT.ZEROS) 
     .                                WRITE(IUNIT,2001) IEQNS
        IF(PIVOT.GT.ZEROS.AND.GSTDI(IEQNS).LT.ZEROS.AND.KPORE.NE.2)
     .                                WRITE(IUNIT,2001) IEQNS
        IF(GSTDI(IEQNS) .EQ.  ZEROS)  WRITE(IUNIT,2002) IEQNS
       ELSE
        IF(IAUGM.NE.0.AND.IAUGM.NE.1) THEN
         IF(DABS(GSTDI(IEQNS)).LT.TOLLE*DABS(PIVOT))  
     .                                 WRITE(IUNIT,2000) IEQNS
         IF(PIVOT.LT.ZEROS.AND.GSTDI(IEQNS).GT.ZEROS) 
     .                                 WRITE(IUNIT,2001) IEQNS
         IF(PIVOT.GT.ZEROS.AND.GSTDI(IEQNS).LT.ZEROS.AND.KPORE.NE.2)
     .                                 WRITE(IUNIT,2001) IEQNS
         IF(GSTDI(IEQNS) .EQ.  ZEROS)  WRITE(IUNIT,2002) IEQNS
        ENDIF
       ENDIF
C
C**** COMPLETE RANK TEST FOR A ZERO DIAGONAL CASE
C
       IF(PIVOT.EQ.ZEROS.AND.IHEIG.GT.0) THEN
        IF(DABS(GSTDI(IEQNS)).LT.TOLLE*SAVAL)
     .                                WRITE(IUNIT,2003) IEQNS
       ENDIF
      ENDIF
C
C**** STORE RECIPROCAL OF DIAGONAL
C
      IF(GSTDI(IEQNS).NE.ZEROS) GSTDI(IEQNS)=UNITY/GSTDI(IEQNS)
C
  200 CONTINUE
C
      IF(NPOIC.EQ.0) THEN
       IF(KPIVO.NE.0) WRITE(IUNIT,2004) KPIVO
      ELSE
       IF(IAUGM.NE.0.AND.IAUGM.NE.1) THEN
        IF(KPIVO.NE.0) WRITE(IUNIT,2004) KPIVO
       ENDIF
      ENDIF
C
      RETURN
C
2000  FORMAT(' ***SKYLIN WARNING 1*** LOSS OF AT LEAST 7 DIGITS IN',
     1 ' REDUCING DIAGONAL OF EQUATION',I5)
2001  FORMAT(' ***SKYLIN WARNING 2*** SIGN OF DIAGONAL CHANGED WHEN',
     1 ' REDUCING EQUATION',I5)
2002  FORMAT(' ***SKYLIN WARNING 3*** REDUCED DIAGONAL IS ZERO FOR',
     1 ' EQUATION',I5)
2003  FORMAT(' ***SKYLIN WARNING 4*** RANK FAILURE FOR ZERO UNREDUCED',
     1 ' DIAGONAL IN EQUATION',I5)
2004  FORMAT(10X,' ***SKYLIN WARNING *** NON-POSITIVE DEFINITE MATRIX.',
     1 /,32X,' NUMBER OF NEGATIVE EIGENVALUES FOUND = ',I5,/)
      END
