      SUBROUTINE ADDELM
C***********************************************************************
C
C**** THIS ROUTINE CALCULATES THE POINTERS FOR ELEMENTAL ARRAYS
C
C     Notes: VNORI is the normal vector stored at element level. This
C            array is only useful when NMEMO2M=0 & side to side contact
C            elements are used (ITYPE=32)
C
C***********************************************************************
C
C**** GENERAL DIMENSIONS
C
      INCLUDE 'para_om.f'
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'auxl_om.f'
      INCLUDE 'prob_om.f'
C
C**** GENERAL CHECKS OF VARIABLES DEFINED IN setdat.f & consett.f
C
c     IF(MPROP.LT.NPROP)
c    . CALL RUNEND('ERROR: MPROP LT NPROP')
C
c     IF(MHLOD.LT.NHLOD)
c    . CALL RUNEND('ERROR: MHLOD LT NHLOD')
C
c     IF(MSUBF.LT.NSUBF)
c    . CALL RUNEND('ERROR: MSUBF LT NSUBF')
C
c     IF(MPREL.LT.NPREL)
c    . CALL RUNEND('ERROR: MPREL LT NPREL')
C
c     IF(MHIST.LT.NHIST)
c    . CALL RUNEND('ERROR: MHIST LT NHIST')
C
c     IF(MNUIN.LT.NNUIN)
c    . CALL RUNEND('ERROR: MNUIN LT NNUIN')
C
C**** GENERAL CHECKS OF VARIABLES DEFINED IN INPUT DATA
C     (now in setdat.f)
C
c     IF(MDISKDM.NE.NDISKDM)
c    . CALL RUNEND('ERROR: MDISKDM =/ NDISKDM')
C
c     IF(MFURESM.LT.NFURESM)             ! this control is not necessary
c    . CALL RUNEND('ERROR: MFURESM =/ NFURESM')
C
c     IF(MMACHIM.NE.NMACHIM)
c    . CALL RUNEND('ERROR: MMACHIM =/ NMACHIM')
C
c     IF(MMEMOM.NE.NMEMOM)
c    . CALL RUNEND('ERROR: MMEMOM =/ NMEMOM')
C
c     IF(MMEMO1M.NE.NMEMO1M)
c    . CALL RUNEND('ERROR: MMEMO1M =/ NMEMO1M')
C
c     IF(MMEMO2M.NE.NMEMO2M)
c    . CALL RUNEND('ERROR: MMEMO2M =/ NMEMO2M')
C
c     IF(MMEMO5M.NE.NMEMO5M)
c    . CALL RUNEND('ERROR: MMEMO5M =/ NMEMO5M')
C
c     IF(MMEMO6M.NE.NMEMO6M)
c    . CALL RUNEND('ERROR: MMEMO6M =/ NMEMO6M')
C
c     IF(MMEMO7M.NE.NMEMO7M)
c    . CALL RUNEND('ERROR: MMEMO7M =/ NMEMO7M')
C
c     IF(MMEMO8M.NE.NMEMO8M)
c    . CALL RUNEND('ERROR: MMEMO8M =/ NMEMO8M')
C
c     IF(MMEMO9M.NE.NMEMO9M)
c    . CALL RUNEND('ERROR: MMEMO9M =/ NMEMO9M')
C
C**** INITIAL DATA
C
      IPOON=0
      IDYON=0
      ISMOM=0
C
C**** ELEMENT DATA ARRAY ( ELDAT )
C
      NKOST=(NSTR1+1)*NSTR1/2
      IF(KSYMM.EQ.0) NKOST=NSTR1*NSTR1
      IF(KSGAU.NE.0) ISMOM=1
C
      IF (KPROB.EQ.2) THEN             ! STRUCTURAL SHELLS AND PLATES
       IDATA(1)=1                              ! ELCOD(NDIME,NNODE)
       IDATA(2)=IDATA(1)+NDIME*NNODE           ! DERIV(2,NNODE,NGAUS)
       IDATA(3)=IDATA(2)+2*NNODE*NGAUS         ! DVOLU(NGAUS)
       IDATA(4)=IDATA(3)+NGAUS                 ! GPCOD(NDIME,NGAUS)
       IDATA(5)=IDATA(4)+NDIME*NGAUS           ! SHAPE(NNODE,NGAUS)
       IDATA(6)=IDATA(5)+NNODE*NGAUS           ! EPMTX(NKOST,NGAUS)
       IDATA(7)=IDATA(6)+NKOST*NGAUS           ! TRNOD(NDIME,NNODE)
       IDATA(8)=IDATA(7)+NDIME*NNODE*(NDIME-2) ! EMASS(NNODE,NNODE)
       NDATA   =IDATA(8)+NNODE*NNODE*ISMOM
      ELSE                             ! OTHERS PROBLEMS
       NMEMA1M=1-NMEMO1M
       NMEMA2M=1-NMEMO2M
       IDATAAM=1
       IF(NMEMA1M.EQ.0.AND.NMEMA2M.EQ.0.AND.NMEMOM.EQ.0.AND.
     .  (ISMOM*NMEMA2M).EQ.0.AND.NHOUR.EQ.0) IDATAAM=0
       IDATA( 1)=IDATAAM                            ! ELCOD(NDIME,NNODE)
       IDATA( 2)=IDATA( 1)+NDIME*NNODE*NMEMA1M !CARTD(NDIME,NNODE,NGAUS)
       IDATA( 3)=IDATA( 2)+NDIME*NNODE*NGAUS*NMEMA2M      ! DVOLU(NGAUS)
       IDATA( 4)=IDATA( 3)+NGAUS*NMEMA2M            ! GPCOD(NDIME,NGAUS)
       IDATA( 5)=IDATA( 4)+NDIME*NGAUS*NMEMA2M      ! SHAPE(NNODE,NGAUS)
       IDATA( 6)=IDATA( 5)+NNODE*NGAUS*NMEMA2M      ! EPMTX(NKOST,NGAUS)
       IDATA( 7)=IDATA( 6)+NKOST*NGAUS*NMEMOM       ! RMAT1(NDIME,NDIME)
       IDATA( 8)=IDATA( 7)+NDIME*NDIME*NMEMOM       ! EMASS(NNODE,NNODE)
       IDATA( 9)=IDATA( 8)+NNODE*NNODE*ISMOM*NMEMA2M !STIFH(NEVAB,NEVAB)
       IDATA(10)=IDATA( 9)+NEVAB*NEVAB*NHOUR  ! BSBAR(NSTR1,NEVAB,NGAUS)
       IDATA(11)=IDATA(10)+NSTR1*NEVAB*NGAUS*MMEMA2M !VNORI(NDIME,NGAUS)
       NDATA    =IDATA(11)+NDIME*NGAUS*NMEMA2M
      ENDIF
C
C**** ELEMENT PRESCRIBED VARIABLES ARRAY ( ELPRE )
C
      NMEMOMX=NMEMOM
      IF(INITV.EQ.1) NMEMOMX=1 
      IPREV(1)=1*NMEMOMX                      ! STRA0(NSTR1,NGAUS)
      IPREV(2)=IPREV(1)+NSTR1*NGAUS*NMEMOM    ! STRS0(NSTR1,NGAUS)
      IPREV(3)=IPREV(2)+NSTR1*NGAUS*NMEMOMX   ! TEMPC(4)
      NPREV   =IPREV(3)+4*NMEMOM
C
C**** ELEMENT STATE VARIABLES ARRAY ( ELVAR )
C
      NMEMA5M=1-NMEMO5M
      ISTAT(1)=1                              ! ELDIS(NDOFC,NNODE)
      ISTAT(2)=ISTAT(1)+NDOFC*NNODE*NMEMA5M   ! EHIST(NHIST,NGAUS)
      ISTAT(3)=ISTAT(2)+NHIST*NGAUS           ! STRAN(NSTR1,NGAUS) 
      ISTAT(4)=ISTAT(3)+NSTR1*NGAUS           ! STRSG(NSTR1,NGAUS)
      NSTAT   =ISTAT(4)+NSTR1*NGAUS
C                           
C**** ELEMENT MATRICES ARRAY ( ELMAT )
C
      IF(KDYNA.EQ.1) IDYON=1
      IF(KPORE.EQ.2) IPOON=1
C
      NMEMA6M=1-NMEMO6M
      NMEMA7M=1-NMEMO7M
      IMATXA=1
      IF(NMEMA7M.EQ.0.AND.IPOON.EQ.0) IMATXA=0
      IMATX(1)=IMATXA                         ! CSTIF(NEVAC,NEVAC)
      IMATX(2)=IMATX(1)+NEVAC*NEVAC*NMEMA7M   ! KSTIF(NKOVA)
      IMATX(3)=IMATX(2)+NKOVA*NMEMA6M         ! MSTIF(NKOVA)
      IMATX(4)=IMATX(3)+NKOVA*IDYON*NMEMA6M   ! PSTIF(NKOND)
      IMATX(5)=IMATX(4)+NKOND*IPOON           ! QSTIF(NKOND)
      IMATX(6)=IMATX(5)+NKOND*IPOON           ! HSTIF(NEVAB*NNODE)
      NMATX   =IMATX(6)+NEVAB*NNODE*IPOON
C
C**** MEMORY CONTROL
C
c     IF(NDATA.GT.MDATA)
c    . CALL RUNEND('ERROR IN ADDELM: NDATA            ')
c     IF(NPREV.GT.MPREV)
c    . CALL RUNEND('ERROR IN ADDELM: NPREV            ')
c     IF(NSTAT.GT.MSTAT)
c    . CALL RUNEND('ERROR IN ADDELM: NSTAT            ')
c     IF(NMATX.GT.MMATX)
c    . CALL RUNEND('ERROR IN ADDELM: NMATX            ')
C
      RETURN
      END
