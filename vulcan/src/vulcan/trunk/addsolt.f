      SUBROUTINE ADDSOLT(NEQNST,NFRONT,NLASTT,NSTIFT,WORK1T)
C***********************************************************************
C
C**** THIS ROUTINE CALCULATES THE MEMORY REQUIREMENTS & ADDRESS FOR 
C     SOLVER
C
C***********************************************************************
C
      REAL*8, ALLOCATABLE, INTENT(INOUT) :: WORK1T(:)
      REAL*8, ALLOCATABLE                :: TEMPT(:)
      INTEGER                            :: NSIZEWORK1T,ERROR
C**** GENERAL DIMENSIONS
C
      INCLUDE 'para_omt.f'
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_omt.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'auxl_omt.f'
      NSIZEWORK1T=SIZE(WORK1T)
C
      ISOLAT=1
      IF(NMEMO7.EQ.1) ISOLAT=1+LSTIFT
C
C**** SKYLINE SOLVER
C
      IF(KSOLVT.EQ.0) THEN
       IUNSYT=0
       IF(KSYMMT.EQ.0) IUNSYT=1
       IFITET=0
       IF(MITCGT.GT.0) IFITET=1
       ISOLVT( 1)=ISOLAT                           ! GSTDI(NEQNS)
       ISOLVT( 2)=ISOLVT( 1)+NEQNST                ! GSTLO(NLAST*IUNSY)
       ISOLVT( 3)=ISOLVT( 2)+NLASTT*IUNSYT         ! GSTUP(NLAST)
       ISOLVT( 4)=ISOLVT( 3)+NLASTT                ! CSTIF(NEVAC,NEVAC)
       ISOLVT( 5)=ISOLVT( 4)+NEVACT*NEVACT         ! ELOAD(NEQNS)
       ISOLVT( 6)=ISOLVT( 5)+NEQNST                ! LNUEQ(NTOTV)
       ISOLVT( 7)=ISOLVT( 6)+(NTOTVT*ICHALT+4)/8   ! LPONT(NTOTV)
       ISOLVT( 8)=ISOLVT( 7)+(NTOTVT*ICHALT+4)/8   ! DISIM(NEVAC)
       ISOLVT( 9)=ISOLVT( 8)+NEVACT                ! FOREL(NEVAC)
       ISOLVT(10)=ISOLVT( 9)+NEVACT                ! ALOAD(NEQNS*IFITE)
       ISOLVT(11)=ISOLVT(10)+NEQNST*IFITET         ! DELTA(NEQNS*IFITE)
       ISOLVT(12)=ISOLVT(11)+NEQNST*IFITET         ! DISIC(NEQNS*IFITE)
       ISOLVT(13)=ISOLVT(12)+NEQNST*IFITET         ! LOCAL(NEVAC*IFITE)
       LSOLVT    =ISOLVT(13)+(NEVACT*IFITET*ICHALT+4)/8
      ENDIF
C
C**** FRONTAL SOLVER
C
      IF(KSOLVT.EQ.1) THEN
       IUNSYT=0
       IF(KSYMMT.EQ.0) IUNSYT=1
       ISOLVT(1) =ISOLAT                           ! EQRHS(NBUFA)
       ISOLVT(2) =ISOLVT(1)+NBUFAT                 ! EQUAT(NFRON,NBUFA)
       ISOLVT(3) =ISOLVT(2)+NFRONT*NBUFAT          ! GLOAD(NFRON)
       ISOLVT(4) =ISOLVT(3)+NFRONT                 ! GSTIF(NSTIF)
       ISOLVT(5) =ISOLVT(4)+NSTIFT                 ! LOCEL(NEVAC)
       ISOLVT(6) =ISOLVT(5)+(NEVACT*ICHALT+4)/8    ! NACVA(NFRON)
       ISOLVT(7) =ISOLVT(6)+(NFRONT*ICHALT+4)/8    ! NAMEV(NBUFA)
       ISOLVT(8) =ISOLVT(7)+(NBUFAT*ICHALT+4)/8    ! NDEST(NEVAC)
       ISOLVT(9) =ISOLVT(8)+(NEVACT*ICHALT+4)/8    ! NPIVO(NBUFA)
       ISOLVT(10)=ISOLVT(9)+(NBUFAT*ICHALT+4)/8    ! VECRV(NFRON)
       ISOLVT(11)=ISOLVT(10)+NFRONT                ! CSTIF(NEVAC,NEVAC)
       ISOLVT(12)=ISOLVT(11)+NEVACT*NEVACT   ! EQCOL(IUNSY*NFRON*NBUFA)
       LSOLVT    =ISOLVT(12)+IUNSYT*NFRONT*NBUFAT
      ENDIF
C
C**** PCG SOLVER
C
      IF(KSOLVT.EQ.2) THEN
       NSIZET=NDOFCT
       IF(NWIDTT.LT.0) NSIZET=NDOFCT*NDOFCT
       ISOLVT( 1)=ISOLAT                           ! GSTDI(NPOIN*NSIZE)
       ISOLVT( 2)=ISOLVT( 1)+NPOINT*NSIZET         ! CSTIF(NEVAC,NEVAC)
       ISOLVT( 3)=ISOLVT( 2)+NEVACT*NEVACT         ! DISIM(NEVAC)
       ISOLVT( 4)=ISOLVT( 3)+NEVACT                ! FOREL(NEVAC)
       ISOLVT( 5)=ISOLVT( 4)+NEVACT                ! ALOAD(NTOTV)
       ISOLVT( 6)=ISOLVT( 5)+NTOTVT                ! DELTA(NTOTV)
       LSOLVT    =ISOLVT( 6)+NTOTVT
      ENDIF
C
C**** GMRES SOLVER
C
      IF(KSOLVT.EQ.3) THEN
       IUNSYT=0
       IFITET=0
       NLASTT=0
       NWORKGT=NEQNST*(MKRYLT+1)+(MKRYLT*(MKRYLT+1))/2+4*MKRYLT+2
       NCEROT=0
C
       ISOLVT( 1)=ISOLAT                           ! GSTDI(NEQNS)
       ISOLVT( 2)=ISOLVT( 1)+NEQNST                ! GSTLO(NLAST*IUNSY)
       ISOLVT( 3)=ISOLVT( 2)+NLASTT*IUNSYT         ! GSTUP(NLAST)
       ISOLVT( 4)=ISOLVT( 3)+NLASTT                ! CSTIF(NEVAC,NEVAC)
       ISOLVT( 5)=ISOLVT( 4)+NEVACT*NEVACT         ! ELOAD(NEQNS)
       ISOLVT( 6)=ISOLVT( 5)+NEQNST*NCEROT         ! LNUEQ(NTOTV)
       ISOLVT( 7)=ISOLVT( 6)+(NTOTVT*ICHALT+4)/8   ! LPONT(NTOTV)
       ISOLVT( 8)=ISOLVT( 7)+(NTOTVT*ICHALT+4)/8   ! DISIM(NEVAC)
       ISOLVT( 9)=ISOLVT( 8)+NEVACT*NCEROT         ! FOREL(NEVAC)
       ISOLVT(10)=ISOLVT( 9)+NEVACT*NCEROT         ! ALOAD(NEQNS*IFITE)
       ISOLVT(11)=ISOLVT(10)+NEQNST*IFITET         ! DELTA(NEQNS*IFITE)
       ISOLVT(12)=ISOLVT(11)+NEQNST*IFITET         ! DISIC(NEQNS*IFITE)
       ISOLVT(13)=ISOLVT(12)+NEQNST*IFITET         ! LOCAL(NEVAC*IFITE)
       ISOLVT(14)=ISOLVT(13)+(NEVACT*IFITET*ICHALT+4)/8
       ISOLVT(15)=ISOLVT(14)                       ! BGMRE(NEQNS)
       ISOLVT(16)=ISOLVT(15)+NEQNST                ! XGMRE(NEQNS)
       ISOLVT(17)=ISOLVT(16)+NEQNST                ! WGMRE(NEQNS)
       LSOLVT    =ISOLVT(17)+NWORKGT
      ENDIF
C
C**** EXPLICIT SOLUTION (NO SOLVER)
C
      IF(KSOLVT.EQ.4) THEN
       ISOLVT( 1)=ISOLAT                           ! CSTIF(NEVAC,NEVAC)
       ISOLVT( 2)=ISOLVT( 1)+NEVACT*NEVACT         ! DISIM(NEVAC)
       ISOLVT( 3)=ISOLVT( 2)+NEVACT                ! FOREL(NEVAC)
       ISOLVT( 4)=ISOLVT( 3)+NEVACT                ! CSTII(NEVAC)
       ISOLVT( 5)=ISOLVT( 4)+NEVACT                ! CSTIT(NTOTV)
       LSOLVT    =ISOLVT( 5)+NTOTVT
      ENDIF
C
C**** MEMORY CONTROL
C
      IF(LSOLVT.GT.NSIZEWORK1T) THEN
        WRITE(LUREST,*) "IN ADDSOLT REALLOCATE WORK1T FROM: ", 
     .                   NSIZEWORK1T, "TO: ", LSOLVT
        ERROR=0
        ALLOCATE(TEMPT(LSOLVT),STAT=ERROR)
        IF (ERROR.NE.0)CALL RUNEND("CANT REALLOCATE WORK1T IN ADDSOLT")
        TEMPT(1:NSIZEWORK1T)=WORK1T(:)
        CALL MOVE_ALLOC(FROM=TEMPT,TO=WORK1T)
      END IF

C
C**** DEFINE STARTING POSITION FOR SOLVER MEMORY
C
      LBYTST=LSOLVT*8
      IRELET=1
C
      RETURN
      END
