      SUBROUTINE STRINPT
C***********************************************************************
C
C**** THIS ROUTINE READS THE STRATEGY CONTROLLING PARAMETERS FOR THE
C     CURRENT TIME INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_omt.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'auxl_omt.f'
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'inpo_omt.f'
C
      PARAMETER (MCOMMT=16)
      CHARACTER*5 COMMDT(MCOMMT)
      DATA COMMDT/'ACCEL','ALGOR','ARCLE','CONVE','FINAL','LINES',
     .            'LOADI','OUTPU','DRIFT','NODAL','STEPP','TIMEI',
     .            'RESTA','POSTP','PLOT' ,'END_S'/
C
      WRITE(LUREST,900)
C
C**** RESET RESTART DEFAULT TO NSTEP
C
      IF(KSAVET.NE.-1) THEN
       NOUTPT(1)=NSTEPT
       KSAVET=0
      ENDIF
C
C**** READ NEW PARAMETERS IF DESIRED
C
      NPRINT=0
      ITAPET=LUDATT
  200 CALL LISTENT('STRINPT',NPRINT,ITAPET)
C
C**** IDENTIFY COMMAND
C
      DO ICOMMT=1,MCOMMT
       IF(WORDST(1).EQ.COMMDT(ICOMMT)) GOTO 300
      ENDDO
      GO TO 1000 
C
  300 CONTINUE
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), ICOMMT
C
C**** 'ACCEL' ACTIVATES OR DISACTIVATES SOLUTION ACCELARATION
C     (DEFAULT LACCE=0)
C
    1 CONTINUE
C
      LACCET=0
      NACCET=INT(PARAMT(1))
      IF(WORDST(2).EQ.'ON') LACCET=NACCET
C
      GO TO 200
C
C**** 'ALGOR' DEFINES TYPE OF SOLUTION ALGORITHM 
C     (DEFAULT: NALGO=1)
C
    2 CONTINUE
C
      NALGOT=1
      IF(WORDST(2).EQ.'UPDAT') THEN
       IF(INT(PARAMT(1)).GT.1) THEN
        NALGOT=INT(PARAMT(1))
        IF(INT(PARAMT(2)).GT.0) KALGOT=INT(PARAMT(2))
        IF(INT(PARAMT(3)).GT.0) KALGOT=INT(PARAMT(3))
       ENDIF
      ENDIF
C
      GO TO 200
C
C**** 'ARCLE' SELECTS ARC-LENGTH OPTIONS
C     (DEFAULT KARCL=0, NODIS,NFDIS,NCDIS= NOT DEFINED)
C
    3 CONTINUE
C
      KARCLT=0
      IF(WORDST(2).EQ.'NORMA') KARCLT=1
      IF(WORDST(2).EQ.'UPDAT') KARCLT=2
      IF(WORDST(2).EQ.'SPHER') KARCLT=3
      IF(WORDST(2).EQ.'DISPL') KARCLT=4
      IF(KARCLT.EQ.4) THEN
       NODIST=INT(PARAMT(1))
       NFDIST=INT(PARAMT(2))
       NCDIST=(NODIST-1)*NDOFNT+NFDIST
      ENDIF
C
      GO TO 200
C
C**** 'CONVE' DEFINES CONVERGENCE CRITERIA
C     (DEFAULT KCONV=1, MINTE=50 & TOLER=1%)
C
    4 CONTINUE
C
      KCONVT=1
      IF(WORDST(2).EQ.'INCRE') KCONVT=2
      IF(WORDST(2).EQ.'TEMPE') KCONVT=3
      IF(WORDST(2).EQ.'ENERG') KCONVT=4
      IF(PARAMT(1).GT.0.)      MITERT=INT(PARAMT(1))
      IF(PARAMT(2).NE.0.)      TOLERT=PARAMT(2)
C
      ITRUC=0
      TRUCH=1.0
      TRUCHB=0.0
      IF(PARAMT(3).NE.0.) ITRUC=INT(PARAMT(3))
      IF(PARAMT(4).NE.0.) TRUCH=PARAMT(4)
      IF(PARAMT(5).NE.0.) TRUCHB=PARAMT(5)
C
      ITRUCV=0
      IF(WORDST(3).EQ.'VARIA') ITRUCV=1     ! variable strategy
C
      IF(NNUPT.EQ.0) THEN     ! no subincrem. & var. strat. for no ph-ch
       ITRUC=MITERT
       ITRUCV=0
      ENDIF
C
      GO TO 200
C
C**** 'FINAL' END OF ANALYSIS OPTION
C     (DEFAULT STIFI=0    N.B. IF STIFI=0 IT IS NOT USED AFTERWARDS)
C
    5 CONTINUE
C
      IF(PARAMT(1).GT.0.) STIFIT=PARAMT(1)
      STIFIT=STIFIT/100.
C
      GO TO 200
C
C**** 'LINES' LINE SEARCH
C
    6 CONTINUE
C
      LINEST=0
      IF(WORDST(2).EQ.'ON') LINEST=1
C
      GO TO 200
C
C**** 'LOADI' SELECTS LOAD INCREMENTATION OPTIONS
C     (DEFAULT LAUTO=0, DITER= NOT DEFINED)
C
    7 CONTINUE
C
      LAUTOT=0
      IF(WORDST(2).EQ.'ITERA') LAUTOT=1
      IF(WORDST(2).EQ.'STI1')  LAUTOT=2
      IF(WORDST(2).EQ.'STI2')  LAUTOT=3
      DITERT=PARAMT(1)
      IF(LAUTOT.GT.1) DITERT=DITERT/100.
C
      GO TO 200
C
C**** 'OUTPU' SELECTS OUTPUT FREQUENCY (see outcekt.f)
C
    8 CONTINUE
C
      IF(WORDST(2).EQ.'TEMPE') THEN
       NOUTPT( 4)=INT(PARAMT(1))
       NOUTPT(13)=INT(PARAMT(2))
      ENDIF
C
      IF(WORDST(2).EQ.'G_HEA') THEN
       IF(NMEMO4.EQ.0) THEN
        CALL RUNMENT('WARNING: GAUSSIAN HEATS WITH NMEMO4=0           ')
        NOUTPT( 5)=0
        NOUTPT(14)=0
       ELSE
        NOUTPT( 5)=INT(PARAMT(1))
        NOUTPT(14)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'G_TGR') THEN              ! not implemented
       IF(NMEMO4.EQ.0) THEN
        CALL RUNMENT('WARNING: GAUSSIAN TEMP. GRAD. WITH NMEMO4=0     ')
        NOUTPT( 6)=0
        NOUTPT(15)=0
       ELSE
        NOUTPT( 6)=INT(PARAMT(1))
        NOUTPT(15)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'G_INT') THEN
       IF(NMEMO3.EQ.0.OR.NNUINT.EQ.0) THEN
        CALL RUNMENT('WARNING: GAUSS INT. VAR. WITH NMEMO3=0-NNUINT=0 ')
        NOUTPT( 7)=0
        NOUTPT(16)=0
       ELSE
        NOUTPT( 7)=INT(PARAMT(1))
        NOUTPT(16)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'N_HEA') THEN
       IF(KSGAUT.EQ.0)
     .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       IF(NMEMO4.EQ.0) THEN
        CALL RUNMENT('WARNING: NODAL HEATS WITH NMEMO4=0              ')
        NOUTPT( 8)=0
        NOUTPT(17)=0
       ELSE
        NOUTPT( 8)=INT(PARAMT(1))
        NOUTPT(17)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'N_PHA') THEN
       NOUTPT( 9)=INT(PARAMT(1))
       NOUTPT(18)=INT(PARAMT(2))
      ENDIF
C
      IF(WORDST(2).EQ.'N_INT') THEN
       IF(KSGAUT.EQ.0)
     .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       IF(NMEMO3.EQ.0.OR.NNUINT.EQ.0) THEN
        CALL RUNMENT('WARNING: NODAL INT. VAR. WITH NMEMO3=0-NNUINT=0 ')
        NOUTPT(20)=0
        NOUTPT(21)=0
       ELSE
        NOUTPT(20)=INT(PARAMT(1))
        NOUTPT(21)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'N_POR') THEN
       IF(KSGAUT.EQ.0)
     .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       IF(NPOROT.EQ.0) THEN
        CALL RUNMENT('WARNING: NO POROSITY CRITERIA HAS BEEN IMPUT    ')
        NOUTPT(22)=0
        NOUTPT(23)=0
       ELSE
        NOUTPT(22)=INT(PARAMT(1))
        NOUTPT(23)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      IF(WORDST(2).EQ.'ALL') THEN
       IF(KSGAUT.EQ.0)
     .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       IF(NMEMO4.EQ.0.OR.NMEMO3.EQ.0.OR.NNUINT.EQ.0) THEN
        CALL RUNMENT('WARNING: ALL WITH NMEMO4=0, NMEMO3=0, NNUINT=0  ')
        NOUTPT(10)=0
        NOUTPT(19)=0
       ELSE
        NOUTPT(10)=INT(PARAMT(1))
        NOUTPT(19)=INT(PARAMT(2))
       ENDIF
      ENDIF
C
      GO TO 200
C
C**** 'DRIFT' DEFINES TYPE OF PLASTIC BACK PROJECTION 
C     (DEFAULT: NBACK=1)
C     
    9 CONTINUE
C
      NBACKT=1
      IF(WORDST(2).EQ.'MODIF') NBACKT=2
C
      GO TO 200
C
C**** 'NODAL' ACTIVATES OR DISACTIVATES SMOOTHING OF EXPWP
C     (DEFAULT KSMUS= OFF)
C
   10 CONTINUE
C
      IF(WORDST(2).EQ.'ON')  KSMUST= IABS(KSMUST)
      IF(WORDST(2).EQ.'OFF') KSMUST=-IABS(KSMUST)
      IF(PARAMT(1).NE.0.)    WLUMPT=PARAMT(1)
C
      GO TO 200
C
C**** 'STEPP' DEFINE TIME STEPPING ALGORITHM 
C     (DEFAULT KINTE=0, TALFA & TBETA NOT DEFINED)
C
   11 CONTINUE
C
      KINTET=0
      IF(WORDST(2).EQ.'EULER') KINTET=1
      IF(WORDST(2).EQ.'NEWMA') KINTET=2
      IF(WORDST(2).EQ.'HUGHE') THEN
       IF(WORDST(3).EQ.'V_FOR') KINTET=3
       IF(WORDST(3).EQ.'D_FOR') KINTET=4
      ENDIF
      CONSTT=PARAMT(1)
ctm      IF(CONSTT.LT.0.5) CONSTT=.5
      IF(KINTET.NE.2) THEN
       TALFAT=CONSTT
       TBETAT=1.
       NCETAT=0
       IF(PARAMT(2).NE.0.) NCETAT=INT(PARAMT(2))
      ELSE
       CNEW1T=CONSTT
       CNEW2T=PARAMT(2)
       IF(CNEW2T.EQ.0.) CNEW2T=(CNEW1T+.5)**2/4.
       TALFAT=    1./CNEW2T
       TBETAT=CNEW1T/CNEW2T
      ENDIF
      GO TO 200
C
C**** 'TIMEI' SELECTS TIME INCREMENTATION OPTIONS
C     (DEFAULT KOPTI=0, XTIME=1.)
C
   12 CONTINUE
C
      KOPTIT=INT(PARAMT(1))
      IF(PARAMT(2).NE.0.) XTIMET=PARAMT(2)
      GO TO 200
C
C**** 'RESTA' DEFINES FREQUENCY OF RESTART DUMPING
C     (DEFAULT:  KEEP ONLY LAST STEP )
C
   13 CONTINUE
C
      IF(PARAMT(1).NE.0.0)    NOUTPT( 1)=INT(PARAMT(1))
      IF(WORDST(2).EQ.'NONE') KSAVET=-1
      IF(WORDST(2).EQ.'SAVE') KSAVET= 1
      GO TO 200
C
C**** 'POSTP' DEFINES FREQUENCY OF POST-PROCESSING DUMPING
C     (DEFAULT:  NO POST-PROCESSING)
C
   14 CONTINUE
C
C**** ESTABLISHES SOME INDEXES (see setdatt.f)
C
      KPPCGT=0
      KPPCNT=1
C
      IF(KPOSTT.EQ.1) THEN
       IF(KSGAUT.EQ.0)
     .  CALL RUNMENT('WARNING: NO SMOOTHING CARD HAS BEEN INPUT       ')
       NOUTPT( 2)=INT(PARAMT(1))
       NOUTPT(11)=INT(PARAMT(2))
      ENDIF
      GO TO 200
C
C**** 'PLOT' DEFINES X-Y PLOTS
C
   15 NFILET=LUDATT
      IFLAGT=0
      IF(WORDST(2).EQ.'NEW') IFLAGT=1
      IF(PARAMT(1).NE.0) NFILET=INT(PARAMT(1))
      CALL PLOINPT(NFILET,IFLAGT)
      GO TO 200
C
C**** END
C
   16 CONTINUE
C
      RETURN
 1000 CALL RUNENDT('STRINP:ERROR IN STRATEGY DATA BLOCK')
  900 FORMAT(1H1,///)
      END
