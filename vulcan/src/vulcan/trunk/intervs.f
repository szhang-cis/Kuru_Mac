      SUBROUTINE INTERVS(DISTOS,ELDATS,ELPRES,ELVARS,ELMATS,HTLODS,
     .                   IFFIXS,PRESCS,LNODSS,LPNTNS,MATNOS,PROELS,
     .                   PROPSS,RLOADS,RLOAHS,FICTOS,TFICTS,ADVELS,
     .                   HEADSS,TLOADS,COORDS,TEMPIS,FPCHAS,PREASS,
     .                   DISPLS,LACTIS,WORK1S)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP THE TYPE OF ALGORITHM AND REFERENCE LOAD
C     TO BE USED IN THE CURRENT TIME INTERVAL
C     FOR THE FIRST INTERVAL, IT ALSO EVALUATES THE CONSTANT ELEMENT
C     MATRICES OF THE PROBLEM
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
      REAL*8, ALLOCATABLE, INTENT(INOUT) :: WORK1S(:)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
      INCLUDE 'nued_om.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inpo_oms.f'
      INCLUDE 'soladds.inc'
C
      DIMENSION MATNOS(NELEMS),          LNODSS(NNODES,NELEMS),
     .          PROELS(NPRELS,NGRUPS),   PROPSS(NPROPS,NMATSS),
     .          ELDATS(NDATAS),          ELPRES(NPREVS),
     .          ELVARS(NSTATS),          ELMATS(NMATXS)
      DIMENSION DISTOS(*),
     .          HTLODS(NHLODS,NSUBFS,*), IFFIXS(NTOTVS,*),
     .          LPNTNS(*),               RLOADS(*)       
      DIMENSION PRESCS(NTOTVS,2),        RLOAHS(NTOTVS,NFUNCS),
     .          FICTOS(NFUNCS),          TFICTS(NFUNCS)
      DIMENSION ADVELS(NTOTVS*NDIMES)
      DIMENSION HEADSS(NPOINS,4),        TLOADS(NTOTVS,2),
     .          COORDS(NDIMES,NPOINS),   TEMPIS(NPOINS,2),
     .          FPCHAS(NFPCH,NPOINS),    PREASS(NPREAS,NPOINS),
     .          DISPLS(NTOTVMS),         LACTIS(NELEMS)
C
C**** LOOK FOR THE BEGINING OF THE INTERVAL DATA CARD  
C
      CALL INTREDS(TFICTS)
C
C**** OPEN RESTART FILE
C
c     IF(NFURESS.EQ.2)
c    . OPEN(UNIT=LURSTS,FILE=CKS,STATUS='UNKNOWN',ACCESS='DIRECT',
c    .      FORM='UNFORMATTED',RECL=LENRCS)
C
C**** READ THE NEW LOAD, NEW BOUNDARY CONDITIONS AND SOLUTION STRATEGY
C     ( UNLESS THIS IS A "CONTINUE RESTART" )
C
      IF(IRESTS.NE.1.OR.(IRESTS.EQ.1.AND.ISKIPS.NE.0))
     . CALL INTLODS(ELDATS,ELPRES,ELVARS,ELMATS,HTLODS,IFFIXS,PRESCS,
     .              LNODSS,MATNOS,PROELS,PROPSS,RLOADS,RLOAHS,ADVELS,
     .              TEMPIS,COORDS,FPCHAS,DISPLS,
     .              WORK1S)
C
C**** PRINTS INITIAL VALUES
C
      IF(IPRCOS.EQ.0)
     . CALL OUTPUTS(DISTOS,ELDATS,ELPRES,ELVARS,ELMATS,HEADSS,
     .              IFFIXS,LNODSS,MATNOS,PROELS,PROPSS,TLOADS,
     .              COORDS,FPCHAS,PREASS(NPRE1S+1,1),DISPLS,WORK1S)
C
C**** VIRTUAL MEMORY ALLOCATION FOR SOLVER
C                             ( when new boundary or when re-starting)
C
      IF(NEWBOS.EQ.1.OR.IRESTS.NE.0)
     . CALL SOLADDS(IFFIXS,LNODSS,LPNTNS,PRESCS,
     .              WORK1S(IFIXYS( 1)),WORK1S(IFIXYS( 2)),
     .              WORK1S(IFIXYS( 3)),WORK1S(IFIXYS( 4)),
     .              WORK1S(IFIXYS( 5)),WORK1S(IFIXYS( 6)),
     .              WORK1S(IFIXYS( 7)),WORK1S)
C
      IF(ITIMES.EQ.1.OR.IRESTS.NE.0) THEN
C                             ! 1st interval or when re-starting
C
C**** DEAL WITH VIRTUAL MEMORY ALLOCATION 
C
       CALL ADDDATS(DISTOS,ELDATS,ELPRES,ELVARS)
       LTOTLS=LPRINS+LWOR1S+LSOLVS+LDABAS
       WRITE(LURESS,900) LPRINS,LWOR1S,LSOLVS,LDABAS,LTOTLS
       WRITE(LUPRIS,900) LPRINS,LWOR1S,LSOLVS,LDABAS,LTOTLS
C
C**** COMPUTE CONSTANT ELEMENT MATRICES
C
       CALL CONMTXS(ELDATS,ELPRES,ELVARS,ELMATS,LNODSS,MATNOS,PROELS,
     .              PROPSS,WORK1S)
C
      ENDIF
C
C**** CLOSE RESTART FILE
C
      IF(NFURESS.EQ.2) THEN
       IF(KSAVES.EQ.-1) THEN
c       CLOSE(LURSTS,STATUS='DELETE')
       ELSE
c       CLOSE(LURSTS,STATUS='KEEP')
       ENDIF
      ENDIF
C
      RETURN
  900 FORMAT(1H1,//5X,'SUMMARY OF MEMORY REQUIREMENTS :',/,
     .             5X,'==============================  ',/,
     .            15X,'REQUIRED PERMANENT MEMORY  =',I8,' WORDS (R*8)'/
     .            15X,'REQUIRED TEMPORARY MEMORY  =',I8,' WORDS (R*8)'/
     .            15X,'REQUIRED SOLVER    MEMORY  =',I8,' WORDS (R*8)'/
     .            15X,'ALLOCAT. DATA BASE MEMORY  =',I8,' WORDS (R*8)'/
     .            15X,'ALLOCAT. TOTAL     MEMORY  =',I8,' WORDS (R*8)'/)
      END
