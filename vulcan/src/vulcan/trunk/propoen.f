      SUBROUTINE PROPOEN(ITAPE,PROPS)
C***********************************************************************
C
C**** THIS ROUTINE READS THE MATERIAL PROPERTIES FOR THE ORTHOTROPIC,
C     ELASTIC & NON TEMPERATURE-DEPENDENT SOLID MODEL
C     (ELEMENT NO. 30)
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'inpo_om.f'
C
      DIMENSION PROPS(*)
C
C**** ESTABLISH SOME PARAMETERS
C
      PROPS(1)=1.0             ! orthotropic
      PROPS(2)=10.0            ! elastic
      PROPS(3)=1.0             ! no temperature-dependent
      PROPS(59)=3.0            ! solidification
C
      PROPS(37)=0.0            ! non prescribed strains (see incstn.f)
      PROPS(19)=0.0
C
      PROPS(21)=0.0            ! no external damping
      PROPS(22)=0.0
C
      KPLA1=0
      KPLA2=0
      KPLA3=0
      KPLA4=0
      KPLA5=0
      KPLA6=0
      KPLA7=0
C
      IF(NANIS.EQ.0)
     . CALL RUNEND('ERROR: ANISO. CARD MUST BE INPUT IN PROBLEM DATA')
      IANIS=1                  ! at least one material is orthotropic
C
      IF(NDIME.EQ.1)
     . CALL RUNEND('ERROR: 1D ANISOTROPY MODEL NOT IMPLEMENTED')
C
C**** READ & WRITE MATERIAL PROPERTIES
C
      NPRIN=0
C
C**** LOOK FOR 'DENSITY' CARD
C
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'DENSI') THEN
       PROPS(12)=PARAM(1)
       WRITE(LURES,801) PROPS(12)
       WRITE(LURES,899)
      ELSE
       IF(KDYNA.EQ.1) THEN
        CALL RUNEND('PROPOEN: DENSITY CARD NOT FOUND')
       ELSE
        PROPS(12)=0.0D0
        CALL RUNMEN('WARNING: ZERO DENSITY VALUE IS ASSUMED')
        GO TO 1
       ENDIF
      ENDIF
C
C**** LOOK FOR 'YOUNG_MODULI' CARD
C
      NPRIN=0
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
    1 IF(WORDS(1).EQ.'YOUNG') THEN
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'XX') THEN
        NPOI1=61
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        EX=PARAM(1)
        WRITE(LURES,803) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT XX CARD NOT FOUND')
       ENDIF
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'YY') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        EY=PARAM(1)
        WRITE(LURES,804) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT YY CARD NOT FOUND')
       ENDIF
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'ZZ') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        EZ=PARAM(1)
        WRITE(LURES,805) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT ZZ CARD NOT FOUND')
       ENDIF
      ELSE
       CALL RUNEND('PROPOEN: YOUNG_MODULI CARD NOT FOUND')
      ENDIF
C
C**** LOOK FOR 'POISSON_RATII' CARD
C
      NPRIN=0
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'POISS') THEN
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'XY') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        PXY=PARAM(1)
        WRITE(LURES,806) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT XY CARD NOT FOUND')
       ENDIF
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'XZ') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        PXZ=PARAM(1)
        WRITE(LURES,807) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT XZ CARD NOT FOUND')
       ENDIF
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'YZ') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        PYZ=PARAM(1)
        WRITE(LURES,808) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT YZ CARD NOT FOUND')
       ENDIF
      ELSE
       CALL RUNEND('PROPOEN: POISSON_RATII CARD NOT FOUND')
      ENDIF
C
C**** CHECK MATERIAL STABILITY CONDITIONS
C
      SC1=EZ-PYZ*PYZ*EY
      IF(SC1.LT.0.0D0)
     . CALL RUNMEN('WARNING: STABILITY CONDITION 1 IS NOT FULFILLED')
      SC2=EZ-PXZ*PXZ*EX
      IF(SC2.LT.0.0D0)
     . CALL RUNMEN('WARNING: STABILITY CONDITION 2 IS NOT FULFILLED')
      SC3=EY-PXY*PXY*EX
      IF(SC3.LT.0.0D0)
     . CALL RUNMEN('WARNING: STABILITY CONDITION 3 IS NOT FULFILLED')
C
C**** LOOK FOR 'SHEAR_MODULI' CARD
C
      NPRIN=0
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'SHEAR') THEN
       CALL LISTEN('PROPOEN',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'XY') THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=PARAM(1)
        WRITE(LURES,809) PROPS(NPOI1)
        WRITE(LURES,899)
       ELSE
        CALL RUNEND('PROPOEN: COMPONENT XY CARD NOT FOUND')
       ENDIF
       IF(NDIME.EQ.3) THEN
        CALL LISTEN('PROPOEN',NPRIN,ITAPE)
        IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'XZ') THEN
         NPOI1=NPOI2+1
         NPOI2=NPOI1
         PROPS(NPOI1)=PARAM(1)
         WRITE(LURES,810) PROPS(NPOI1)
         WRITE(LURES,899)
        ELSE
         CALL RUNEND('PROPOEN: COMPONENT XZ CARD NOT FOUND')
        ENDIF
        CALL LISTEN('PROPOEN',NPRIN,ITAPE)
        IF(WORDS(1).EQ.'COMPO'.AND.WORDS(2).EQ.'YZ') THEN
         NPOI1=NPOI2+1
         NPOI2=NPOI1
         PROPS(NPOI1)=PARAM(1)
         WRITE(LURES,811) PROPS(NPOI1)
         WRITE(LURES,899)
        ELSE
         CALL RUNEND('PROPOEN: COMPONENT YZ CARD NOT FOUND')
        ENDIF
       ENDIF
      ELSE
       CALL RUNEND('PROPOEN: SHEAR_MODULI CARD NOT FOUND')
      ENDIF
C
      NPOI1=NPOI2+1
      NPOI2=NPOI1
      PROPS(NPOI1)=1.0D+20                     ! infinity value for C^th
C
      PROPS(36)=32.0D0                         ! default: Von Mises
      PROPS(52)=32.0D0                         ! default: Von Mises
C
C**** LOOK FOR FREE ENERGY MODEL
C
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
      IF(WORDS(1).EQ.'FREE_') THEN
       NPOI1=NPOI2+1
       NPOI2=NPOI1
       PROPS(NPOI1)=PARAM(1)       ! ifren
       IFREN=INT(PROPS(NPOI1))
       IF(LARGE.EQ.0) THEN
        IF(IFREN.LE.0.OR.IFREN.GT.3)
     .   CALL RUNEND('ERROR: WRONG FREE ENERGY MODEL')
       ELSE
        IF(IFREN.LE.0.OR.IFREN.GT.10)
     .   CALL RUNEND('ERROR: WRONG FREE ENERGY MODEL')
       ENDIF
       WRITE(LURES,817) IFREN
       WRITE(LURES,899)
      ELSE                         ! defaults
       IF(LARGE.EQ.0) THEN
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=3.0           ! ifren
        IFREN=3
       ELSE
        NPOI1=NPOI2+1
        NPOI2=NPOI1
        PROPS(NPOI1)=2.0           ! ifren
        IFREN=2
       ENDIF
       WRITE(LURES,817) IFREN
       WRITE(LURES,899)
       GO TO 9
      ENDIF
C
C**** LOOK FOR 'END_MATERIAL' CARD
C
      NPRIN=0
      CALL LISTEN('PROPOEN',NPRIN,ITAPE)
    9 IF(WORDS(1).NE.'END_M')
     . CALL RUNEND('PROPOEN: END_MATERIAL CARD NOT FOUND   ')
      WRITE(LURES,899)
C
C**** CONTROLS DIMENSION OF PROPS
C
      IF(NPOI2.GT.NPROP) THEN
       WRITE(LURES,900) NPROP,NPOI2
       CALL RUNEND('PROPOEN: TOO MANY PROPERTIES TO READ')
      ENDIF
C
      RETURN
  801 FORMAT(/,'  CONSTANT DENSITY VALUE=',E15.6,/)
  802 FORMAT(E15.6,10X,E15.6)
  803 FORMAT(/,'  YOUNG MODULUS - COMPONENT XX =',E15.6,/)
  804 FORMAT(/,'  YOUNG MODULUS - COMPONENT YY =',E15.6,/)
  805 FORMAT(/,'  YOUNG MODULUS - COMPONENT ZZ =',E15.6,/)
  806 FORMAT(/,'  POISSON RATIO - COMPONENT XY =',E15.6,/)
  807 FORMAT(/,'  POISSON RATIO - COMPONENT XZ =',E15.6,/)
  808 FORMAT(/,'  POISSON RATIO - COMPONENT YZ =',E15.6,/)
  809 FORMAT(/,'  SHEAR MODULUS - COMPONENT XY =',E15.6,/)
  810 FORMAT(/,'  SHEAR MODULUS - COMPONENT XZ =',E15.6,/)
  811 FORMAT(/,'  SHEAR MODULUS - COMPONENT YZ =',E15.6,/)
  817 FORMAT(/,3X,'FREE ENERGY MODEL=',I5,/)
  899 FORMAT(/)
  900 FORMAT(//,'TOO MANY MATERIAL PROPERTIES TO READ:',/,
     .      20X,'NPROP =',I5,5X,'NUMBE =',I5,/)
      END
