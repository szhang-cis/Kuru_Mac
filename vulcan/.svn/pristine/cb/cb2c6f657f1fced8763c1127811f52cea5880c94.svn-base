      SUBROUTINE CHECKS(MATNOS,PROELS,PROPSS,
     .                  MATNOT,PROELT,PROPST)
C***********************************************************************
C
C**** THIS ROUTINE CHECKS MICROSTRUCTURAL & THERMAL PROPERTIES
C
C     to be improved !! (Sep./98)
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
      INCLUDE 'addi_omt.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
      INCLUDE 'nued_om.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'prob_oms.f'
C
C**** THERMAL VARIABLES
C
      INCLUDE 'auxl_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'prob_omt.f'
C
      DIMENSION MATNOS(NELEMS),        PROELS(NPRELS,NGRUPS),
     .          PROPSS(NPROPS,NMATSS)
      DIMENSION MATNOT(NELEMT),        PROELT(NPRELT,NGRUPT),
     .          PROPST(NPROPT,NMATST)
C
      IF(ICONVS.NE.ICONVT)
     . CALL RUNENDT('ICONVS NE ICONVT         ')



c      to be revised


C
C**** OPTIONS TO CHECK (ICHEK):
C
C     1: EQUAL ELEMENT & MATERIAL NUMBERING
C     2: EQUAL MATERIAL NUMBERING
C
c     ICHEK=2                     ! better as input
c     GO TO (1,2) ICHEK
C
C**** OPTION 1
C
c   1 CONTINUE
C
C**** LOOP OVER ELEMENTS
C
c     DO 1000 IELEM=1,NELEMC      ! solid elements
c     LGRUP=MATNO(IELEM)          ! set number
c     LMATS=INT(PROEL(1,LGRUP))   ! material number
c     LGRUPT=MATNOT(IELEM)
c     LMATST=INT(PROELT(1,LGRUPT))
C
c     IF(LGRUP.NE.LGRUPT)
c    . CALL RUNEND('ERROR: LGRUP NE LGRUPT')
c     IF(LMATS.NE.LMATST)
c    . CALL RUNMEN('WARNING: LMATS NE LMATST')
C
C**** OBTAINS MATERIAL PROPERTIES
C
c     CALL IDENPR(PROPS(1,LMATS))
c     CALL IDENPRT(PROPST(1,LMATST))
C
C**** CHECKS NUMBER OF PHASE CHANGES
C
c     IF(NPLAT.NE.NPLATM)
c    . CALL RUNEND('ERROR: NPLAT NE NPLATM     ')
C
c1000 CONTINUE
c     GO TO 100
C
C**** OPTION 2
C
c   2 CONTINUE
C
C**** LOOP OVER MATERIALS
C
c     NGRUX=NGRUP
c     IF(NGRUPT.LT.NGRUP) NGRUX=NGRUPT
c     DO 2000 IGRUP=1,NGRUX       ! sets
c     LMATS=INT(PROEL(1,IGRUP))   ! material number
c     LMATST=INT(PROELT(1,IGRUP))
C
c     IF(LMATS.NE.LMATST)
c    . CALL RUNMEN('WARNING: LMATS NE LMATST')
C
c     LTYPE=INT(PROEL(5,IGRUP))
c     LTYPET=INT(PROELT(5,IGRUP))
C
C**** SOLIDS ELEMENTS
C
c     IF(LTYPE.EQ.30.AND.LTYPET.EQ.5) THEN
C
C**** OBTAINS MATERIAL PROPERTIES
C
c      CALL IDENPR(PROPS(1,LMATS))
c      CALL IDENPRT(PROPST(1,LMATST))
C
C**** CHECKS NUMBER OF PHASE CHANGES
C
c      IF(NPLAT.NE.NPLATM)
c    .  CALL RUNEND('ERROR: NPLAT NE NPLATM     ')
C
C**** CHECKS FREE ENERGY MODELS
C
c      IF(IFREN.NE.IFRENT) THEN
c       IFRENT=IFREN
c       CALL RUNMENT('WARNING: FREE ENERGY MODEL GIVEN BY MECH. INPUT')
c      ENDIF
c     ENDIF
C
C**** CONTACT ELEMENTS
C
c     IF(LTYPE.EQ.4.OR.LTYPE.EQ.32.AND.LTYPET.EQ.104) THEN
C
C**** OBTAINS MATERIAL PROPERTIES
C
c      CALL IDENPHT(PROPST(1,LMATST),    1)
C
C**** TRANSFERS NORMAL STIFFNESS FROM PROPS TO PROPST
C
c      IF(NRADP.GT.0) THEN
c       INRIG=1+2*NRADH1+1+2*NRADH2+1+2*NRADU+1+2*NRADP+1
c       PROPST(INRIG,LMATST)=PROPS(2,LMATS)
c       IF(LTYPE.EQ.4) PROPST(INRIG+1,LMATST)=1.0
c       IF(LTYPE.EQ.32) PROPST(INRIG+1,LMATST)=2.0
c      ENDIF
c     ENDIF
C
c2000 CONTINUE
c     GO TO 100
C
c 100 CONTINUE
C
C**** OTHER CHECK
C
c     IF(NFURES.NE.NFURESM) THEN
c      CALL RUNMEN('WARNING: NFURES =/ NFURESM')
c      CALL RUNMENT('WARNING: NFURES =/ NFURESM')
c     ENDIF
c     INIAUX=0
c     INIAUXT=0
c     IF(INITI.EQ.2) INIAUX=1
c     IF(INITIT.EQ.2) INIAUXT=1
c     IF(INIAUX.NE.INIAUXT)
c    . CALL RUNEND('ERROR: MECH. OR THER. PREVIOUS RESULTS ARE LACKING')
C
C**** CHECKS NUMBER OF NODES PER ELEMENT (THERMAL & MECHANICAL DATA)
C
C
C     Notes:
C
C     NPOINC must be the same in the thermal & mechanical data files
C
C     NNODET corresponds to linear or n_dime-linear elements and NNODE
C     is transformed to n_dime-quadratic elements
C
C     Toblerones should be implemented
C
C
C**** LOOP OVER ELEMENTS
C
c     DO 1001 IELEM=1,NELEMC      ! solid elements
c     LGRUP=MATNO(IELEM)          ! set number
c     LMATS=INT(PROEL(1,LGRUP))   ! material number
c     NNODL=INT(PROEL(2,LGRUP))   ! element node number
c     NGAUL=INT(PROEL(4,LGRUP))   ! Gauss point number
c     LGRUPT=MATNOT(IELEM)
c     LMATST=INT(PROELT(1,LGRUPT))
c     NNODLT=INT(PROELT(2,LGRUPT))
c     NGAULT=INT(PROELT(4,LGRUPT))
C
c     IF(NNODL.NE.NNODLT) THEN
c      INTERC=1
c      INERRO=0
C
C**** 1D
C
c      IF(NDIME.EQ.1) THEN
c       IF(NNODL.EQ.3.AND.NNODLT.EQ.2) INERRO=1
c      ENDIF
C
C**** 2D
C
c      IF(NDIME.EQ.2) THEN
c       IF(NNODL.EQ.6.AND.NNODLT.EQ.3) INERRO=1   ! triangles
c       IF(NNODL.EQ.7.AND.NNODLT.EQ.3) INERRO=1
c       IF(NNODL.EQ.8.AND.NNODLT.EQ.4) INERRO=1   ! quadrilaterals
c       IF(NNODL.EQ.9.AND.NNODLT.EQ.4) INERRO=1
c      ENDIF
C
C**** 3D
C
c      IF(NDIME.EQ.3) THEN
c       IF(NNODL.EQ.10.AND.NNODLT.EQ.4) INERRO=1  ! tetrahedra
c       IF(NNODL.EQ.15.AND.NNODLT.EQ.6) INERRO=0  ! toblerones
c       IF(NNODL.EQ.20.AND.NNODLT.EQ.8) INERRO=1  ! bricks
c       IF(NNODL.EQ.27.AND.NNODLT.EQ.8) INERRO=1
c      ENDIF
C
c      IF(INERRO.EQ.0) CALL RUNEND('CHECKP: WRONG NNODE OR NNODET')
C
c     ENDIF
C
c     IF(NGAUL.NE.NGAULT) THEN
c      IF(NITERC.EQ.1.OR.NITERC.EQ.4)
c    .  CALL RUNEND('CHECKP: WRONG NUMBER OF GAUSS POINTS FOR NITERC=1')
c     ENDIF
C
c1001 CONTINUE
C
      RETURN
      END
