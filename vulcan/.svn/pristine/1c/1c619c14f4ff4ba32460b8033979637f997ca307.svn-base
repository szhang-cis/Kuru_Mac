      SUBROUTINE FROELI(DISIT,ELOAD,EQRHS,EQUAT,GLOAD,GSTIF,IDSK2,
     .                  IDSK3,IELEM,IFFIX,KELVA,KFRON,KPORE,KRESL,
     .                  NDOFN,NELEM,NEVAB,NNODE,LOCEL,NACVA,NAMEV,
     .                  NBUFA,NBUFE,NDEST,NFRON,NPIVO,NREC2,NREC3,
     .                  NSTIF,KSYMM,EQCOL,NPOIC,IAUGM,KNDEX)
C***********************************************************************
C
C**** THIS ROUTINE UNDERTAKES EQUATION SOLUTION BY THE FRONTAL
C     METHOD
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMMON/LOGUN/LUDTS,LUSOL,LUFRO,LUFRH,LUDAT,LUPRI,LURES,
     .             LUSO2,LUFR2,LUPOS,LURST,LUBFG,LUPIP,LUPAN,LUINF,
     .             LUGEO,LUSET,LUMAT,LUINI,LULOA,LUFIX,LUIN1,
     .             LUTUN,LUCON,LUACT,LUFAN,
     .             LUCU1,LUCU2,LUCU3,LUCU4,LUCU5,LUCU6,LUCU7,
     .             LUCU8,LUCU9,LUC10
C
      DIMENSION DISIT(*),     ELOAD(*),           IFFIX(*)
      DIMENSION EQRHS(NBUFA), EQUAT(NFRON,NBUFA),
     .          GLOAD(NFRON), GSTIF(NSTIF),       LOCEL(NEVAB),
     .          NACVA(NFRON), NAMEV(NBUFA),       NDEST(NEVAB),
     .          NPIVO(NBUFA), EQCOL(NFRON,NBUFA)
C
      CHARACTER*10 PEPE
C
      NFUNC(I,J)=(J*J-J)/2+I
      NFUNB(I,J)=(J-1)*NFRON+I
C
      DO 1000 IEVAB=1,NEVAB
      NIKNO=-LOCEL(IEVAB)
      IF(NIKNO.LE.0)GOTO 1000
C
C**** FIND POSITIONS OF VARIABLES READY FOR ELIMINATION
C
      DO 1500 IFRON=1,KFRON
      IF(NACVA(IFRON).NE.NIKNO)GOTO 1500
      NBUFE=NBUFE+1
C
C**** WRITE EQUATIONS TO DISC OR TO TAPE
C
      IF(NBUFE.GT.NBUFA)THEN
       NBUFE=1
C
       IF(KRESL.EQ.1)THEN
        NREC2=NREC2+1
        IF(KSYMM.EQ.0) THEN
         WRITE(IDSK2,REC=NREC2) EQUAT,EQCOL,EQRHS,NPIVO,NAMEV
        ELSE
         WRITE(IDSK2,REC=NREC2) EQUAT,EQRHS,NPIVO,NAMEV
        ENDIF
       ELSE                   ! kresl.ne.1
        NREC2=NREC2+1
        NREC3=NREC3+1
        WRITE(IDSK3,REC=NREC3) EQRHS
        IF(KSYMM.EQ.0) THEN
         READ (IDSK2,REC=NREC2) EQUAT,EQCOL,EQRHS,NPIVO,NAMEV
        ELSE
         READ (IDSK2,REC=NREC2) EQUAT,EQRHS,NPIVO,NAMEV
        ENDIF
       ENDIF
C
      ENDIF
C
C**** EXTRACT THE COEFFICIENTS OF THE NEW EQUATION FOR ELIMINATION
C
      IF(KRESL.EQ.1)THEN
       DO 10 JFRON=1,NFRON
C
       IF(KSYMM.EQ.0) THEN      ! unsymmetric case
        NLOCA=NFUNB(IFRON,JFRON)
        EQCOL(JFRON,NBUFE)=GSTIF(NLOCA)
        IF(JFRON.NE.IFRON) GSTIF(NLOCA)=0.0
        NLOCA=NFUNB(JFRON,IFRON)
       ELSE                     ! symmetric case
        IF(IFRON.LT.JFRON) NLOCA=NFUNC(IFRON,JFRON)
        IF(IFRON.GE.JFRON) NLOCA=NFUNC(JFRON,IFRON)
       ENDIF
C
       EQUAT(JFRON,NBUFE)=GSTIF(NLOCA)
       GSTIF(NLOCA)=0.0
   10  CONTINUE
C
C**** DEAL WITH PIVOT
C
       PIVOT=EQUAT(IFRON,NBUFE)
       IF(PIVOT.LE.0.) THEN
        IMODU=MOD(IEVAB,NDOFN)
C
        IF(KPORE.NE.2.OR.IMODU.NE.0.OR.PIVOT.EQ.0.) THEN
         IF(KNDEX.EQ.0) THEN            ! only print for active elements
          IF(NPOIC.EQ.0) THEN
           WRITE(LURES,900) NIKNO,PIVOT
ctm        CALL RUNEND('NEGATIVE PIVOT IN FRONT            ')
           CALL RUNMEN('NEGATIVE PIVOT IN FRONT ------------------------
     .--------------------------------')
          ELSE     
           IF(IAUGM.NE.0.AND.IAUGM.NE.1) THEN
            WRITE(LURES,900) NIKNO,PIVOT
ctm         CALL RUNEND('NEGATIVE PIVOT IN FRONT            ')
            CALL RUNMEN('NEGATIVE PIVOT IN FRONT -----------------------
     .---------------------------------')
           ENDIF
          ENDIF
         ENDIF
        ENDIF
C
       ENDIF
C
      ENDIF
C
C**** AND EXTRACT THE CORRESPONDING RIGHT HAND SIDES
C
      EQRHS(NBUFE)=GLOAD(IFRON)+ELOAD(NIKNO)  ! MODIFIED FOR ELOAD ARRAY
      GLOAD(IFRON)=0.0
      KELVA=KELVA+1
      NAMEV(NBUFE)=NIKNO
      NPIVO(NBUFE)=IFRON
C
C**** ENQUIRE WHETHER PRESENT VARIABLE IS FREE OR PRESCRIBED
C
      PIVOT=EQUAT(IFRON,NBUFE)
      EQUAT(IFRON,NBUFE)=0.0
      IF(KSYMM.EQ.0) EQCOL(IFRON,NBUFE)=0.0
C
      IF(IFFIX(NIKNO).NE.0)THEN      ! DEAL WITH A PRESCRIBED DEFLECTION
       DO 20 JFRON=1,KFRON
C
       IF(KSYMM.EQ.0) THEN           ! unsymmetric case
        CUREQ=EQCOL(JFRON,NBUFE)
       ELSE                          ! symmetric case
        CUREQ=EQUAT(JFRON,NBUFE)
       ENDIF
C
  20   GLOAD(JFRON)=GLOAD(JFRON)-DISIT(NIKNO)*CUREQ
C
      ELSE                           ! ELIMINATE A FREE VARIABLE
C
C---- DEAL WITH THE RIGHT HAND SIDE FIRST
C
       DO 30 JFRON=1,KFRON
C
       IF(KSYMM.EQ.0) THEN           ! unsymmetric case
        CUREQ=EQCOL(JFRON,NBUFE)/PIVOT
       ELSE                          ! symmetric case
        CUREQ=EQUAT(JFRON,NBUFE)/PIVOT
       ENDIF
C
       GLOAD(JFRON)=GLOAD(JFRON)-CUREQ*EQRHS(NBUFE)
C
C---- NOW DEAL WITH THE COEFFICIENTS IN CORE
C
       IF(KRESL.EQ.1.AND.EQUAT(JFRON,NBUFE).NE.0.0)THEN
C
        IF(KSYMM.EQ.0) THEN          ! unsymmetric case
         ILIMM=KFRON
         NLOCA=NFUNB(0,JFRON)
        ELSE                         ! symmetric case
         ILIMM=JFRON
         NLOCA=NFUNC(0,JFRON)
        ENDIF
C
        DO 40 LFRON=1,ILIMM
        NGASH=LFRON+NLOCA
   40   GSTIF(NGASH)=GSTIF(NGASH)-CUREQ*EQUAT(LFRON,NBUFE)
       ENDIF
C
   30  CONTINUE
      ENDIF      
C
      EQUAT(IFRON,NBUFE)=PIVOT
      IF(KSYMM.EQ.0) EQCOL(IFRON,NBUFE)=PIVOT
C
C**** RECORD THE NEW VACANT SPACE, AND REDUCE FRONTWIDTH IF POSSIBLE
C
      NACVA(IFRON)=0
      GOTO 100
 1500 CONTINUE
C
C**** COMPLETE THE ELEMENT LOOP IN THE FORWARD ELIMINATION
C
  100 IF(NACVA(KFRON).NE.0)GOTO 1000
      KFRON=KFRON-1
      IF(KFRON.GT.0)GOTO 100
C
 1000 CONTINUE
C
      IF(NBUFA.LE.(NELEM*NFRON)) THEN    ! improving .sol ????
C
       IF(IELEM.EQ.NELEM.AND.KRESL.EQ.1)THEN
        NREC2=NREC2+1
        IF(KSYMM.EQ.0) THEN
         WRITE(IDSK2,REC=NREC2) EQUAT,EQCOL,EQRHS,NPIVO,NAMEV
        ELSE
         WRITE(IDSK2,REC=NREC2) EQUAT,EQRHS,NPIVO,NAMEV
        ENDIF
       ENDIF
C
      ENDIF
C
      RETURN
  900 FORMAT(3X,'NEGATIVE OR ZERO PIVOT ENCOUNTERED FOR VARIABLE NO.',
     .           I4,'  OF VALUE ',E17.6)
      END
