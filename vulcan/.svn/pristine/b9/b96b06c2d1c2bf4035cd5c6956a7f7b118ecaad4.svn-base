      SUBROUTINE SETM05T(CARTDT,DVOLUT,ELCODT,EMASST,GPCODT,LNODST,
     .                   PROPST,SHAPET,THICKT,
     .                   DERIVT,POSGPT,WEIGPT,XJACMT,ITASKT)
C***********************************************************************
C
C**** THIS ROUTINE SETS UP SOME NEEDED CONSTANT MATRICES FOR
C     FUTURE USE ( ELEMENT NO. 5 )
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** THERMAL VARIABLES
C
      INCLUDE 'prob_omt.f'
      INCLUDE 'inte_omt.f'
      INCLUDE 'auxl_omt.f'
C
      COMMON/JACOBSTA/IERORT,KERORT
C
      DIMENSION CARTDT(NDIMET,NNODST,*), DVOLUT(*),
     .          ELCODT(NDIMET,*),        GPCODT(NDIMET,*),
     .          LNODST(*),               PROPST(*),
     .          SHAPET(NNODST,*),        EMASST(*)
      DIMENSION DERIVT(NDIMET,NNODST,*), POSGPT(NDIMET,*),
     .          WEIGPT(*),               XJACMT(NDIMET,*)
C      
      TWOPIT=6.283185307179586
C
C**** INITIALIZATION
C
      DO IDIMET=1,NDIMET
       DO IGAUST=1,NGAUST
        GPCODT(IDIMET,IGAUST)=0.0D0
       ENDDO
      ENDDO
      DO IGAUST=1,NGAUST
       WEIGPT(IGAUST)=0.0D0
      ENDDO
C
C**** IDENTIFY SAMPLING POINTS AND WEIGHTS
C
      CALL RULEPW(NDIMET,NGAULT,NRULET,POSGPT,WEIGPT)
C
C**** LOOP ON INTEGRATION POINTS
C
      DO 100 IGAUST=1,NGAULT
C
C**** COMPUTE SHAPE FUNCTIONS AND DERIVATIVES
C
      EXISPT=POSGPT(1,IGAUST)
      ETASPT=0.0D0
      IF(NDIMET.GE.2) ETASPT=POSGPT(2,IGAUST)
      EZETAT=0.0
      IF(NDIMET.EQ.3) EZETAT=POSGPT(3,IGAUST)
      CALL SHAFUN(DERIVT(1,1,IGAUST),EXISPT,ETASPT,EZETAT,NDIMET,NNODST,
     .            NQUTRT,     0,SHAPET(1,IGAUST))
C
C**** CARTESIAN DERIVATIVES OF THE SHAPE FUNCTIONS
C
      CALL JACOBST(CARTDT(1,1,IGAUST), DERIVT(1,1,IGAUST), DETJMT,
     .             ELCODT,             GPCODT(1,IGAUST),   IELEMT,
     .             NDIMET,NNODST,      SHAPET(1,IGAUST),   XJACMT,
     .             LUREST,LUPRIT)
      IF(IERORT.NE.0) GO TO 101
C
C**** MAKE A CONTROL ON THE CORRECTNESS OF THE SHAPE FUNCTION AND THEIR
C     DERIV.
C
      ICHEKT=0
      IF(ICHEKT.EQ.1)CALL TESTM2(CARTDT(1,1,IGAUST),DERIVT(1,1,IGAUST),
     .                           SHAPET(1,  IGAUST),IGAUST,NDIMET,
     .                           NNODST)
C
C**** INTEGRATION WEIGHTS
C
                         DVOLUT(IGAUST)=WEIGPT(IGAUST)*DETJMT
      IF(NTYPET.EQ.3)    DVOLUT(IGAUST)=DVOLUT(IGAUST)*TWOPIT*
     .                                  GPCODT(1,IGAUST)
                         DVOLUT(IGAUST)=DVOLUT(IGAUST)*THICKT
C
  100 CONTINUE
C
C**** CHECKS GAUSSIAN VOLUME FOR AXISYMMETRIC PROBLEMS FOR OUTPUT OPER.
C
      IF(NTYPET.EQ.3) THEN
       CALL GAUCEK(DVOLUT,     5,ITASKT,NGAULT,NNODLT,ICEKET)
       IF(ICEKET.NE.0) CALL RUNENDT('ERROR: WRONG NGAUS IN gaucek.f-5')
      ENDIF
C
C**** COMPUTE MASS MATRIX TO PERFORM SMOOTHING OF GAUSSIAN TENSORS
C
      IF(KSGAUT.NE.0) THEN
       CALL SMOMTXT(ELCODT,DVOLUT,SHAPET,EMASST,GPCODT)
      ENDIF
C
  101 CONTINUE
      RETURN
      END
