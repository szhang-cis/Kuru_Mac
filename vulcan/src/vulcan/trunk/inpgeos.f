      SUBROUTINE INPGEOS(COORDS,ELDATS,INTERS,ITAPES,LNODSS,MATNOS,
     .                   PROELS,IBOEMS)
C***********************************************************************
C
C**** THIS ROUTINE READS THE GEOMETRICAL DATA
C
C     Notes: DINT is used to avoid problems in challenge machines
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_oms.f'
C
C**** MICROSTRUCTURAL VARIABLES
C
      INCLUDE 'prob_oms.f'
      INCLUDE 'inte_oms.f'
      INCLUDE 'auxl_oms.f'
      INCLUDE 'inpo_oms.f'
C
      DIMENSION ELDATS(*), COORDS(NDIMES,*), LNODSS(NNODES,*),
     .          MATNOS(*), PROELS(NPRELS,*)
C
C**** DEFINES MEMORY POINTERS
C
      CALL MEMODTS
C
      IF(IBOEMS.EQ.0) THEN
C
c      IERR1S=1
c      IF(ITAPES.NE.LUDATS.AND.ITAPES.NE.LUGEOS) GOTO 1000
c      IF(ITAPES.EQ.LUGEOS) THEN       ! external .geo file
c       OPEN(UNIT=LUGEOS,FILE=CA1S,STATUS='OLD',ERR=1000)
c       IERR1S=0
C
c1000   IF(IERR1S.NE.0) THEN
c        IF(IERR1S.EQ.1) WRITE(LURESS,901)
c        CALL RUNENDS('ERROR IN OPENING FILE         ')
c       ENDIF
c      ENDIF     ! itapes.eq.lugeos
C
C**** READ THE ELEMENT NODAL CONNECTIONS AND THE PROPERTY NUMBERS
C
       WRITE(LURESS,900)
C
C**** ISTAN DEFINES: =0 standard reading; =1 improved reading
C
       ISTAN=1
C
       NLINES=(NNODES-1)/10+1
       DO 10 IELEMS=1,NELEMS
C
C**** STANDARD READING (ISTAN=0)
C
        IF(ISTAN.EQ.0) THEN
         READ(ITAPES,905) NUMELS,MATNOS(NUMELS),
     .                   (LNODSS(INODES,NUMELS),INODES=1,NNODES)
        ELSE
C
C**** IMPROVED READING (ISTAN=1; reading with listens.f)
C
         NPRINS=1
         CALL LISTENS('INPGEOS',NPRINS,ITAPES)
         NUMELS=DINT(PARAMS(1))
         MATNOS(NUMELS)=INT(PARAMS(2))
         DO INODES=1,NNODES
          LNODSS(INODES,NUMELS)=INT(PARAMS(2+INODES))
         ENDDO
        ENDIF    ! istan.eq.0
C
C**** WRITE THE ELEMENT NODAL CONECTION AND PROPERTY NUMBERS
C
       WRITE(LURESS,910) NUMELS,MATNOS(NUMELS),
     .                  (LNODSS(INODES,NUMELS),INODES=1,NNODES)
   10  CONTINUE
C
C**** ZERO ALL THE NODAL COORDINATES AND THEN READ SOME OF THEM
C        
C$DIR SCALAR
       DO IDIMES=1,NDIMES
        DO IPOINS=1,NPOINS
         COORDS(IDIMES,IPOINS)=0.0
        ENDDO
       ENDDO
C
C**** STANDARD READING (ISTAN=0)
C
       IF(ISTAN.EQ.0) THEN  ! to be improved (infinite loop!)
   32   READ(ITAPES,915,ERR=32) 
     .       IPOINS,(COORDS(IDIMES,IPOINS),IDIMES=1,NDIMES)
        IF(IPOINS.NE.NPOINS) GOTO 32
C
C**** IMPROVED READING (ISTAN=1)
C
       ELSE
        DO IPOI1S=1,NPOINS
         CALL LISTENS('INPGEOS',NPRINS,ITAPES)
         IPOINS=INT(PARAMS(1))
         DO IDIMES=1,NDIMES
          COORDS(IDIMES,IPOINS)=PARAMS(IDIMES+1)
         ENDDO
        ENDDO
       ENDIF        ! istan.eq.0
C
C**** LOOP ON ELEMENTS
C
       DO 100 IELEMS=1,NELEMS
       LGRUPS=MATNOS(IELEMS)
C
C**** STORE NUMBER OF NODES PER ELEMENT
C
       NNODLS=0
       DO 40 INODES=1,NNODES
       IPOINS=LNODSS(INODES,IELEMS)
  40   IF(IPOINS.NE.0) NNODLS=NNODLS+1
       PROELS(2,LGRUPS)=FLOAT(NNODLS)
C
C**** INTERPOLATE MID-SIDE NODES IF NECESSARY
C
       IF(INTERS.EQ.1) THEN
        IF(NDIMES.EQ.1) THEN
         CALL NODES1(COORDS,LNODSS(1,IELEMS),NDIMES,IELEMS,
     .               NNODLS)
        ELSE IF(NDIMES.EQ.2.OR.KPROBS.EQ.2) THEN
         CALL NODES2(COORDS,LNODSS(1,IELEMS),NDIMES,IELEMS,
     .               NNODLS)
        ELSE IF(NDIMES.EQ.3) THEN
         CALL NODES3(COORDS,LNODSS(1,IELEMS),NDIMES,IELEMS,
     .               NNODLS)
        ENDIF
       ENDIF
C
  100  CONTINUE                 ! END LOOP ON ELEMENTS
C
       IF(NMEMO1S.EQ.0) THEN     ! coordinates in an elemental array
C
C**** STORE ELEMENT COORDINATES IN DATA-BASE
C
        DO IELEMS=1,NELEMS
         LGRUPS=MATNOS(IELEMS)
         NNODLS=INT(PROELS(2,LGRUPS))
          CALL GATHER(COORDS,NDIMES,NPOINS,ELDATS(IDATAS(1)),NDIMES,
     .                NNODLS,LNODSS(1,IELEMS))
          CALL DATBASS(ELDATS,    1,    1)
        ENDDO
       ENDIF
C
C**** PRINTOUT NODAL COORDINATES 
C
       IF(NDIMES.EQ.2) THEN 
        WRITE(LURESS,950)
        WRITE(LURESS,971)
     .   (IPOINS,(COORDS(IDIMES,IPOINS),IDIMES=1,NDIMES),
     .    IPOINS=1,NPOINS)
       ELSE IF(NDIMES.EQ.3) THEN
        IF(KPROBS.NE.2) THEN                 ! not shells
         WRITE(LURESS,960)
         WRITE(LURESS,970)(IPOINS,(COORDS(IDIMES,IPOINS),IDIMES=1,
     .                     NDIMES),IPOINS=1,NPOINS)
        ELSE
          WRITE(LURESS,980)
          WRITE(LURESS,970)(IPOINS,(COORDS(IDIMES,IPOINS),
     .                      IDIMES=1,NDIMES),
     .                     (COORDS(IDIMES,IPOINS+NPOINS),
     .                      IDIMES=1,NDIMES),IPOINS=1,NPOINS)
        ENDIF
       ENDIF
C
       WRITE(LURESS,902)
C
C**** LOOK FOR 'END_GEOMETRY' CARD
C
       NPRINS=0
       JTAPES=LUDATS
       CALL LISTENS('INPGEOS',NPRINS,JTAPES)
       IF(WORDSS(1).NE.'END_G')
     .  CALL RUNENDS('INPGEOS:END_GEOMETRY CARD NOT FOUND')
       WRITE(LURESS,902)
C
      ELSE              ! iboems=1
C
C**** CHECK THE INPUT DATA
C
       CALL INPCEKS(COORDS,LNODSS,MATNOS,NDIMES,NELEMS,NMATSS,NNODES,
     .              NPOINS,proels,nprels,ngrups)
C
      ENDIF             ! iboems.eq.0
C
      RETURN
C
  900 FORMAT(//2X,8H ELEMENT,5X,5HGROUP,6X,12HNODE NUMBERS)
  901 FORMAT(' ERROR IN OPENING GEOMETRY INPUT FILE 240 (50 LINUX)')
  902 FORMAT(/)
  905 FORMAT(12I5/10(10X,10I5))
  910 FORMAT(5X,I7,5X,I5,6X,10I6/10(26X,10I6))
  915 FORMAT(I5,6F15.6)
  950 FORMAT(//3(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD))
  960 FORMAT(//3(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD,2X,8H Z-COORD))
  970 FORMAT(3(5X,I6,3F10.3))
  971 FORMAT(3(5X,I6,2F10.3))
  980 FORMAT(//(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD,2X,8H Z-COORD,
     .                      2X,8H  ALFA-1,2X,8H  ALFA-2,2X,8H  ALFA-3))
c 990 FORMAT(5X,I5,6F10.3)
      END
