      SUBROUTINE INTLOD(ELDAT,ELPRE,ELVAR,ELMAT,HTLOD,IFFIX,PRESC,
     .                  LNODS,MATNO,PROEL,PROPS,RLOAD,RLOAH,INFRI,
     .                  COFRI,COORD,LACTI,DISTO,NOPRF,PREHF,VANIS,
     .                  WORK1)
C***********************************************************************
C
C**** THIS SUBROUTINE SETS UP THE TYPE OF ALGORITHM AND REFERENCE LOAD
C     TO BE USED IN THE CURRENT TIME INTERVAL
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      COMMON/LDFILE/ITAPE
      COMMON/ERRORS/NEROR,NEROB,NEROT,NEROI
C
      DIMENSION MATNO(NELEM),         LNODS(NNODE,NELEM),
     .          PROEL(NPREL,NGRUP),   PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),         ELPRE(NPREV),
     .          ELVAR(NSTAT),         ELMAT(NMATX),
     .          WORK1(*)
      DIMENSION HTLOD(NHLOD,NSUBF,*), IFFIX(NTOTV,*),  
     .          RLOAD(NTOTV)
      DIMENSION INFRI(*),             COFRI(NSKEW,NDIME,*)
      DIMENSION PRESC(NTOTV,2),       RLOAH(NTOTV,NFUNC)
      DIMENSION COORD(NDIME,NPOIN),   LACTI(NELEM),
     .          DISTO(*)
      DIMENSION NOPRF(NNODE,NELEM),   PREHF(NNODE,NDIME,NELEM,NFUNC),
     .          VANIS(NANIV,NANIC,NELEM)
C
      PARAMETER   (MCOMM=9)
      CHARACTER*5 COMMD(MCOMM)
      DATA COMMD/'LOAD', 'BOUND','ACTIV','STRAT','FUNCT','TUNIN',
     .           'PROPE','FATIG','END_I'/
C
      NEWLO=-1
      NEWBO=-1
      NEWST=-1
      NEWFU=-1
      NEWAC=-1
      IF(IREST.EQ.1) THEN
       NEWLO=0
       NEWBO=0
      ENDIF
C
C**** LOOK FOR INTERVAL CARD KEY WORD WHICH DEFINES IF NEW LOAD
C     OR/AND NEW INTERVAL DATA HAS TO BE READ
C
  100 NPRIN=0
      ITAPE=LUDAT
      CALL LISTEN('INTLOD',NPRIN,ITAPE)
C
      DO ICOMM=1,MCOMM
       IF(WORDS(1).EQ.COMMD(ICOMM)) GO TO 20
      END DO
      GO TO 1000
C
   20 GO TO (1,2,3,4,5,6,7,8,9),ICOMM
C
C**** IF REQUIRED SET UP NEW REFERENCE LOAD
C
    1 NEWLO=0
      IF(WORDS(2).EQ.'NEW_L') NEWLO=1
      IF(NACTI.EQ.1) THEN
       IF(NEWAC.EQ.1) THEN
        IF(ISUVOAC.EQ.1) THEN
         IF(NEWLO.EQ.0)
     .    CALL RUNMEN('WARNING: SURFACE OR GRAVITY SHOULD BE REDEFINED')
        ENDIF
       ENDIF
      ENDIF
      IF(NEWLO.EQ.1) THEN
       IF(PARAM(1).NE.0.) ITAPE=INT(PARAM(1))
       CALL LOADPS(ELDAT,ELPRE,ELVAR,ELMAT,
     .             LNODS,MATNO,PROEL,PROPS,RLOAD,RLOAH,COORD,
     .             LACTI,NOPRF,PREHF,WORK1(ILOSU(1)))
C
       NPRIN=0
       IF(ITAPE.NE.LUDAT) THEN
        ITAPE=LUDAT
        CALL LISTEN('INTLOD',NPRIN,ITAPE)
       ENDIF
       IF(WORDS(1).EQ.'END_L') GO TO 100
       WRITE(LURES,909)
       CALL RUNEND('ERROR: RUN STOPPED FOR LOAD INPUT')
      ENDIF                  ! newlo.eq.1
C
      GOTO 100
C
C**** IF REQUIRED SET UP NEW BOUNDARY CONDITION
C
    2 NEWBO=0
      IF(WORDS(2).EQ.'NEW_B') NEWBO=1
      IF(NEWBO.EQ.1) THEN
       IF(PARAM(1).NE.0.) ITAPE=INT(PARAM(1))
       CALL FIXITY(IFFIX,LNODS,PRESC,WORK1(ILOSU(15)),
     .             ELDAT,MATNO,PROEL,INFRI,COFRI,
     .             WORK1(ILOSU(36)),WORK1(ILOSU( 1)))
C
       NPRIN=0
       ITAPE=LUDAT
       CALL LISTEN('INTLOD',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'END_B') GO TO 100
       WRITE(LURES,910)
       CALL RUNEND('RUN STOPPED FOR INPUT ERROR        ')
      ENDIF
C
      GOTO 100
C
C**** IF REQUIRED SET UP ACTIVE ELEMENTS
C
    3 NEWAC=0
      IF(NACTI.EQ.0)
     . CALL RUNEND('ERROR: ACTIVE CARD MUST BE INPUT IN PROBLEM_DATA')
      IF(WORDS(2).EQ.'NEW_A') NEWAC=1
      IF(NEWBO.EQ.-1)                           ! control (see active.f)
     . CALL RUNEND('ERROR: BOUNDARY DATA BEFORE ACTIVE DATA')
      IF(NEWAC.EQ.1) THEN
       IF(PARAM(1).NE.0.) ITAPE=INT(PARAM(1))
       CALL ACTIVE(LACTI,IFFIX,LNODS,DISTO)
C
       NPRIN=0
       ITAPE=LUDAT
       CALL LISTEN('INTLOD',NPRIN,ITAPE)
       IF(WORDS(1).EQ.'END_A') GO TO 100
       WRITE(LURES,912)
       CALL RUNEND('RUN STOPPED FOR INPUT ERROR        ')
      ENDIF                    ! newac.eq.1
C
      GOTO 100
C
C**** IF NECESSARY SET UP NEW SOLUTION STRATEGY
C
    4 NEWST=0
      IF(WORDS(2).EQ.'NEW_S') NEWST=1
      IF(NEWST.EQ.1) CALL STRATE
C
      GO TO 100
C
C**** IF REQUIRED SET UP NEW FUNCTION
C
    5 NEWFU=0
      IF(WORDS(2).EQ.'NEW_F') NEWFU=1
      IF(NEWFU.EQ.1) CALL INTFUN(HTLOD)
C
      GO TO 100
C
C**** IF REQUIRED SET UP TUNING PARAMETERS (at INTERVAL_DATA level)
C
    6 NEWTU=0
      IF(WORDS(2).EQ.'NEW_T') NEWTU=1
      IF(NEWTU.EQ.1) CALL INPTUN(ITAPE,PROEL)
C
      GO TO 100
C
C**** IF REQUIRED SET UP NEW MAT. PROPERTIES (at INTERVAL_DATA level)
C
    7 NEWPR=0
      IF(WORDS(2).EQ.'NEW_P') NEWPR=1
      IF(NEWPR.EQ.1) THEN
       ITAPE=LUDAT
       IF(PARAM(1).NE.0.0) ITAPE=INT(PARAM(1))
       CALL INPPRO(ITAPE,PROPS,VANIS,MATNO,PROEL,COORD,LNODS,    1)
       CALL POINTE
      ENDIF
C
      GO TO 100
C
C**** IF REQUIRED SET UP NEW FATIGUE PARAMETERS
C
    8 NEWFA=0
      IF(WORDS(2).EQ.'NEW_F') NEWFA=1
      IF(NEWFA.EQ.1) THEN
       ITAPE=LUDAT
c      IF(PARAM(1).NE.0.0) ITAPE=INT(PARAM(1))
       IF(PARAM(1).NE.0.0) call runend('itape must be ludat')
       CALL INPFAT(ITAPE,PROEL)
      ENDIF
C
      GO TO 100
C
C**** CHECK THE CORRECTNESS OF THE INPUT
C
    9 CONTINUE
C
      IF(IREST.EQ.0) THEN
       IF(NEWFU.EQ.-1.OR.NEWLO.EQ.-1.OR.NEWBO.EQ.-1.OR.
     .  NEWST.EQ.-1) THEN
        WRITE(LURES,915)
        GO TO 1001
       ENDIF
C
ctm
ctm  esto no es cierto en un problema acoplado (por el problema de
ctm  inicializacion del problema mecanico)
ctm
ctm        IF(ITIME.EQ.1.AND.(NEWLO.EQ.0.OR.NEWBO.EQ.0.OR.
ctm     .     NEWST.EQ.0))THEN
ctm         WRITE(LURES,920)
ctm         GO TO 1001
ctm        ENDIF
C
       IF(NACTI.EQ.1.AND.NEWAC.EQ.-1) THEN
        WRITE(LUREST,931)
        GO TO 1001
       ENDIF
      ENDIF            ! irest.eq.0
C
      IF(IREST.EQ.1.AND.ISKIP.EQ.1.AND.NEWST.EQ.-1)
     . WRITE(LURES,925)
C
      IF(NEWTU.EQ.1) THEN
C
C**** LOOP ON ELEMENTS
C
       NEROR=0
       NEROB=0
       NEROT=0
       NEROI=0
C
       DO IELEM=1,NELEM
        LGRUP=MATNO(IELEM)
        LMATS=INT(PROEL(1,LGRUP))
C
C**** CHECK ON INTEGRATION RULES
C
        CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .              WORK1,WORK1,WORK1,WORK1,WORK1,
     .              ELDAT,ELPRE,ELVAR,ELMAT,WORK1,    9)
C
       END DO                    ! END LOOP ON ELEMENTS
C
       IF(NEROR.NE.0)
     .  CALL RUNEND('INPDAT: ERROR IN INTEGRATION RULE  ')
       IF(NEROB.NE.0)
     .  CALL RUNEND('INPDAT: ERROR IN INDEX KPARB       ')
       IF(ITERME.GE.0) THEN
        IF(NEROT.NE.0)
     .   CALL RUNMEN('INPDAT: WARNING IN INDEX KPART     ')
       ENDIF
       IF(NEROI.NE.0)
     .  CALL RUNMEN('INPDAT: WARNING IN INDEX KPARI     ')
      ENDIF                      ! newtu.eq.1
C
      RETURN
C
 1000 CALL RUNEND('INTLOD:ERROR IN INTERVAL DATA BLOCK')
 1001 CALL RUNEND('INTLOD:STOP FOR LACK OF INFORMATION')
C
  909 FORMAT(
     .'THE LIST OF LOADS DOES NOT END WITH AN        ',/,
     .'"END_LOAD_DATA" COMMAND CARD. VERIFY THE INPUT DATA.   .',/)
  910 FORMAT(
     .'THE LIST OF BOUNDARY CONDITIONS DOES NOT END WITH AN        ',/,
     .'"END_BOUNDARY_DATA" COMMAND CARD. VERIFY THE INPUT DATA.   .',/)
  912 FORMAT(
     .'THE LIST OF ACTIVE ELEMENTS DOES NOT END WITH AN        ',/,
     .'"END_ACTIVE_ELEMENTS_DATA" COMMAND CARD. VERIFY THE INPUT',/,
     .' DATA.   .',/)
  915 FORMAT(
     .'EACH INTERVAL DATA BLOCK MUST HAVE LOAD, BOUNDARY & STRATEGY ',/,
     .'COMMAND CARDS EVEN IF YOU WANT TO KEEP THE SAME DATA FOR ANY',/,
     .'OF THEM. IN THIS CASE JUST SPECIFY THE QUALIFIER AS "OLD".', /)
ctm  920 FORMAT(
ctm  .' THIS IS SUPPOSED TO BE A NEW RUN THEREFORE IT IS EXPECTED',   /,
ctm  .' TO CONTAIN DATA FOR THE INTERVAL TIME PARAMETERS, THE TYPE',  /,
ctm  .' OF LOAD AND/OR THE FIXITY CONDTIONS.',/)
  925 FORMAT(
     .'           * * * W A R N I N G * * *                        ',//,
     .'THIS IS SUPPOSED TO BE A RESTART TO COMPLETE THE INTERVAL   ',/,
     . I5,'FROM THE TIME ',E12.6,'. IN THIS CASE YOU MOST PROBABLY ',/,
     .'WANTED TO CHANGE THE SOLUTION STRATEGY BUT NO INFORMATION   ',/,
     .'ABOUT IT HAS BEEN GIVEN. CHECK YOUR DATA FILE IN THE RESTART',/,
     .'INTERVAL DATA .',/)
  931 FORMAT(
     .'ACTIVE ELEMENTS MUST BE INPUT FOR ACTIVE ELEMENTS PROBLEMS',/)
      END
