  SUBROUTINE cscf3a(lcseg,nhseg,ncnod,lcnod,xc,            &
                    issdb,rssdb,coors,coorm,disma,ffdis,   &
                    fcont,surtf,emass,indco,cprop,         &
                    dtime,nsegm,freq,                      &
                    cursl,curms,tn,cu,press,presn,         &
                    wear,wwear,wrink,mingp,cmpfr,          &
                    area,mtdof,sldof,td)
!SUBROUTINE cscf3a(                                        &
!                  cursl,curms,press,wear,wrink,cmpfr,     &
!                  ncnod,indco,nsegm,freq,mtdof,sldof,     &
!                  disma,ffdis,dtime,td,                   &
!                  lcseg,nhseg,lcnod,issdb,                &
!                  area,tn,cu,xc,rssdb,presn,wwear,mingp,  &
!                  coors,coorm,cprop,emass,                &
!                  fcont ,surtf)
 ! perform search for contact interface
 ! and compute contact forces for a given master/slave pair
 !
 USE gvar_db, ONLY : updiv
 IMPLICIT NONE
 !   Dummy arguments
 LOGICAL, INTENT(IN) :: cursl,curms,press,wear,wrink,cmpfr
 INTEGER (kind=4), INTENT(IN) :: ncnod,indco,nsegm,freq,   &
                   lcseg(:,:),nhseg(:,:),lcnod(:),mtdof,sldof
 INTEGER (kind=4), INTENT(IN OUT) :: issdb(:,:)
 REAL (kind=8), INTENT(IN) :: coors(:,:),coorm(:,:),emass(:,:),disma,  &
                          ffdis,dtime,cprop(:),xc(:,:),tn(:,:),cu(:,:),td
 REAL (kind=8), POINTER :: area(:),rssdb(:,:),presn(:),wwear(:),mingp(:)
 REAL (kind=8), INTENT(IN OUT) :: fcont(:,:),surtf(:)
 !INTEGER (kind=4), INTENT(IN) :: ncnod,indco,nsegm,freq,mtdof,sldof
 !REAL (kind=8), INTENT(IN) :: disma,ffdis,dtime,td
 !INTEGER (kind=4), POINTER ::  lcseg(:,:),nhseg(:,:),lcnod(:),issdb(:,:)
 !REAL (kind=8), POINTER :: area(:),tn(:,:),cu(:,:),xc(:,:),rssdb(:,:),presn(:),wwear(:),mingp(:)
 !REAL (kind=8), INTENT(IN) :: coors(:,:),coorm(:,:),cprop(:),emass(:,:)
 !REAL (kind=8), INTENT(IN OUT) :: fcont(:,:),surtf(:)

  !  local variables
  INTEGER (kind=4) :: icnod,np,ia,nearn,isn,nnp,n,node
  REAL (kind=8) :: prdat(6),eresf(3,0:3),lwear(0:3)

  DO icnod=1,ncnod

    !... step 1 ... look for the nearest segment

    isn   = lcnod(icnod)   ! global number of the current slave node
    nearn = issdb(1,icnod) ! previous nearest segment
    nnp   =-issdb(3,icnod) ! previous time of effective penetration

    IF( nearn < 0 )THEN           !If a search may be advisable
      nearn = -nearn                 !change sign
      IF(nearn > 1000000 )THEN        !proj. seems not necessary yet
        np = nearn / 1000000          !remaining steps until proj.
        ia = ffdis*np                   !updates remaining steps
        nearn = MOD(nearn, 1000000) + ia * 1000000  !composed value
        IF(nearn > 1000000)THEN         !probably far away yet
          issdb(1,icnod) = -nearn + 1000000      !update nnear
          issdb(3,icnod) = issdb(3,icnod) - 1    !increase counter
          CYCLE                                  !check another node
        ELSE
          issdb(1,icnod) = -nearn                !update nnear and test for check
        END IF
      END IF
    END IF

    IF(nearn == 0 .OR. nnp > freq ) THEN   !if no previous or too many steps
      !global search in ALL master segment the nearest segment to ISN
      CALL nears3(xc,nsegm,nearn,coors(:,isn))
      issdb(3,icnod) = 0   ! re-initializes counter

    ELSE IF( nearn < 0)THEN           !If a search is advisable
      nearn = -nearn
    END IF

    !.... step 2 .... project slave node onto the master surface

    !....   three-dimensional 3-node master segments
    CALL projt3(coors(:,isn),nearn,coorm,lcseg,rssdb(:,icnod),   &
         nhseg,issdb(:,icnod),prdat,disma,cprop(4),cprop(5),curms,cu)
    IF( wrink )THEN
      IF( rssdb(3,icnod) < mingp(icnod) )THEN
        IF( rssdb(3,icnod) > 0d0 .OR. prdat(1) < 0d0) &
          mingp(icnod) = rssdb(3,icnod)
      END IF
    END IF

    IF( prdat(1) == 0d0 )CYCLE   ! no penetration
    IF( cmpfr )THEN

      !.... step 3 .... Compute contact force

      CALL force3(isn,issdb(:,icnod),rssdb(:,icnod),lcseg,indco,cprop, &
                  coorm,prdat,dtime,emass,eresf,cursl,tn,              &
                  icnod,press,wear,lwear,mtdof,sldof,area,td)

      IF( press ) presn(icnod) = presn(icnod) + prdat(1)

      surtf = surtf - eresf(1:3,0)*dtime

      ! Add forces into global contact forces
      IF (indco == 0 .OR. indco == 1) &             !forces on SLAVE
        fcont(1:3,isn) = fcont(1:3,isn) - eresf(1:3,0)  !
      IF (indco == 0 .OR. indco == 2) THEN          !forces on MASTER
        DO n=1,3                 !for each node
          node = lcseg(n,nearn)  !global number
          fcont(1:3,node) = fcont(1:3,node) - eresf(1:3,n)
        END DO
      END IF

      ! add to friction work (wearing measure)
      IF (wear .AND. issdb(3,icnod) == 2 .AND. updiv ) THEN
        wwear(isn) = wwear(isn) + lwear(0)
        DO n=1,3                 !for each node
          node = lcseg(n,nearn)  !global number
          wwear(node) = wwear(node) + lwear(n)
        END DO
      END IF

    ELSE
      rssdb(3,icnod) = prdat(1)
    END IF

  END DO

 RETURN
 END SUBROUTINE cscf3a
