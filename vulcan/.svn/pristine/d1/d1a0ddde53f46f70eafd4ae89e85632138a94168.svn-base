      SUBROUTINE INPGEO(COORD,ELDAT,INTER,ITAPE,LNODS,MATNO,PROEL,IBOEM)
C***********************************************************************
C
C**** THIS ROUTINE READS THE GEOMETRICAL DATA
C
C     Notes: DINT is used to avoid problems in challenge machines
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      DIMENSION ELDAT(*), COORD(NDIME,*), LNODS(NNODE,*),
     .          MATNO(*), PROEL(NPREL,*)
C
C**** DEFINES MEMORY POINTERS
C
      CALL MEMODT
C
      IF(IBOEM.EQ.0) THEN
C
       IERR1=1
       IF(ITAPE.NE.LUDAT) THEN
        ITAPE=LUGEO
        OPEN(UNIT=LUGEO,FILE=CA1,STATUS='OLD',ERR=1000)
        IERR1=0
C
 1000   IF(IERR1.NE.0) THEN
         IF(IERR1.EQ.1) WRITE(LURES,901)
         CALL RUNEND('ERROR IN OPENING FILE         ')
        ENDIF
       ENDIF     ! itape.ne.ludat
C
C**** READ THE ELEMENT NODAL CONNECTIONS AND THE PROPERTY NUMBERS
C
       WRITE(LURES,900)
C
       NLINE=(NNODE-1)/10+1
       NPRIN=1
       DO 10 IELEM=1,NELEM
       CALL LISTEN('INPGEO',NPRIN,ITAPE)
       NUMEL=DINT(PARAM(1))
       MATNO(NUMEL)=INT(PARAM(2))
       DO INODE=1,NNODE
        LNODS(INODE,NUMEL)=INT(PARAM(2+INODE))
       ENDDO
C
C**** WRITE THE ELEMENT NODAL CONECTION AND PROPERTY NUMBERS
C
       WRITE(LURES,910) NUMEL,MATNO(NUMEL),
     .                 (LNODS(INODE,NUMEL),INODE=1,NNODE)
   10  CONTINUE
C
C**** ZERO ALL THE NODAL COORDINATES AND THEN READ SOME OF THEM
C   
       DO IDIME=1,NDIME
        DO IPOIN=1,NPOIN
         COORD(IDIME,IPOIN)=0.0D0
        ENDDO
       ENDDO
C
C**** COMPUTES NUMBER OF POINTS WITHOUT CONTACT (AL METHOD)
C
       NPOI1=NPOIN-NPOIC
C
C**** READS NODAL COORDINATES
C
       DO IPOI1=1,NPOI1
        CALL LISTEN('INPGEO',NPRIN,ITAPE)
        IPOIN=INT(PARAM(1))
        DO IDIME=1,NDIME
         COORD(IDIME,IPOIN)=PARAM(IDIME+1)
        ENDDO
       ENDDO
C
C**** LOOP ON ELEMENTS
C
       DO 100 IELEM=1,NELEM
       LGRUP=MATNO(IELEM)
C
C**** STORE NUMBER OF NODES PER ELEMENT
C
       NNODL=0
       DO 40 INODE=1,NNODE
       IPOIN=LNODS(INODE,IELEM)
  40   IF(IPOIN.NE.0) NNODL=NNODL+1
       PROEL(2,LGRUP)=FLOAT(NNODL)
C
C**** INTERPOLATE MID-SIDE NODES IF NECESSARY
C
       IF(INTER.EQ.1) THEN
        IF(NDIME.EQ.1) THEN
         CALL NODES1(COORD,LNODS(1,IELEM),NDIME,IELEM,NNODL)
        ELSE IF(NDIME.EQ.2.OR.KPROB.EQ.2) THEN
         CALL NODES2(COORD,LNODS(1,IELEM),NDIME,IELEM,NNODL)
        ELSE IF(NDIME.EQ.3) THEN
         CALL NODES3(COORD,LNODS(1,IELEM),NDIME,IELEM,NNODL)
        ENDIF
       ENDIF
C
  100  CONTINUE                 ! END LOOP ON ELEMENTS
C
       IF(NMEMO1M.EQ.0) THEN    ! coordinates in an elemental array
C
C**** STORE ELEMENT COORDINATES IN DATA-BASE
C
        DO IELEM=1,NELEM
         LGRUP=MATNO(IELEM)
         NNODL=INT(PROEL(2,LGRUP))
         CALL GATHER(COORD,NDIME,NPOIN,ELDAT(IDATA(1)),NDIME,NNODL,
     .               LNODS(1,IELEM))
         IF(KPROB.EQ.2.AND.NDIME.EQ.3)
     .    CALL GATHER(COORD(1,NPOIN+1),NDIME,NPOIN,ELDAT(IDATA(7)),
     .                NDIME,NNODL,LNODS(1,IELEM))
         CALL DATBAS(ELDAT,    1,    1)
        ENDDO
       ENDIF                    ! nmemo1m.eq.0
C
C**** PRINTOUT NODAL COORDINATES 
C
       IF(NDIME.EQ.2) THEN 
        WRITE(LURES,950)
        WRITE(LURES,971)(IPOIN,(COORD(IDIME,IPOIN),IDIME=1,NDIME),
     .                   IPOIN=1,NPOI1)
       ELSE IF(NDIME.EQ.3) THEN
        IF (KPROB.NE.2) THEN                 ! not shells
         WRITE(LURES,960)
         WRITE(LURES,970)(IPOIN,(COORD(IDIME,IPOIN),IDIME=1,NDIME),
     .                    IPOIN=1,NPOI1)
        ENDIF
       ENDIF
C
       WRITE(LURES,902)
C
C**** LOOK FOR 'END_GEOMETRY' CARD
C
       NPRIN=0
       JTAPE=LUDAT
       CALL LISTEN('INPGEO',NPRIN,JTAPE)
       IF(WORDS(1).NE.'END_G')
     .  CALL RUNEND('INPGEO:END_GEOMETRY CARD NOT FOUND')
       WRITE(LURES,902)
C
      ELSE              ! iboem=1
C
C**** CHECK THE INPUT DATA
C
       CALL INPCEK(COORD,LNODS,MATNO,NDIME,NELEM,NMATS,NNODE,
     .             NPOIN,PROEL,NPREL,NGRUP,NPOIC,NNODC,NOCOI,LURES,
     .             KGAPC,LARGE,LARGC)
C
      ENDIF             ! iboem.eq.0
C
      RETURN
C
  900 FORMAT(//2X,8H ELEMENT,5X,5HGROUP,6X,12HNODE NUMBERS)
  901 FORMAT(' ERROR IN OPENING GEOMETRY INPUT FILE  40 ')
  902 FORMAT(/)
c 905 FORMAT(12I5/10(10X,10I5))
  910 FORMAT(3X,I7,5X,I5,6X,10I7/10(26X,10I7))
c 915 FORMAT(I5,6F15.6)
  950 FORMAT(//3(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD))
  960 FORMAT(//3(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD,2X,8H Z-COORD))
  970 FORMAT(3(5X,I6,3F10.3))
  971 FORMAT(3(5X,I6,2F10.3))
c 980 FORMAT(//(5X,5H NODE,2X,8H X-COORD,2X,8H Y-COORD,2X,8H Z-COORD,
c    .                     2X,8H  ALFA-1,2X,8H  ALFA-2,2X,8H  ALFA-3))
c 990 FORMAT(5X,I5,6F10.3)
      END
