      SUBROUTINE OUTPOS(ELDAT,LNODS,MATNO,PROEL,PROPS,COORD,GPCOD,
     .                  ELPRE,ELVAR,ELMAT,WORK1)
C***********************************************************************
C
C**** THIS ROUTINE DUMPS THE GEOMETRIC MODEL FOR POSTPROCESS
C
C     Note: Gauss coordinates should not be printed in post file
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'auxl_om.f'
C
      DIMENSION MATNO(NELEM),       LNODS(NNODE,NELEM),
     .          PROEL(NPREL,NGRUP), PROPS(NPROP,NMATS),
     .          ELDAT(NDATA),       COORD(NDIME,*),
     .          GPCOD(NDIME,*)
      DIMENSION WORK1(*)
      DIMENSION ELPRE(NPREV),
     .          ELVAR(NSTAT),       ELMAT(NMATX)
C
C**** WRITE CONTROL DATA FOR POSTPROCESSOR
C
      OPEN(UNIT=LUPOS,FILE=CJ,STATUS='OLD',FORM='UNFORMATTED',
     .     ACCESS='APPEND')
C
      NPORO=0  ! to compatibilize thermal & mechan. prob. for interfla.f
C
      WRITE(LUPOS) NDIME,NDOFC,NDOFN,NGAUS,NHIST,NNODE,NELEM,NGRUP,
     .             NMATS,NPOIN,NPREL,NPROP,NSTR1,TITLE,NDATA,NSTAT,
     .             KSGAU,NNUIN,NPOIC,NPORO,LARGE,KDYNA
C
      ICOUN=0
      DO 101 IELEM=1,NELEM
      LGRUP=MATNO(IELEM)
      LMATS=INT(PROEL(1,LGRUP))
      LTYPE=INT(PROEL(5,LGRUP))
      NNODL=INT(PROEL(2,LGRUP))
      IF(LTYPE.EQ.2) GO TO 101       ! SKIP REINFORCING ELEMENTS
      IF(LTYPE.EQ.3) GO TO 101       ! SKIP LINK ELEMENTS
      IF(LTYPE.EQ.4) GO TO 101       ! SKIP CONTACT ELEMENTS
      IF(LTYPE.EQ.32) GO TO 101      ! SKIP CONTACT ELEMENTS
      IF(LTYPE.EQ.33) GO TO 101      ! SKIP LINK ELEMENTS
C
C**** READ NODAL AND GAUSSIAN COORDINATES FROM RESTART-FILE
C
      IF(NMEMO1M.EQ.0.OR.NMEMO2M.EQ.0)
     . CALL DATBAS(ELDAT,    1,    2)
C
      IF(NMEMO2M.NE.0.AND.KPPCG.NE.0) THEN
C
C**** GATHER NODAL COORDINATES
C
       IF(NMEMO1M.EQ.1) THEN         ! coordinates in a global array
        CALL GATHER(COORD,NDIME,NPOIN,WORK1(ISTAR(17)),NDIME,
     .              NNODL,LNODS(1,IELEM))
       ENDIF
C
C**** CALL ELEMENT PROCESSOR TO PERFORM REQUIRED OPERATIONS
C
       CALL ELMLIB(LNODS(1,IELEM),PROEL(1,LGRUP),PROPS(1,LMATS),
     .             WORK1,WORK1,WORK1,WORK1,WORK1,
     .             ELDAT,ELPRE,ELVAR,ELMAT,WORK1,   16)
C
C**** WORK1(ISTAR(5) --> GPCOD
C
       IKOUN=0
       DO IDIME=1,NDIME
        DO IGAUS=1,NGAUL
         GPCOD(IDIME,IGAUS)=WORK1(ISTAR(5)+IKOUN)
         IKOUN=IKOUN+1
        ENDDO
       ENDDO
      ENDIF                          ! nmemo2m.ne.0.and.kppcg.ne.0
C
C**** RECOVER NODAL COORDINATES AND PUT THEM IN GLOBAL VECTOR
C
      IF(NMEMO1M.EQ.0) THEN          ! coordinates in an elemental array
       KCOUN=0
       DO 100 INODE=1,NNODE
       LNODE=LNODS(INODE,IELEM)
       IF(LNODE.EQ.0) GO TO 100
C
C$DIR SCALAR
       DO IDIME=1,NDIME
        COORD(IDIME,LNODE)=ELDAT(IDATA(1)+KCOUN)
        KCOUN=KCOUN+1
       ENDDO
  100  CONTINUE
      ENDIF
C
C**** RECOVER GAUSSIAN COORDINATES AND WRITES THEM TO POSTPROCESS FILE
C
      IF(NMEMO2M.EQ.0) THEN
       ICOUN=0
       DO IGAUS=1,NGAUS
C$DIR SCALAR
        DO IDIME=1,NDIME
         GPCOD(IDIME,IGAUS)=ELDAT(IDATA(4)+ICOUN)
         ICOUN=ICOUN+1
        ENDDO
       ENDDO
      ENDIF
C
      IF(KPPCG.NE.0) THEN
       WRITE(LUPOS) ((SNGL(GPCOD(IDIME,IGAUS)),
     .                IDIME=1,NDIME),IGAUS=1,NGAUS)
      ENDIF
C
  101 CONTINUE
C
C**** COMPUTES NUMBER OF POINTS WITHOUT CONTACT (AL METHOD)
C
      NPOI1=NPOIN-NPOIC
C
C**** WRITE GEOMETRY FOR POSTPROCESSOR
C
      WRITE(LUPOS)
     .((SNGL(COORD(IDIME,IPOIN)),IDIME=1,NDIME),IPOIN=1,NPOI1),
     .  LNODS,MATNO,
     .((SNGL(PROEL(IPREL,IGRUP)),IPREL=1,NPREL),IGRUP=1,NGRUP),
     .((SNGL(PROPS(IPROP,IMATS)),IPROP=1,NPROP),IMATS=1,NMATS),
     .  IDATA,ISTAT
C
      CLOSE(LUPOS)
C
      END
