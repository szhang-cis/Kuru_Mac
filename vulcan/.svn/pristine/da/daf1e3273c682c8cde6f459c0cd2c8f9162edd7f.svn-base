      SUBROUTINE CALCCT(DMATX,YOUNG,POISM,ROTET,NAUXI,
     .                  POISC1,POISC2,POISC3,D1PLS,D2PLS,D3PLS,
     .                  BULKM,DISTM,DAMAP1,DAMAP2,PROPS,
     .                  VANIS,ROMTX,TRMTX,
     .                  YOUNGF,YOUNGA,POISMF,POISMA,SHEAR,SHEARF,SHEARA)
C***********************************************************************
C
C**** THIS ROUTINE EVALUATES THE SECANT CONSTITUTIVE TENSOR
C
C***********************************************************************
      IMPLICIT REAL*8(A-H,O-Z)
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'auxl_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'prob_om.f'
C
      DIMENSION DMATX(NAUXI,*), PROPS(*)
      DIMENSION VANIS(NANIV,*), ROMTX(NDIME,*), TRMTX(NDIME,*),
     .          V1(3), V2(3), V3(3)
C
      IF(LARGE.EQ.3) RETURN
C
      ISOTR=INT(PROPS(1))   ! 0=isotropic; 1=orthotropic
      IPEP1=100
      IF(ISOTR.EQ.1) IPEP1=200
C
      IF(IPEP1.EQ.100) THEN                 ! isotropic
C
C**** BULK AND SHEAR MODULI
C
       BULKM=YOUNG/(3.0D0*(1.0D0-2.0D0*POISM))
       DISTM=ROTET*YOUNG/(2.0D0*(1.0D0+POISM))
C
       DAMAP1=2.0D0/3.0D0*(1.0D0+POISM) ! only useful for Lemaitre model
       DAMAP2=3.0D0*(1.0D0-2.0D0*POISM)
C
       ISTAN=2
       IF(LARGE.EQ.0) THEN
        ISTAN=1
       ELSE
        IF(IFREN.EQ.1.OR.IFREN.EQ.2.OR.IFREN.EQ.3.OR.
     .     IFREN.EQ.4.OR.IFREN.EQ.5.OR.IFREN.EQ.6.OR.
     .     IFREN.EQ.9.OR.IFREN.EQ.10) ISTAN=1
       ENDIF
       IF(ISTAN.EQ.2) RETURN
C
C**** 1D CASE
C
       IF(NTYPE.EQ.5) THEN
        DMATX(1,1)=YOUNG
       ENDIF
C
C**** PLANE STRESS CASE
C
       IF(NTYPE.EQ.1) THEN
        D1PLS=BULKM+(4.0D0/3.0D0)*DISTM
        D2PLS=BULKM-(2.0D0/3.0D0)*DISTM
        D3PLS=D2PLS
        POISC1=-D2PLS/D1PLS           ! -POISM/(1.0-POISM) for ROTET=1.0
        POISC2=POISC1
        POISC3=0.0D0
C
        D1=YOUNG/(1.0D0-POISM*POISM)
        D2=YOUNG*POISM/(1.0D0-POISM*POISM)
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(ISTRS,JSTRS)=0.0D0
          IF(ISTRS.EQ.JSTRS) DMATX(ISTRS,JSTRS)=DISTM
         ENDDO
        ENDDO
        DMATX(1,1)=D1
        DMATX(2,2)=D1
        DMATX(1,2)=D2
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(JSTRS,ISTRS)=DMATX(ISTRS,JSTRS)
         ENDDO
        ENDDO
       ENDIF
C
C**** PLANE STRAIN, AXISYMMETRIC & 3D CASES
C
       IF(NTYPE.EQ.2.OR.NTYPE.EQ.3.OR.NTYPE.EQ.4) THEN
        D1=BULKM+(4.0D0/3.0D0)*DISTM
        D2=BULKM-(2.0D0/3.0D0)*DISTM
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(ISTRS,JSTRS)=0.0D0
          IF(ISTRS.EQ.JSTRS) DMATX(ISTRS,JSTRS)=DISTM
         ENDDO
        ENDDO
        DMATX(1,1)=D1
        DMATX(2,2)=D1
        DMATX(4,4)=D1
        DMATX(1,2)=D2
        DMATX(1,4)=D2
        DMATX(2,4)=D2
C
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(JSTRS,ISTRS)=DMATX(ISTRS,JSTRS)
         ENDDO
        ENDDO
       ENDIF
      ENDIF                 ! ipep1.eq.100
C
#ifndef restricted
      IF(IPEP1.EQ.200) THEN                 ! orthotropic
C
       ISTAN=2
       IF(LARGE.EQ.0) THEN
        ISTAN=1
       ELSE
        IF(IFREN.EQ.1.OR.IFREN.EQ.2.OR.IFREN.EQ.3.OR.
     .     IFREN.EQ.4.OR.IFREN.EQ.5.OR.IFREN.EQ.6.OR.
     .     IFREN.EQ.9.OR.IFREN.EQ.10) ISTAN=1
       ENDIF
       IF(ISTAN.EQ.2) RETURN
C
C**** 1D CASE
C
       IF(NTYPE.EQ.5) THEN
        CALL RUNEND('ERROR: 1D CASE NOT IMPLEMENTED - calcct.f')
       ENDIF
C
C**** PLANE STRESS CASE
C
       IF(NTYPE.EQ.1) THEN
        DENOM=1.0D0/(YOUNG*YOUNGF*YOUNGA)-
     .        POISM*POISM/(YOUNGF*YOUNGF*YOUNGA)-
     .        POISMF*POISMF/(YOUNGF*YOUNGA*YOUNGA)-
     .        POISMA*POISMA/(YOUNG*YOUNGA*YOUNGA)-
     .        2.0D0*POISM*POISMF*POISMA/(YOUNGF*YOUNGA*YOUNGA)
        D1PLS=(1.0D0/(YOUNG*YOUNGF)-                        ! DMATX(4,4)
     .         POISM*POISM/(YOUNGF*YOUNGF))/DENOM
        D2PLS=(POISMF/(YOUNGF*YOUNGA)+                      ! DMATX(1,4)
     .         POISM*POISMA/(YOUNGF*YOUNGA))/DENOM
        D3PLS=(POISMA/(YOUNG*YOUNGA)+                       ! DMATX(2,4)
     .         POISM*POISMF/(YOUNGF*YOUNGA))/DENOM
C
        DENOM=1.0D0/(YOUNG*YOUNGF)-POISM*POISM/(YOUNGF*YOUNGF)
        POISC1=-(POISMF+POISM*POISMA)/(YOUNGF*YOUNGA*DENOM)
        POISC2=-(POISMA/YOUNG+POISM*POISMF/YOUNGF)/(YOUNGA*DENOM)
        POISC3=0.0D0
C
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(ISTRS,JSTRS)=0.0D0
         ENDDO
        ENDDO
        DMATX(1,1)=1.0D0/YOUNGF/DENOM
        DMATX(2,2)=1.0D0/YOUNG/DENOM
        DMATX(1,2)=POISM/YOUNGF/DENOM
        DMATX(3,3)=SHEAR
C
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(JSTRS,ISTRS)=DMATX(ISTRS,JSTRS)
         ENDDO
        ENDDO
       ENDIF
C
C**** PLANE STRAIN, AXISYMMETRIC & 3D CASES
C
       IF(NTYPE.EQ.2.OR.NTYPE.EQ.3.OR.NTYPE.EQ.4) THEN
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(ISTRS,JSTRS)=0.0D0
         ENDDO
        ENDDO
        DENOM=1.0D0/(YOUNG*YOUNGF*YOUNGA)-
     .        POISM*POISM/(YOUNGF*YOUNGF*YOUNGA)-
     .        POISMF*POISMF/(YOUNGF*YOUNGA*YOUNGA)-
     .        POISMA*POISMA/(YOUNG*YOUNGA*YOUNGA)-
     .        2.0D0*POISM*POISMF*POISMA/(YOUNGF*YOUNGA*YOUNGA)
        DMATX(1,1)=(1.0D0/(YOUNGF*YOUNGA)-
     .              POISMA*POISMA/(YOUNGA*YOUNGA))/DENOM
        DMATX(2,2)=(1.0D0/(YOUNG*YOUNGA)-
     .              POISMF*POISMF/(YOUNGA*YOUNGA))/DENOM
        DMATX(4,4)=(1.0D0/(YOUNG*YOUNGF)-
     .              POISM*POISM/(YOUNGF*YOUNGF))/DENOM
        DMATX(1,2)=(POISM/(YOUNGF*YOUNGA)+
     .              POISMF*POISMA/(YOUNGA*YOUNGA))/DENOM
        DMATX(1,4)=(POISMF/(YOUNGF*YOUNGA)+
     .              POISM*POISMA/(YOUNGF*YOUNGA))/DENOM
        DMATX(2,4)=(POISMA/(YOUNG*YOUNGA)+
     .              POISM*POISMF/(YOUNGF*YOUNGA))/DENOM
        DMATX(3,3)=SHEAR
        IF(NTYPE.EQ.4) THEN
         DMATX(5,5)=SHEARF
         DMATX(6,6)=SHEARA
        ENDIF
C
        DO ISTRS=1,NSTRS
         DO JSTRS=ISTRS,NSTRS
          DMATX(JSTRS,ISTRS)=DMATX(ISTRS,JSTRS)
         ENDDO
        ENDDO
       ENDIF
C
C**** TRANSFORMATION MATRIX BETWEEN GLOBAL & MATERIAL COORDINATE SYSTEMS
C
       IF(NDIME.EQ.3) THEN
        DO I=1,NDIME
         V1(I)=VANIS(1,I)
         V2(I)=VANIS(2,I)
        ENDDO
        CALL VECPRO(3,V1,V2,V3)
       ENDIF
       DO I=1,NDIME
        TRMTX(1,I)=VANIS(1,I)
        TRMTX(2,I)=VANIS(2,I)
        IF(NDIME.EQ.3) TRMTX(3,I)=V3(I)
       ENDDO
      ENDIF                 ! ipep1.eq.200
C
#endif
      RETURN
      END
