#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, shutil, time, sys
import pexpect, errno

class Genren:
    def __init__(self, filename):
        #Process.__init__(self)
        self.pathToVulcan = "/usr/bin/vulcan-bin"
        filename = filename.encode("utf-8")
        self.filename = os.path.abspath(filename)
        dat_directory = os.path.dirname(self.filename)
        filename = os.path.splitext(os.path.basename(filename))[0] #Obtiene el nombre del archivo sin extension sin directorios
        self.allGood = False
        self.env = {}        
        self.env_dat = {}
        
        self.env_dat["FOR003"] = os.path.join(dat_directory,filename+"-t.geo")
        self.env_dat["FOR004"] = os.path.join(dat_directory,filename+"-t.fix")
        self.env_dat["FOR007"] = os.path.join(dat_directory,filename+".dat") 
        self.env_dat["FOR008"] = os.path.join(dat_directory,filename+".sal") 
        self.env_dat["FOR009"] = os.path.join(dat_directory,filename+"-t.ini") 
        self.env_dat["FOR010"] = os.path.join(dat_directory,filename+"-t.adv")
        self.env_dat["FOR011"] = os.path.join(dat_directory,filename+"-f.geo") 
        self.env_dat["FOR012"] = os.path.join(dat_directory,filename+"-f.fix")
        self.env_dat["FOR013"] = os.path.join(dat_directory,filename+"-t.loa")
        self.env_dat["FOR014"] = os.path.join(dat_directory,filename+"-m.geo") 
        self.env_dat["FOR015"] = os.path.join(dat_directory,filename+"-m.fix")
        self.env_dat["FOR016"] = os.path.join(dat_directory,filename+"-m.ini")
        self.env_dat["FOR017"] = os.path.join(dat_directory,filename+"-fem.fem")
        self.env_dat["FOR018"] = os.path.join(dat_directory,filename+".-gid.dat")
        self.env_dat["FOR019"] = os.path.join(dat_directory,filename+".-gid.res")
        self.env_dat["FOR020"] = os.path.join(dat_directory,filename+".act")

        self.dat_directory = dat_directory
        self.filename = filename
        
        self.genren_exec = os.path.join(self.pathToVulcan,"genren.out")
        
        if os.path.isfile(os.path.join(dat_directory,filename+".dat")):
            self.allGood = True
            
            
    def run(self):
        if self.allGood:
            self.env.update(self.env_dat)
            p = pexpect.spawn(self.genren_exec, env=self.env)
            p.interact()
        else:
            print "No se ejecuta genren error de parametros"

if __name__ == "__main__":
    if len (sys.argv) < 2:
      print "Uso: genren nombre_del_archivo (sin raiz)"
      sys.exit(1)
    filename = os.path.abspath(sys.argv[1])
    dat_directory = os.path.dirname(filename)
    filename = os.path.splitext(os.path.basename(filename))[0] #Obtiene el nombre del archivo sin extension si
    a = Genren(os.path.join(dat_directory,filename+".dat"))
    a.run()
