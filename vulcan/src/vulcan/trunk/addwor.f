      SUBROUTINE ADDWOR
C***********************************************************************
C
C**** THIS ROUTINE CALCULATES THE POINTERS FOR TEMPORARY ARRAYS
C
C     Notes:
C
C     XJACM in IFORC, ILOSU & ISTIF is repeated. The first definition is
C     used (as XJACM) in frin30.f, in stif30 and ldsf01.f. The second
C     one is used (as XJACM) is seti30.f and (as XJACN) in frin30.f and
C     stif30.f (the duplication in ILOSU could be removed).
C
C***********************************************************************
C
C**** GENERAL DIMENSIONS
C
      INCLUDE 'para_om.f'
C
C**** ADDITIONAL PARAMETERS
C
      INCLUDE 'addi_om.f'
C
C**** COUPLING VARIABLES
C
      INCLUDE 'nuec_om.f'
C
C**** MECHANICAL VARIABLES
C
      INCLUDE 'prob_om.f'
      INCLUDE 'inte_om.f'
      INCLUDE 'auxl_om.f'
      INCLUDE 'inpo_om.f'
C
      LWOR1=0
C
C**** ESTABLISHES PROPER DIMENSION OF "VNORL" ARRAY
C
C     VNORL(NDIME,NNODE) for node to node contact element (ITYPE=4)
C     VNORL(NDIME,NGAUS) for side to side contact element (ITYPE=32)
C
      NNODG=NNODE
      IF(NGAUS.GT.NNODE) NNODG=NGAUS
C
C**** SKEW SYSTEM
C
      IAKEW=0
      IF(NSKEW.GT.0) IAKEW=1
C
C**** NON-COINCIDENT MESH
C
      NOCOA=0
      NOCOB=0
      NOCOX=0
      IF(NOCOI.GT.0) THEN
       NOCOX=1
       IF(LARGC.NE.0) THEN
        NOCOA=1
        IF(LICOI.EQ.0) NOCOB=1
       ENDIF
      ENDIF
C
C**** DEFORMATION-DEPENDENT LOADS
C
      NOCOC=NOCOA
      IF(NLDSF.EQ.1) THEN
       IF(NOCOC.EQ.0) NOCOC=1
      ENDIF
C
C**** ROUTINE STARTS (OUTPOS)
C
      IF (KPROB.EQ.2.AND.NDIME.EQ.3) THEN ! SHELLS PROBLEMS
       ISTAR(1)=1                             ! COORD(NDIME,3*NPOIN)
       ISTAR(2)=ISTAR(1)+3*NDIME*NPOIN        ! GPCOD(NDIME,NGAUS)
       LINDA   =ISTAR(2)+NDIME*NGAUS
      ELSE                                ! OTHERS PROBLEMS
       IF(NMEMO1M.EQ.0) THEN         ! coordinates in an elemental array
        ISTAR(1)=1                            ! COORD(NDIME,NPOIN)
        ISTAR(2)=ISTAR(1)+NDIME*NPOIN         ! GPCOD(NDIME,NGAUS)
        LINDA   =ISTAR(2)+NDIME*NGAUS
       ELSE                          ! coordinates in a global array
        ISTAR(1)=1                            ! GPCOD(NDIME,NGAUS)
        LINDA   =ISTAR(1)+NDIME*NGAUS
       ENDIF
       IF(NMEMO2M.NE.0) THEN
        ISTAR( 3)=LINDA                       ! CARTD(NDIME,NNODE,NGAUS)
        ISTAR( 4)=ISTAR( 3)+NDIME*NNODE*NGAUS ! DVOLU(NGAUS)
        ISTAR( 5)=ISTAR( 4)+NGAUS             ! GPCOD(NDIME,NGAUS)
        ISTAR( 6)=ISTAR( 5)+NDIME*NGAUS       ! SHAPE(NNODE,NGAUS)
        ISTAR( 7)=ISTAR( 6)+NNODE*NGAUS       ! BSBAR(NSTR1,NEVAB,NGAUS)
        ISTAR( 8)=ISTAR( 7)+NSTR1*NEVAB*NGAUS ! DERIV(NDIME,NNODE,NGAUS)
        ISTAR( 9)=ISTAR( 8)+NDIME*NNODE*NGAUS ! POSGP(NDIME,NGAUS)
        ISTAR(10)=ISTAR( 9)+NDIME*NGAUS       ! WEIGP(NGAUS)
        ISTAR(11)=ISTAR(10)+NGAUS             ! XJACM(NDIME,NDIME)
        ISTAR(12)=ISTAR(11)+NDIME*NDIME       ! RMAT2(NSTR1,NSTR1)
        ISTAR(13)=ISTAR(12)+NSTR1*NSTR1       ! CMEAN(3,NNODE)
        ISTAR(14)=ISTAR(13)+3*NNODE           ! SHAPR(NNODE,NGAUS) B-bar
        ISTAR(15)=ISTAR(14)+NNODE*NGAUS       ! WSTIR(NNODE,NNODE) B-bar
        ISTAR(16)=ISTAR(15)+NNODE*NNODE       ! VNORL(NDIME,NNODG)
        ISTAR(17)=ISTAR(16)+NDIME*NNODG       ! ELCO1(NDIME,NNODE)
        ISTAR(18)=ISTAR(17)+NDIME*NNODE       ! EMASS(NNODE,NNODE)
        ISTAR(19)=ISTAR(18)+NNODE*NNODE       ! ELDI1(NDOFN,NNODE)
        ISTAR(20)=ISTAR(19)+NDOFN*NNODE       ! CARTS(NDIME,NNODE,NGAUS)
        ISTAR(21)=ISTAR(20)+NDIME*NNODE*NGAUS ! SHAPS(NNODE,NGAUS)
        ISTAR(22)=ISTAR(21)+NNODE*NGAUS       ! GPCOS(NDIME,NGAUS)
        LINDA    =ISTAR(22)+NDIME*NGAUS
       ENDIF
      END IF
C
      IF(LINDA.GT.LWOR1) LWOR1=LINDA
C
      IF(KRENU.NE.0) THEN                      ! RENUMBERING
       LRENU=NPOIN*(10*NNODE+3)/2
       IF(LRENU.GT.LWOR1) LWOR1=LRENU
      END IF
C
C**** ROUTINES ANTESO & POSTSO
C
      IQUAS(1)=1                               ! VVECT(NTOTV)
      IQUAS(2)=IQUAS(1)+NTOTV                  ! WVECT(NTOTV)
      LQUAS   =IQUAS(5)+NTOTV
C
      IF(LQUAS.GT.LWOR1) LWOR1=LQUAS
C
C**** ROUTINE AQUAMX
C
      IF(KPORE.EQ.2) THEN
       IAQUA(1)=1                                ! PMATX
       IAQUA(2)=IAQUA(1)+NDIME*(NDIME+1)/2       ! PMAT1
       IAQUA(3)=IAQUA(2)+NDIME*(NDIME+1)/2       ! BPBMX
       IAQUA(4)=IAQUA(3)+NNODE*(NNODE+1)/2       ! BMATX
       LNAQU   =IAQUA(4)+NEVAB*NSTR1
C
       IF(LNAQU.GT.LWOR1) LWOR1=LNAQU
      END IF ! KPORE.EQ.2
C
C**** ROUTINE SOLADD
C
      IFIXY(1)=1                             !  LEQNS(NEVAC)
      IFIXY(2)=IFIXY(1)+(NEVAC*ICHAL+4)/8    !  LNUEQ(NTOTV)
      IFIXY(3)=IFIXY(2)+(NTOTV*ICHAL+4)/8    !  LOCEL(NEVAC)
      IFIXY(4)=IFIXY(3)+(NEVAC*ICHAL+4)/8    !  LPONT(NTOTV)
      IFIXY(5)=IFIXY(4)+(NTOTV*ICHAL+4)/8    !  NACVA(NTOTV)
      IFIXY(6)=IFIXY(5)+(NTOTV*ICHAL+4)/8    !  NDEST(NEVAC)
      IFIXY(7)=IFIXY(6)+(NEVAC*ICHAL+4)/8    !  NDFRO(NELEM)
      IFIXY(8)=IFIXY(7)+(NELEM*ICHAL+4)/8    !  PRESC(NDOFC)
      LFIXY   =IFIXY(8)+NDOFC
C
      IF(LFIXY.GT.LWOR1) LWOR1=LFIXY
C
C**** ROUTINE FORCIN
C
      IF(KPROB.EQ.2) THEN     !   SHELLS PROBLEMS
       IFORC( 1)=1                               ! BMSIG(NEVAB)
       IFORC( 2)=IFORC( 1)+NEVAB                 ! DSTRA(NSTR1)
       IFORC( 3)=IFORC( 2)+NSTR1                 ! DESIG(NSTR1) 
       IFORC( 4)=IFORC( 3)+NSTR1                 ! SGTOT(NSTR1)
       IFORC( 5)=IFORC( 4)+NSTR1                 ! BMATX(NSTR1,NEVAB)
       IFORC( 6)=IFORC( 5)+NSTR1*NEVAB           ! DMATX(NSTR1,NSTR1)
       IFORC( 7)=IFORC( 6)+NSTR1*NSTR1           ! LOCOD(2,NNODE)
       IFORC( 8)=IFORC( 7)+(2*NNODE*ICHAL+4)/8   ! RMTEL(3,3)
       IFORC( 9)=IFORC( 8)+9                     ! NOROT(3,3,NNODE)
       IFORC(10)=IFORC( 9)+(9*NNODE*ICHAL+4)/8   ! RIGRO(3,NNODE,NNODE)
       LFORC    =IFORC(10)+3*NNODE*NNODE
      ELSE                     !   OTHERS PROBLEMS
       IFORC( 1)=1                            ! BMSIG(NEVAB)
       IFORC( 2)=IFORC( 1)+NEVAB              ! BMATX(NSTR1,NEVAB)
       IFORC( 3)=IFORC( 2)+NSTR1*NEVAB        ! DESIG(NSTR1) 
       IFORC( 4)=IFORC( 3)+NSTR1              ! DMATX(NSTR1,NSTR1)
       IFORC( 5)=IFORC( 4)+NSTR1*NSTR1        ! DSTRA(NSTR1)
       IFORC( 6)=IFORC( 5)+NSTR1              ! PRESG(NSTR1)
       IFORC( 7)=IFORC( 6)+NSTR1              ! SGTOT(NSTR1)
       IFORC( 8)=IFORC( 7)+NSTR1              ! SIGMA(NSTR1)
       IFORC( 9)=IFORC( 8)+NSTR1              ! TSTRA(NSTR1)
       IFORC(10)=IFORC( 9)+NSTR1              ! XJACM(NDIME,NDIME)
       IFORC(11)=IFORC(10)+NDIME*NDIME        ! TENOD(NNODE)
       IFORC(12)=IFORC(11)+NNODE              ! DTENO(NNODE)
       IFORC(13)=IFORC(12)+NNODE              ! CMEAN(3,NNODE) not used
       IFORC(14)=IFORC(13)+3*NNODE            ! PWOEL(NNODE)
       IFORC(15)=IFORC(14)+NNODE              ! DISPL(NEVAB)
       IFORC(16)=IFORC(15)+NEVAB              ! PREAL(NNODE)
       IFORC(17)=IFORC(16)+NNODE              ! TGAPL(NNODE)
       IFORC(18)=IFORC(17)+NNODE              ! VNORL(NDIME,NNODG)
       IFORC(19)=IFORC(18)+NDIME*NNODG        ! ELCO1(NDIME,NNODE)
       IFORC(20)=IFORC(19)+NDIME*NNODE        ! TENOI(NNODE)
       IFORC(21)=IFORC(20)+NNODE              ! CARTD(NDIME,NNODE,NGAUS)
       IFORC(22)=IFORC(21)+NDIME*NNODE*NGAUS  ! DVOLU(NGAUS)
       IFORC(23)=IFORC(22)+NGAUS              ! GPCOD(NDIME,NGAUS)
       IFORC(24)=IFORC(23)+NDIME*NGAUS        ! SHAPE(NNODE,NGAUS)
       IFORC(25)=IFORC(24)+NNODE*NGAUS        ! BSBAR(NSTR1,NEVAB,NGAUS)
       IFORC(26)=IFORC(25)+NSTR1*NEVAB*NGAUS  ! DERIV(NDIME,NNODE,NGAUS)
       IFORC(27)=IFORC(26)+NDIME*NNODE*NGAUS  ! POSGP(NDIME,NGAUS)
       IFORC(28)=IFORC(27)+NGAUS*NDIME        ! WEIGP(NGAUS)
       IFORC(29)=IFORC(28)+NGAUS              ! XJACM(NDIME,NDIME)
       IFORC(30)=IFORC(29)+NDIME*NDIME        ! RMAT2(NSTR1,NSTR1)
       IFORC(31)=IFORC(30)+NSTR1*NSTR1        ! CMEAN(3,NNODE)
       IFORC(32)=IFORC(31)+3*NNODE            ! SHAPR(NNODE,NGAUS) B-bar
       IFORC(33)=IFORC(32)+NNODE*NGAUS        ! WSTIR(NNODE,NNODE) B-bar
       IFORC(34)=IFORC(33)+NNODE*NNODE        ! VNORL(NDIME,NNODG)
       IFORC(35)=IFORC(34)+NDIME*NNODG        ! EMASS(NNODE,NNODE)
       IFORC(36)=IFORC(35)+NNODE*NNODE        ! FPCHL(NFPCH,NNODE)
       IFORC(37)=IFORC(36)+NFPCH*NNODE        ! ELDI1(NDOFN,NNODE)
       IFORC(38)=IFORC(37)+NDOFN*NNODE        ! DISIL(NEVAB)
       IFORC(39)=IFORC(38)+NEVAB              ! CARTS(NDIME,NNODE,NGAUS)
       IFORC(40)=IFORC(39)+NDIME*NNODE*NGAUS  ! SHAPS(NNODE,NGAUS)
       IFORC(41)=IFORC(40)+NNODE*NGAUS        ! GPCOS(NDIME,NGAUS)
       IFORC(42)=IFORC(41)+NDIME*NGAUS        ! DVOL2(NGAUS)
       IFORC(43)=IFORC(42)+NGAUS*NOCOA        ! ELCO2(NDIME,NNODE)
       IFORC(44)=IFORC(43)+NDIME*NNODE*NOCOC  ! GPCO2(NDIME,NGAUS)
       IFORC(45)=IFORC(44)+NDIME*NGAUS*NOCOA  ! SHAP2(NNODE,NGAUS)
       IFORC(46)=IFORC(45)+NNODE*NGAUS*NOCOA  ! ELEDG(NDIME,NNODE)
       IFORC(47)=IFORC(46)+NDIME*NNODE*NOCOC  ! VTANL(NDIME,NDIM1,NNODG)
       IFORC(48)=IFORC(47)+                   ! STDGL(NPRE4,NNODE)
     .           NDIME*(NDIME-1)*NNODG*NOCOA
       IFORC(49)=IFORC(48)+NPRE4*NNODE*IGALE  ! CTDGL(NPRE5,NNODE)
       IFORC(50)=IFORC(49)+NPRE5*NNODE*IGALE  ! STDGA(NNODE,NPRE4)
       IFORC(51)=IFORC(50)+NNODE*NPRE4*IGALE  ! CTDGA(NNODE,NPRE5)
       LFORC    =IFORC(51)+NNODE*NPRE5*IGALE
      END IF
C
      IF(LFORC.GT.LWOR1) LWOR1=LFORC
C
C**** ROUTINE FORCDY
C
      IF(KDYNA.EQ.1) THEN
       IFORD( 1)=1                            ! ELELM(NEVAB)
       IFORD( 2)=IFORD( 1)+NEVAB              ! ACELM(NEVAB)
       IFORD( 3)=IFORD( 2)+NEVAB              ! VEELM(NEVAB)
       IFORD( 4)=IFORD( 3)+NEVAB              ! ESTIF(NKOVA)
       IFORD( 5)=IFORD( 4)+NKOVA              ! DSTIF(NKOVA)
       IFORD( 6)=IFORD( 5)+NKOVA              ! CARTD(NDIME,NNODE,NGAUS)
       IFORD( 7)=IFORD( 6)+NDIME*NNODE*NGAUS  ! DVOLU(NGAUS)
       IFORD( 8)=IFORD( 7)+NGAUS              ! GPCOD(NDIME,NGAUS)
       IFORD( 9)=IFORD( 8)+NDIME*NGAUS        ! SHAPE(NNODE,NGAUS)
       IFORD(10)=IFORD( 9)+NNODE*NGAUS        ! BSBAR(NSTR1,NEVAB,NGAUS)
       IFORD(11)=IFORD(10)+NSTR1*NEVAB*NGAUS  ! DERIV(NDIME,NNODE,NGAUS)
       IFORD(12)=IFORD(11)+NDIME*NNODE*NGAUS  ! POSGP(NDIME,NGAUS)
       IFORD(13)=IFORD(12)+NGAUS*NDIME        ! WEIGP(NGAUS)
       IFORD(14)=IFORD(13)+NGAUS              ! XJACM(NDIME,NDIME)
       IFORD(15)=IFORD(14)+NDIME*NDIME        ! RMAT2(NSTR1,NSTR1)
       IFORD(16)=IFORD(15)+NSTR1*NSTR1        ! CMEAN(3,NNODE)
       IFORD(17)=IFORD(16)+3*NNODE            ! SHAPR(NNODE,NGAUS) B-bar
       IFORD(18)=IFORD(17)+NNODE*NGAUS        ! WSTIR(NNODE,NNODE) B-bar
       IFORD(19)=IFORD(18)+NNODE*NNODE        ! VNORL(NDIME,NNODG)
       IFORD(20)=IFORD(19)+NDIME*NNODG        ! ELCO1(NDIME,NNODE)
       IFORD(21)=IFORD(20)+NDIME*NNODE        ! EMASS(NNODE,NNODE)
       IFORD(22)=IFORD(21)+NNODE*NNODE        ! ELDI1(NDOFN,NNODE)
       IFORD(23)=IFORD(22)+NDOFN*NNODE        ! CARTS(NDIME,NNODE,NGAUS)
       IFORD(24)=IFORD(23)+NDIME*NNODE*NGAUS  ! SHAPS(NNODE,NGAUS)
       IFORD(25)=IFORD(24)+NNODE*NGAUS        ! GPCOS(NDIME,NGAUS)
       LFORD    =IFORD(25)+NDIME*NGAUS
C
       IF(LFORD.GT.LWOR1) LWOR1=LFORD
      END IF
C
C**** ROUTINE FORCWP
C
      IF(KPORE.EQ.2) THEN
       IFORW( 1)=1                             ! HSTIF(NEVAB,NNODE)
       IFORW( 2)=IFORW( 1)+NEVAB*NNODE         ! PSTIF(NKOND)
       IFORW( 3)=IFORW( 2)+NKOND               ! QSTIF(NKOND)
       LFORW    =IFORW( 3)+NKOND
C
       IF(LFORW.GT.LWOR1) LWOR1=LFORW
      END IF
C
C**** ROUTINE LOADPS & FIXITY
C
      NGASS=NGAUS
      IF(NGASS.EQ.1) THEN                     ! see ldsf01.f
       IF(NDIME.EQ.2) NGASS=2
       IF(NDIME.EQ.3) NGASS=3
      ENDIF
C
      ILOSU( 1)=1                             ! ALOAD(NEVAB)
      ILOSU( 2)=ILOSU( 1)+NEVAB               ! DERIV(NDIME,NNODE)
      ILOSU( 3)=ILOSU( 2)+NDIME*NNODE         ! ELEDG(NDIME,NNODE)
      ILOSU( 4)=ILOSU( 3)+NDIME*NNODE         ! GPCOD(NDIME)
      ILOSU( 5)=ILOSU( 4)+NDIME               ! GVECT(NDIME)
      ILOSU( 6)=ILOSU( 5)+NDIME               ! NOPRS(NNODE)
      ILOSU( 7)=ILOSU( 6)+(NNODE*ICHAL+4)/8   ! POSGP(NDIME,NGAUS)
      ILOSU( 8)=ILOSU( 7)+NDIME*NGASS         ! PRESS(NNODE,NDIME)
      ILOSU( 9)=ILOSU( 8)+NNODE*NDIME         ! PVECT(NDIME)
      ILOSU(10)=ILOSU( 9)+NDIME               ! SHAPE(NNODE)
      ILOSU(11)=ILOSU(10)+NNODE               ! VAREA(NDIME)
      ILOSU(12)=ILOSU(11)+NDIME               ! WEIGP(NGAUS)
      ILOSU(13)=ILOSU(12)+NGASS               ! XJACM(NDIME*NDIME)
      ILOSU(14)=ILOSU(13)+NDIME*NDIME         ! CARTD(NDIME,NNODE)
      ILOSU(15)=ILOSU(14)+NDIME*NNODE         ! PRESC(NDOFN)
      ILOSU(16)=ILOSU(15)+NDOFC               ! ELCO1(NDIME,NNODE)
      ILOSU(17)=ILOSU(16)+NDIME*NNODE         ! CARTD(NDIME,NNODE,NGAUS)
      ILOSU(18)=ILOSU(17)+NDIME*NNODE*NGASS   ! DVOLU(NGAUS)
      ILOSU(19)=ILOSU(18)+NGASS               ! GPCOD(NDIME,NGAUS)
      ILOSU(20)=ILOSU(19)+NDIME*NGASS         ! SHAPE(NNODE,NGAUS)
      ILOSU(21)=ILOSU(20)+NNODE*NGASS         ! BSBAR(NSTR1,NEVAB,NGAUS)
      ILOSU(22)=ILOSU(21)+NSTR1*NEVAB*NGASS   ! DERIV(NDIME,NNODE,NGAUS)
      ILOSU(23)=ILOSU(22)+NDIME*NNODE*NGASS   ! POSGP(NDIME,NGAUS)
      ILOSU(24)=ILOSU(23)+NGASS*NDIME         ! WEIGP(NGAUS)
      ILOSU(25)=ILOSU(24)+NGASS               ! XJACM(NDIME,NDIME)
      ILOSU(26)=ILOSU(25)+NDIME*NDIME         ! RMAT2(NSTR1,NSTR1)
      ILOSU(27)=ILOSU(26)+NSTR1*NSTR1         ! CMEAN(3,NNODE)
      ILOSU(28)=ILOSU(27)+3*NNODE             ! SHAPR(NNODE,NGAUS) B-bar
      ILOSU(29)=ILOSU(28)+NNODE*NGASS         ! WSTIR(NNODE,NNODE) B-bar
      ILOSU(30)=ILOSU(29)+NNODE*NNODE         ! VNORL(NDIME,NNODG)
      ILOSU(31)=ILOSU(30)+NDIME*NNODG         ! EMASS(NNODE,NNODE)
      ILOSU(32)=ILOSU(31)+NNODE*NNODE         ! ELDI1(NDOFN,NNODE)
      ILOSU(33)=ILOSU(32)+NDOFN*NNODE         ! CARTS(NDIME,NNODE,NGAUS)
      ILOSU(34)=ILOSU(33)+NDIME*NNODE*NGASS   ! SHAPS(NNODE,NGAUS)
      ILOSU(35)=ILOSU(34)+NNODE*NGASS         ! GPCOS(NDIME,NGAUS)
      ILOSU(36)=ILOSU(35)+NDIME*NGASS         ! ISKPO(NSKEW)
      LLOSU    =ILOSU(36)+(NSKEW*ICHAL+4)/8*IAKEW
C
      IF(LLOSU.GT.LWOR1) LWOR1=LLOSU
C
C**** ROUTINE OUTSMO & OUTGAU
C
      ISMOM=0
      IF(KSGAU.NE.0) ISMOM=1
C
      IGSMO(1)=1                              ! SMSTS(NSTR1,NPOIN)
      IGSMO(2)=IGSMO(1)+NSTR1*NPOIN*ISMOM     ! SMSTN(NSTR1,NPOIN)
      IGSMO(3)=IGSMO(2)+NSTR1*NPOIN*ISMOM     ! ACCPN(NPOIN)
C
C**** NODAL STRESSES: STREB(NSTR1,NNODE) & STREA(NNODE,NSTR1)
C     NODAL STRAINS:  SFISB(NSTR1,NNODE) & SFISA(NNODE,NSTR1)
C
      IGSMO(4)=IGSMO(3)+NPOIN*ISMOM           ! STREB(NSTR1,NNODE)
      IGSMO(5)=IGSMO(4)+NSTR1*NNODE*ISMOM     ! STREA(NNODE,NSTR1)
      IGSMO(6)=IGSMO(5)+NNODE*NSTR1*ISMOM     ! SFISB(NSTR1,NNODE)
      IGSMO(7)=IGSMO(6)+NSTR1*NNODE*ISMOM     ! SFISA(NNODE,NSTR1)
C
C**** NODAL INT. VARIABLES: SFIPB(NNUIN,NNODE) & SFIPA(NNODE,NNUIN)
C
      IGSMO( 8)=IGSMO( 7)+NNODE*NSTR1*ISMOM   ! SMSTP(NNUIN,NPOIN)
      IGSMO( 9)=IGSMO( 8)+NPOIN*NNUIN*ISMOM   ! SFIPA(NNUIN,NNODE)
      IGSMO(10)=IGSMO( 9)+NNUIN*NNODE*ISMOM   ! SFIPB(NNODE,NNUIN)
C
      IGSMO(11)=IGSMO(10)+NNODE*NNUIN*ISMOM   ! CARTD(NDIME,NNODE,NGAUS)
      IGSMO(12)=IGSMO(11)+NDIME*NNODE*NGAUS   ! DVOLU(NGAUS)
      IGSMO(13)=IGSMO(12)+NGAUS               ! GPCOD(NDIME,NGAUS)
      IGSMO(14)=IGSMO(13)+NDIME*NGAUS         ! SHAPE(NNODE,NGAUS)
      IGSMO(15)=IGSMO(14)+NNODE*NGAUS         ! BSBAR(NSTR1,NEVAB,NGAUS)
      IGSMO(16)=IGSMO(15)+NSTR1*NEVAB*NGAUS   ! DERIV(NDIME,NNODE,NGAUS)
      IGSMO(17)=IGSMO(16)+NDIME*NNODE*NGAUS   ! POSGP(NDIME,NGAUS)
      IGSMO(18)=IGSMO(17)+NGAUS*NDIME         ! WEIGP(NGAUS)
      IGSMO(19)=IGSMO(18)+NGAUS               ! XJACM(NDIME,NDIME)
      IGSMO(20)=IGSMO(19)+NDIME*NDIME         ! RMAT2(NSTR1,NSTR1)
      IGSMO(21)=IGSMO(20)+NSTR1*NSTR1         ! CMEAN(3,NNODE)
      IGSMO(22)=IGSMO(21)+3*NNODE             ! SHAPR(NNODE,NGAUS) B-bar
      IGSMO(23)=IGSMO(22)+NNODE*NGAUS         ! WSTIR(NNODE,NNODE) B-bar
      IGSMO(24)=IGSMO(23)+NNODE*NNODE         ! VNORL(NDIME,NNODG)
      IGSMO(25)=IGSMO(24)+NDIME*NNODG         ! ELCO1(NDIME,NNODE)
      IGSMO(26)=IGSMO(25)+NDIME*NNODE         ! EMASS(NNODE,NNODE)
      IGSMO(27)=IGSMO(26)+NNODE*NNODE         ! ELDI1(NDOFN,NNODE)
      IGSMO(28)=IGSMO(27)+NDOFN*NNODE         ! CARTS(NDIME,NNODE,NGAUS)
      IGSMO(29)=IGSMO(28)+NDIME*NNODE*NGAUS   ! SHAPS(NNODE,NGAUS)
      IGSMO(30)=IGSMO(29)+NNODE*NGAUS         ! GPCOS(NDIME,NGAUS)
      IGSMO(31)=IGSMO(30)+NDIME*NGAUS         ! XJACI(NDIME,NDIME)
      LGSMO    =IGSMO(31)+NDIME*NDIME
C
      IF(LGSMO.GT.LWOR1) LWOR1=LGSMO
C
C**** ROUTINE SETMTX
C
      IF(KPROB.EQ.2) THEN      !  SHELLS PROBLEMS
       ISETM( 1)=1                            ! DERIV(NDIME,NNODE,NGAUS)
       ISETM( 2)=ISETM( 1)+NDIME*NNODE*NGAUS  ! POSGP(NDIME,NGAUS)
       ISETM( 3)=ISETM( 2)+NGAUS*NDIME        ! WEIGP(NGAUS)
       ISETM( 4)=ISETM( 3)+NGAUS              ! XJACM(NDIME,NDIME)
       ISETM( 5)=ISETM( 4)+NDIME*NDIME        ! LOCOD(2,NNODE)
       ISETM( 6)=ISETM( 5)+2*NNODE            ! RMTEL(3,3)
       ISETM( 7)=ISETM( 6)+9                  ! NOROT(3,3,NNODE)
       LSETM   =ISETM(7)+(3*NNODE*NNODE*ICHAL+4)/8
      ELSE                     !  OTHERS PROBLEMS
       ISETM( 1)=1                            ! DERIV(NDIME,NNODE,NGAUS)
       ISETM( 2)=ISETM( 1)+NDIME*NNODE*NGAUS  ! POSGP(NDIME,NGAUS)
       ISETM( 3)=ISETM( 2)+NDIME*NGAUS        ! WEIGP(NGAUS)
       ISETM( 4)=ISETM( 3)+NGAUS              ! XJACM(NDIME,NDIME)
       ISETM( 5)=ISETM( 4)+NDIME*NDIME        ! RMAT2(NSTR1,NSTR1)
       ISETM( 6)=ISETM( 5)+NSTR1*NSTR1        ! CMEAN(3,NNODE)
       ISETM( 7)=ISETM( 6)+3*NNODE            ! SHAPR(NNODE,NGAUS) B-bar
       ISETM( 8)=ISETM( 7)+NNODE*NGAUS        ! WSTIR(NNODE,NNODE) B-bar
       ISETM( 9)=ISETM( 8)+NNODE*NNODE        ! VNORL(NDIME,NNODG)
       ISETM(10)=ISETM( 9)+NDIME*NNODG        ! ELCO1(NDIME,NNODE)
       ISETM(11)=ISETM(10)+NDIME*NNODE        ! CARTD(NDIME,NNODE,NGAUS)
       ISETM(12)=ISETM(11)+NDIME*NNODE*NGAUS  ! DVOLU(NGAUS)
       ISETM(13)=ISETM(12)+NGAUS              ! GPCOD(NDIME,NGAUS)
       ISETM(14)=ISETM(13)+NDIME*NGAUS        ! SHAPE(NNODE,NGAUS)
       ISETM(15)=ISETM(14)+NNODE*NGAUS        ! BSBAR(NSTR1,NEVAB,NGAUS)
       ISETM(16)=ISETM(15)+NSTR1*NEVAB*NGAUS  ! EMASS(NNODE,NNODE)
       ISETM(17)=ISETM(16)+NNODE*NNODE        ! ELDI1(NDOFN,NNODE)
       ISETM(18)=ISETM(17)+NDOFN*NNODE        ! CARTS(NDIME,NNODE,NGAUS)
       ISETM(19)=ISETM(18)+NDIME*NNODE*NGAUS  ! SHAPS(NNODE,NGAUS)
       ISETM(20)=ISETM(19)+NNODE*NGAUS        ! GPCOS(NDIME,NGAUS)
       ISETM(21)=ISETM(20)+NDIME*NGAUS        ! COOSM(NDIME,NGAUS)
       ISETM(22)=ISETM(21)+NDIME*NGAUS*NOCOX  ! COOSS(NDIME,NGAUS) 
       ISETM(23)=ISETM(22)+NDIME*NGAUS*NOCOX  ! VNOSM(NDIME,NGAUS)
       ISETM(24)=ISETM(23)+NDIME*NGAUS*NOCOX  ! DVOL2(NGAUS)
       ISETM(25)=ISETM(24)+NGAUS*NOCOA        ! ELCO2(NDIME,NNODE)
       ISETM(26)=ISETM(25)+NDIME*NNODE*NOCOA  ! GPCO2(NDIME,NGAUS)
       ISETM(27)=ISETM(26)+NDIME*NGAUS*NOCOA  ! SHAP2(NNODE,NGAUS)
       ISETM(28)=ISETM(27)+NNODE*NGAUS*NOCOA  ! DISI2(NEVAB)    not used
       ISETM(29)=ISETM(28)+NEVAB*NOCOA        ! DISP2(NEVAB)    not used
       ISETM(30)=ISETM(29)+NEVAB*NOCOB        ! VTANL(NDIME,NDIM1,NNODG)
       ISETM(31)=ISETM(30)+NDIME*(NDIME-1)*NNODG*NOCOA    ! GAPMI(NGAUS)
       ISETM(32)=ISETM(31)+NGAUS*NOCOX        ! STREI(NPRE2,NNODE)
       ISETM(33)=ISETM(32)+NPRE2*NNODE*INITV  ! VARII(NPRE3,NNODE)
       LSETM    =ISETM(33)+NPRE3*NNODE*INITV
      END IF
C
      IF(LSETM.GT.LWOR1) LWOR1=LSETM
C
C**** ROUTINE STIFMX
C
      IF(KPROB.EQ.2) THEN      !  SHELLS PROBLEMS
       ISTIF( 1)=1                               ! BMATX(NSTR1,NEVAB)
       ISTIF( 2)=ISTIF( 1)+NSTR1*NEVAB           ! DMATX(NSTR1,NSTR1)
       ISTIF( 3)=ISTIF( 2)+NSTR1*NSTR1           ! LOCOD(2,NNODE)
       ISTIF( 4)=ISTIF( 3)+(2*NNODE*ICHAL+4)/8   ! RMTEL(3,3)
       ISTIF( 5)=ISTIF( 4)+9                     ! NOROT(3,3,NNODE)
       ISTIF( 6)=ISTIF( 5)+(9*NNODE*ICHAL+4)/8   ! RIGRO(3,NNODE,NNODE)
       LSTIF   =ISTIF(6)+3*NNODE*NNODE
      ELSE                     !  OTHERS PROBLEMS
       ISTIF(1)=1                             ! BMATX(NSTR1,NEVAB)
       ISTIF(2)=ISTIF(1)+NSTR1*NEVAB          ! DMATX(NSTR1,NSTR1)
       ISTIF(3)=ISTIF(2)+NSTR1*NSTR1          ! SIGMA(NSTR1)
       ISTIF(4)=ISTIF(3)+NSTR1                ! XJACM(NDIME,NDIME)
       ISTIF(5)=ISTIF(4)+NDIME*NDIME          ! TENOD(NNODE)
       ISTIF(6)=ISTIF(5)+NNODE                ! DTENO(NNODE)
       ISTIF(7)=ISTIF(6)+NNODE                ! DISPL(NEVAB)
       ISTIF(8)=ISTIF(7)+NEVAB                ! VNORL(NDIME,NNODG)
       ISTIF(9)=ISTIF(8)+NDIME*NNODG          ! ELCO1(NDIME,NNODE)
       ISTIF(10)=ISTIF( 9)+NDIME*NNODE        ! CARTD(NDIME,NNODE,NGAUS)
       ISTIF(11)=ISTIF(10)+NDIME*NNODE*NGAUS  ! DVOLU(NGAUS)
       ISTIF(12)=ISTIF(11)+NGAUS              ! GPCOD(NDIME,NGAUS)
       ISTIF(13)=ISTIF(12)+NDIME*NGAUS        ! SHAPE(NNODE,NGAUS)
       ISTIF(14)=ISTIF(13)+NNODE*NGAUS        ! BSBAR(NSTR1,NEVAB,NGAUS)
       ISTIF(15)=ISTIF(14)+NSTR1*NEVAB*NGAUS  ! DERIV(NDIME,NNODE,NGAUS)
       ISTIF(16)=ISTIF(15)+NDIME*NNODE*NGAUS  ! POSGP(NDIME,NGAUS)
       ISTIF(17)=ISTIF(16)+NGAUS*NDIME        ! WEIGP(NGAUS)
       ISTIF(18)=ISTIF(17)+NGAUS              ! XJACM(NDIME,NDIME)
       ISTIF(19)=ISTIF(18)+NDIME*NDIME        ! RMAT2(NSTR1,NSTR1)
       ISTIF(20)=ISTIF(19)+NSTR1*NSTR1        ! CMEAN(3,NNODE)
       ISTIF(21)=ISTIF(20)+3*NNODE            ! SHAPR(NNODE,NGAUS) B-bar
       ISTIF(22)=ISTIF(21)+NNODE*NGAUS        ! WSTIR(NNODE,NNODE) B-bar
       ISTIF(23)=ISTIF(22)+NNODE*NNODE        ! VNORL(NDIME,NNODG)
       ISTIF(24)=ISTIF(23)+NDIME*NNODG        ! EMASS(NNODE,NNODE)
       ISTIF(25)=ISTIF(24)+NNODE*NNODE        ! ESTII(NKOVA)
       ISTIF(26)=ISTIF(25)+NKOVA              ! WSTII(NKOVA)
       ISTIF(27)=ISTIF(26)+NKOVA*KDYNA        ! ELDI1(NDOFN,NNODE)
       ISTIF(28)=ISTIF(27)+NDOFN*NNODE        ! CSTI1(NEVAB,NEVAB)
       ISTIF(29)=ISTIF(28)+NEVAB*NEVAB*NMEMO7M !CARTS(NDIME,NNODE,NGAUS)
       ISTIF(30)=ISTIF(29)+NDIME*NNODE*NGAUS  ! SHAPS(NNODE,NGAUS)
       ISTIF(31)=ISTIF(30)+NNODE*NGAUS        ! GPCOS(NDIME,NGAUS)
       ISTIF(32)=ISTIF(31)+NDIME*NGAUS        ! AUXMA(NEVAB,NEVAB)
       ISTIF(33)=ISTIF(32)+NEVAB*NEVAB*IAKEW  ! TRAMA(NEVAB,NEVAB)
       ISTIF(34)=ISTIF(33)+NEVAB*NEVAB*IAKEW  ! EMATX(NEVAB,NEVAB)
       ISTIF(35)=ISTIF(34)+NEVAB*NEVAB        ! FMATX(NEVAB,NEVAB)
       ISTIF(36)=ISTIF(35)+NEVAB*NEVAB        ! DVOL2(NGAUS)
       ISTIF(37)=ISTIF(36)+NGAUS*NOCOA        ! ELCO2(NDIME,NNODE)
       ISTIF(38)=ISTIF(37)+NDIME*NNODE*NOCOC  ! GPCO2(NDIME,NGAUS)
       ISTIF(39)=ISTIF(38)+NDIME*NGAUS*NOCOA  ! SHAP2(NNODE,NGAUS)
       ISTIF(40)=ISTIF(39)+NNODE*NGAUS*NOCOA  ! DISI2(NEVAB)    not used
       ISTIF(41)=ISTIF(40)+NEVAB*NOCOA        ! VTANL(NDIME,NDIM1,NNODG)
       ISTIF(42)=ISTIF(41)+                   ! CTDGL(NPRE5,NNODE)
     .           NDIME*(NDIME-1)*NNODG*NOCOA
       LSTIF    =ISTIF(42)+NPRE5*NNODE*IGALE
      END IF
C
      IF(LSTIF.GT.LWOR1) LWOR1=LSTIF
C
C**** ROUTINE ASELMT
C
      IF(NSKEW.GT.0) THEN
       ILOSY(1)=1                                  ! AUXMA(NEVAB,NEVAB)
       ILOSY(2)=ILOSY(1)+NEVAB*NEVAB               ! TRAMA(NEVAB,NEVAB)
       LSKEW   =ILOSY(2)+NEVAB*NEVAB
C
       IF(LSKEW.GT.LWOR1) LWOR1=LSKEW
      ENDIF
C
C**** MEMORY CONTROL
C
c     IF(LWOR1.GT.MWORK1)
c    . CALL RUNEND('ERROR IN ADDWOR: LWOR1            ')
C
c**** OTHER CONTROLS
C
c     IF(MPRE1.LT.NPRE1)
c    . CALL RUNEND('ERROR: MPRE1 LT NPRE1 - check gend_om.f')
c     IF(INITV.GT.MNITV)
c    . CALL RUNEND('ERROR: INITV LT MNITV - check gend_om.f')
c     IF(MPRE2.LT.NPRE2)
c    . CALL RUNEND('ERROR: MPRE2 LT NPRE2 - check gend_om.f')
c     IF(MPRE3.LT.NPRE3)
c    . CALL RUNEND('ERROR: MPRE3 LT NPRE3 - check gend_om.f')
c     IF(IGALE.GT.MGALE)
c    . CALL RUNEND('ERROR: IGALE LT MGALE - check gend_om.f')
c     IF(MPRE4.LT.NPRE4)
c    . CALL RUNEND('ERROR: MPRE4 LT NPRE4 - check gend_om.f')
c     IF(MPRE5.LT.NPRE5)
c    . CALL RUNEND('ERROR: MPRE5 LT NPRE5 - check gend_om.f')
c     IF(MDISR.LT.NDISR)
c    . CALL RUNEND('ERROR: MDISR LT NDISR - check gend_om.f')
c     IF(MDISO.LT.NDISO)
c    . CALL RUNEND('ERROR: MDISO LT NDISO - check gend_om.f')
c     IF(MPREA.LT.NPREA)
c    . CALL RUNEND('ERROR: MPREA LT NPREA - check gend_om.f')
C
c     IF(KDYNA.GT.MDYNA)
c    . CALL RUNEND('ERROR IN ADDWOR: KDYNA          ')
c     IF(ISMOM.GT.MSMOM)
c    . CALL RUNEND('ERROR IN ADDWOR: ISMOM          ')
c     IF(KRENU.GT.MRENU)
c    . CALL RUNEND('ERROR IN ADDWOR: KRENU          ')
c     IF(KPORE.GT.MPORE)
c    . CALL RUNEND('ERROR IN ADDWOR: KPORE          ')
c     IF(NHOUR.GT.MHOUR)
c    . CALL RUNEND('ERROR IN ADDWOR: NHOUR          ')
c     IF(NSKEW.GT.MSKEW)
c    . CALL RUNEND('ERROR IN ADDWOR: NSKEW          ')
C
      ITERMA=1
      IF(ITERME.LE.0) ITERMA=0                   ! uncoupled prob.
C
c     IF(ITERMA.GT.MTERMEM)
c    . CALL RUNEND('ERROR IN ADDWOR: ITERME         ')
C
C**** DEFINE STARTING POSITION OF MEMORY
C
      LBYW1=LWOR1*8
C
      RETURN
      END
